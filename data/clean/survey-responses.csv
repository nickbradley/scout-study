Q1,repo_url,Duration (in seconds),RecordedDate,participantID,Q22,Q21,Q19,Q20,Q10,SC0,Q11,Q12,Q14,Q15,Q16,Q17,Q9
"Consent Form

Surfacing Web Snippets in the IDE

 

**Please complete this study on your desktop computer.**



Principal Investigator

Reid Holmes, Associate Professor, The University of British Columbia, Department of Computer Science, rtholmes@cs.ubc.ca.



Co-Investigators

Thomas Fritz, Associate Professor, University of Zurich, Department of Informatics, fritz@ifi.uzh.ch.

Nick Bradley, Graduate Student, The University of British Columbia, Department of Computer Science, ncbrad@cs.ubc.ca.



Purpose

Performing web searches while programming interrupts developers by taking them away from their integrated development environments (IDEs). This study evaluates a novel tool to integrate web search into the IDE.

 

Study Procedure

If you choose to participate in this study you will complete a 5 minute training task, six short programming tasks, and an exit survey. These will all take place in your web browser and the total time will be less than 90 minutes.



Participation

Your participation in this study is voluntary, but you will be compensated if you successfully complete the mandatory tutorial, attempt all of the programming tasks, and provide appropriate feedback in the exit survey. If you are a worker on Mechanical Turk, you will also be required to demonstrate proficiency with JavaScript by completing three short prescreening questions.



You are free to withdraw from the study at any point by closing your browser or navigating away from the study website. If you do so before you have completed the study, we will only use data collected up to this point for basic aggregated statistics (e.g., to determine how many participants started and completed each task). If you would like to withdraw from the study and not have your data used at all, you can contact the principal investigator via email (rtholmes@cs.ubc.ca) and ask for your data to be destroyed. To allow us to identify your data, you must include your participant ID that is displayed during the study. You can have your data removed even if you have been compensated.



Data, Storage and Confidentiality

Your confidentiality will be respected. Your study results will be assigned a random participant identifier and stored and analyzed using only this identifier. No data which makes you personally identifiable will be collected during this study. As part of this study, we will record your program code (including unsuccessful solutions) and your interaction with the web search extension on GitHub. Note that because GitHub is hosted in the USA, any data stored there is subject to the USA Patriot Act which may limit the privacy of the data. All data will be removed from GitHub once the study is complete. It will be stored in encrypted format on UBC servers in Canada and made accessible only to members of the research team. We will include statistical summaries and select quotes in publications. Your anonymous usage data of the search extension may be shared publicly so that other researchers can verify and extend our findings. Once released, you will not be able to withdraw your data.



NOTE: During the study it may be possible for other participants to access your program code as the repositories are stored in a shared account. Upon completion of the study, access to the repository is revoked.



Conflicts of Interest

Neither the study's principal investigator nor any of the co-investigators have any conflicts of interest to declare.

 

Who can you contact if you have complaints or concerns about the study?

If you have questions about the study or the data we collect, please contact Nick Bradley (ncbrad@cs.ubc.ca) or the principal investigator.



If you have any concerns or complaints about your rights as a research participant and/or your experiences while participating in this study (H21-03310), contact the Research Participant Complaint Line in the UBC Office of Research Ethics at 604-822-8598 or if long distance e-mail RSIL@ors.ubc.ca or call toll free 1-877-822-8598.

 

Your unique participant ID is [Field-participantID] (this is not your completion code). Please include this ID If you need to contact us.

 

 By continuing, you are consenting to participate in this study. 



If you have a Mechanical Turk or Prolific ID, please enter it below.",repo_url,Duration (in seconds),Recorded Date,participantID,What is your gender? - Selected Choice,In what capacity do you work with source code? - Selected Choice,How many years have you worked in software development?,How many years have you been programming in JavaScript?,"Scout presented search results in the two formats shown.





Which format made it easier to locate the information you were searching for?",Score,What are the primary strengths and weaknesses of the two formats shown by Scout?,Do you have any further suggestions about how the formats could be improved?,For what types of searches do you think Scout's call signatures would be helpful and why?,What percentage of your searches do these represent?,For what types of searches do you think Scout's call signatures would not be helpful and why?,What percentage of your searches do these represent?,"How well did Scout's terms align with those you manually included in your searches? Are there additional terms you would include, or terms you would exclude?"
"{""ImportId"":""QID3_TEXT""}","{""ImportId"":""repo_url""}","{""ImportId"":""duration""}","{""ImportId"":""recordedDate"",""timeZone"":""America/Denver""}","{""ImportId"":""participantID""}","{""ImportId"":""QID29""}","{""ImportId"":""QID35""}","{""ImportId"":""QID7_TEXT""}","{""ImportId"":""QID8_TEXT""}","{""ImportId"":""QID23""}","{""ImportId"":""SC_03r5aWYmdJ2hPxk""}","{""ImportId"":""QID27_TEXT""}","{""ImportId"":""QID37_TEXT""}","{""ImportId"":""QID24_TEXT""}","{""ImportId"":""QID51_TEXT""}","{""ImportId"":""QID26_TEXT""}","{""ImportId"":""QID50_TEXT""}","{""ImportId"":""QID44_TEXT""}"
A2ALWT2BUSXD83,https://github.com/prentic/31472_2,3928,2022-09-27 10:15:36,31472,man,I am a professional developer and my most recent job title is,5,3,A was easier than B,32,"A gave you an example of what solution the result would provide, although was a little more cluttered. B was standard.",Try to make A less cluttered.,"Maybe for beginners who are not very familiar with types? ",3,Most searches.,97,I don't think the terms were specific enough to be particularly useful. I added more terms.
"",https://github.com/prentic/99741_1,5843,2022-10-18 12:04:49,99741,woman,"I am a student, and I work with source code as part of my studies",5,3,A was easier than B,34,"For A:
I got a preview of the answers, including what was deemed the correct answer and the most upvoted answer. This narrowed my focus to one code snip-it and a couple times, I didn't need to view the entire stack overflow page to answer the question.

Some helpful additions could be a summary of the question and including non-code (like their comments) in the solution. For areas I was less familiar with, I needed the additional context to determine what code I should write. For familiar functions, the preview was enough of a friendly reminder to write a solution.

For B:
It's in the IDE so I can look at both the answer and my code simultaneously (Scout does this too). For weaknesses, I had to click to view the question/answer and wasn't sure if it was useful until it had be viewed in full.

",,"Searches where I am more familiar with the methods but cannot remember how to use them. Also, issues where I don't need a deep understanding of the API, but just want to complete a relatively simple task. I think both of these align with when I would use stack overflow versus API documentation/blog posts. ",85,"In cases where I need a deep understanding of how the API works - maybe it is complicated, confusing or easily misused. In these cases, I would turn to blog posts or the API documentation.",15,"The terms aligned well. I can't think of any terms to include/exclude. "
"",https://github.com/prentic/96947_3,4432,2022-10-19 22:30:14,96947,man,I program as a hobby,0,10,A was easier than B,31,"A shows a code snippet right away, so it's easier to determine if the answer is applicable to whatever the task at hand is. And, it's good for refreshing your memory on what order variables should be in when calling the function.","It'd be nice if, in the example above, A would pick up on the usage of reduce() in the answer and have a line at the top showing what parameters the function accepts, rather than just based on its usage in that specific answer.","I think it'd be helpful for searches where you know what you want but you can't remember what it is specifically or how to do it. E.g. shift() vs. pop() or sort((a,b)=>a-b) vs. sort((a,b)=>b-a)",95,If you were looking for thorough explanation on the usage of a specific function.,5,"I added ""js"" once or twice out of habit because I didn't realize it adding those terms."
"",https://github.com/prentic/99907_4,2618,2022-10-25 17:28:53,99907,man,"I am a student, and I work with source code as part of my studies",1,1,A was easier than B,20,"A extracts the most amount of information, but it's not actually that helpful I think, because when I look at Stack Overflow I want to see the explanations too. Maybe include the top post's text as well as code?",,Syntax questions,75,,,"Didn't get any previews on my manual searches. "
"",https://github.com/prentic/32156_1,4039,2022-10-25 17:42:24,32156,woman,"I am a student, and I work with source code as part of my studies",2,1,A was easier than B,34,First one can immediately suggest which functions can be useful without needing to click in-between pages. I don't think B is better in any way.,It would be nice to include search results from more websites and official doc,"When we are looking for specific functions to use. This is especially helpful when we already know what some functions we find do but we just needed something to help us recall how to use them, and when similar functions exist in other programming languages we are more familiar with.",80,"When we are more lost on how to use a certain technology and not sure where to start. In this case a more general documentation would be more helpful. For example, I have never used Express and did not have a clue about how to set up new routes but it was hard to find a general overview of Express and functionalities.",20,pretty well
"",https://github.com/prentic/93100_1,2321,2022-10-25 17:57:39,93100,man,"I am a student, and I work with source code as part of my studies",1,0.3,Neither format was easier,29,"A) is more straight forward, but doesn't always show what I want
B) has more detail and usually I can get it in one/two SO posts, but less convenient than A.",,very basic built in functions / when just starting out with a new language,30,anything complex that involves interaciton specific apis/documentation,70,"would include static, etc. for last task - but i dont think its reasonable to expect scout to pick up on these things when it doesnt show up in code"
"",https://github.com/prentic/76613_4,3126,2022-11-04 17:34:27,76613,man,"I am a student, and I work with source code as part of my studies",3,2,A was easier than B,34,"B provides more context through the text surrounding the snippets, but at the same time it makes it harder to access the code that seems good enough to me 90% of the time.",Having both at once or being able to switch instantly would be ideal,Those where I just need to know an API call format,90,Where I need specific details about how the API works internally,10,"I think these align very well with what I would include. In fact, I did include the term ""moment"" anyway because I didn't realize it was included by Scout already."
"",https://github.com/prentic/69321_1,2613,2022-11-09 14:17:07,69321,man,"I am a student, and I work with source code as part of my studies",2,1,A was easier than B,28,"main weakness for both is the small screen space restricting content and resulting in more clicks. 
main strength for A is highlighting the useful part and saving time to scroll.",ability to horizontal scroll to see the whole question.,"api calls, different method usages.",60,"descriptive questions. for example, how to sort in javascript?",40,"i might remove javascript, as express kind of hints that it is javascript."
5aede0d30ccc2e0001858c7e,https://github.com/prentic/30065_1,3042,2022-11-09 14:58:15,30065,man,I am a professional developer and my most recent job title is,2,3,B was easier than A,12,"first doesn't give quite the explanation, maybe because the 2nd is more look alike of what I want to read",it will depend on people using it,"basic operations or methods like sum,reduce,filter",25,extensive issues that a simple search will not help,75,they seemed to align really well with the searches
5c19b6e25ead950001bdb5a8,https://github.com/prentic/48128_4,3913,2022-11-09 15:08:59,48128,man,"I am a student, and I work with source code as part of my studies",2,0,A was easier than B,37,"You might need to familiarize yourself a little with the parameters, what they are and when to use them, which is expected anyways, Scout just makes it a lot easier by removing the unnecessary and distracting information.","They were so good, forget what I said about the ""Possible Suggestions"" ones, they might just confuse the dev even more. It's perfect as it is.","All those included in trending packages maybe, not sure how could it perform with fully customized / closed-source code.",98,Complex problems that probably talk about very specific personal problems that might've not been done before or asked about online yet.,2,"It'd be great if developers aligned more to one same language or form of speaking. Some still don't make sense to me, why ""cookies""? They are food. But I get it sometimes, some correlations helped those devs have a better memory and therefor perfomance, so, I am not sure, I found Scout didn't miss any, I understood most of them, it could maybe offer a dictionary add-on, a brief explanation of what every single word means and how are they used in the software engineering field. I am not really sure what ""moment()"" meant, also ""reducer functions"" sound to me like a function that simply decreases a counter by 1; splice() I don't know that well either, maybe explain why three ""==="" and not two ""=="" for whoever fool forgets, like me; amongst others. I've been forcing myself to use the terms the majority of devs agree is the best practice, this way, it's easier to rea for everyone."
5a11a7d0f2e3460001edbe35,https://github.com/prentic/92307_1,2161,2022-11-10 04:52:50,92307,man,I am a professional developer and my most recent job title is,8,5,A was easier than B,34,A was quicker but harder to read/navigate and B was slower but was easier to understand what you were reading,"None, I think given the space A does the job better though (just takes a little getting used to)",Searching regarding array filtering and reducing would be very helpful,30,Anything relating to specific software or very broad searches such as 'regex',10,"They were perfect, wouldn't have changed them at all."
A1IU5OP7BBZHZ7,https://github.com/prentic/14987_4,3989,2022-11-10 10:39:04,14987,man,"I am a student, and I work with source code as part of my studies",1,1,A was easier than B,35,"It was tough to refer the complete page in the IDE in B but it was easier to look into A ",none,It would be helpful for people to take a quick look into the syntax of a particular function but to look into much more detail one has to visit the website,70,For very detailed examples with more number of lines of codes,30,It was sufficient to work with
5f60713e595007000a8e1da7,https://github.com/prentic/91073_2,2508,2022-11-11 09:53:40,91073,man,I program as a hobby,5,4,A was easier than B,27,A shows results in a nice way but sometimes it can miss something and we don't see the whole answer. B is standard google search so it's kinda pointless and you cannot really have 2 or more of scouts open like you can have tabs in browser.,,For easy things like working with arrays when it's like 1 line of code to do the thing you have to do,75,More complex ones like the express one. You have to understand the concept not only copy the code.,25,"It worked only sometimes. For some reason it didn't see the moment package. "
6095271790f34f6d374ac3e3,https://github.com/prentic/55264_3,3375,2022-11-11 09:56:49,55264,woman,"I am a student, and I work with source code as part of my studies",2,0,A was easier than B,31,"A shows the code, which is good but it's harder to get the context where the code comes from",,when we want simples things that don't depend a lot on context,70,very specific things,30,very well
5e14d563c4e155ae93907ae1,https://github.com/prentic/57414_2,4818,2022-11-11 10:31:56,57414,man,I am a professional developer and my most recent job title is,29,26,A was easier than B,21,The strength of A is that you can scan very quickly to find something that looks right. Vs B where you have to click through results. The weakness of both is that the defautl panel width is narrow and the code doesn't wrap.,"Format A: I didn't see much value in having separate Usage/Code tabs. Just put Usage above Code (or just get rid of it), so there's less clicking through. format B: as I mentioned in the task, is there a way you could pull out code snippets that isn't pretty, just function names maybe, or something? Otherwise it's just a less-useful Google search. Also I should mention, I felt like I only looked at the titles and not the excerpt when scanning through.","I don't know, I didn't even look at the signatures, I didn't think about them.",0,"All of them. I need to see the code to assess if it looks like a good fit, I didn't look at the signatures.",100,"The terms are helpful and what I would include (especially the language, I'm glad I didn't have to repeat that each time). I haven't used the tool enough to really answer the rest of your question."
581ccd016c73180001fa5b2a,https://github.com/prentic/62905_2,3944,2022-11-11 12:37:52,62905,man,I am a professional developer and my most recent job title is,20,3,A was easier than B,34,"Option A seemed more helpful as I was able to quickly see the code snippets available and could experiment quickly without having to think too much. The weakness of Option A was that it wasn't obvious what the rationale was for the code snippets so you could end up using something which was fundamentally wrong. Option B seemed more like a google search. The primary strength of this option was being able to see the explanation of the code samples / answers. The disadvantage was that I had to dig in and spend more time reading information.  ",For option A it might be worth returning the results on the basis of the least complex options first. There were a few occasions where the first results seemed overly complex for the requirement.,In situations where you quickly need to get some sample code. This would be helpful as it would save you time.,70,When the problem is complex and very specific. I feel the answers returned from Scout might vary too much from what I require.,30,"I think the terms worked well and in the main I would not have changed any. I think  for possibly in the example above I would not have used path but perhaps something like ""content"". "
5ee232f2b970662cfa352567,https://github.com/prentic/36615_3,4137,2022-11-11 13:29:17,36615,man,I am a professional developer and my most recent job title is,10,2,A was easier than B,31,"The first way is nice because everything is right there on one page and I can quickly hop around to different solutions and easily view them, but it doesn't quite give me maybe enough context into the answers. The second way is nice because it basically gives a view of google right in the ide with stackoverflow answers right at the top, but it's not as quick to use and I can't easy see and compare answers.","not really, although it might be helpful to be able to expand out a little more information in the first view, or add a little more to the second view so that I have a little more context before clicking into it.","Maybe if I'm looking for how to do some sort of operation, it makes it easy to see what the different answers are calling so I can see what the different options are.",50,"Maybe if I'm looking for more of like an algorithm rather than just a single method call, because I would need to see a lot more information to decide if it's useful",50,"They seemed to align well. It didn't try to infer too much, but what it did infer seemed appropriate and helpful."
612fe64ec0e4e3b001e553ef,https://github.com/prentic/17135_4,3912,2022-11-13 08:45:23,17135,man,I am a professional developer and my most recent job title is,1,2,A was easier than B,37,"A you can check quickly the code and see if it really works faster, B is just a ""copy"" of the webpages but on a sidebar",I think A was a really good format,Checking if hte code works faster,70,for theoric concepts,20,"It did align but most of the searches did not have the reponses, maybe a filter that checks whether or not it has the check on a response"
5f9aba6600cdf11f1c9b915c,https://github.com/prentic/20964_4,2803,2022-11-13 14:56:41,20964,man,I program as a hobby,3,2,A was easier than B,32,It wasn't always displayed but it was easy to use,no,"simple, easy, short problems",75,"For complex problems because it requires understanding ",25,sometimes it didn't find everything
AKH0WFAUBUKUS,https://github.com/prentic/49394_3,3433,2022-11-13 22:51:13,49394,man,I am a professional developer and my most recent job title is,6,6,A was easier than B,40,"For ""A"", it shows code usage and syntax then and there itself which is a great strength. No weakness for this format.

For ""B"" its straight up stackoverflow, so we will have to dig through the comments, code, links and all.","Maybe for ""B"", showcase the code snippets of the answers inside a toggle button. That way user can decide whether he wants to read entire answer or see only the code.","In knowing the syntax to a function, finding out correct function to achieve the task.",30,0. If a signature is provided that means the search was related to a specific function. Knowing the proper syntax is any way useful for end user.,40,"In the given automated tasks no, but maybe in future tasks if I can't find a proper answer I might modify the search terms."
ARTQWWNFA7IOD,https://github.com/prentic/52467_2,3144,2022-11-13 23:19:19,52467,man,I program as a hobby,5,2,A was easier than B,31,"B format shows the functional solution to the problem, s its helpful when developer know the exact functionality. A Format helpeful after developer understood the Format B.",Realtime recommendation or suggestion on the basis of developer searching pattern,scount suggestion of term to search helpful and quick to get what I am looking for,70,"complex and more functional things to understand ",80,To some extent I need to add some terms to get the proper solution
614e2b2bd900d5f91096ac12,https://github.com/prentic/65727_4,2315,2022-11-15 16:17:55,65727,man,"Other, please specify",6,1,A was easier than B,35,Format A is easier for me to parse. Format B feels very similar to typical Google search result formatting.,I have no suggestions.,Scout's call signatures are most helpful for simple searches.,70,Scout's call signatures would not be helpful when the search is complicated and can not be answered using a simple 1 line solution.,30,Scout's terms well-align with those that I would have manually included.
5e801ffa2b3c3870ecdf7865,https://github.com/prentic/73430_4,2638,2022-11-15 22:03:58,73430,man,"Other, please specify",17,2,A was easier than B,31,Format A saves time,No,Search for a specific function call,100,I have noticed that Scout's call signatures were not helpful,0,Scout's terms work better than my manual search
5e1b7200b2922539b4ef3f6f,https://github.com/prentic/29016_3,2339,2022-11-17 17:25:48,29016,woman,I am a professional developer and my most recent job title is,15,1,A was easier than B,37,"A prepares code snippets ready to use. For simple searches, this is great. For more complicated searches, this might not be sufficient, and additional reading of explanations or tradeoffs might be necessary. B can fit more on a screen.",,"for simple, standard searches",50,"performance related issues, concrete bugs",50,timestamp of when the solution was provided
5d0c185215f65d00017699f2,https://github.com/prentic/87190_1,2254,2022-11-17 17:40:22,87190,prefer to self-describe,I am a professional developer and my most recent job title is,3,1,Neither format was easier,22,"The first is easier to get a quick glimpse, the latter helps me actually see what's going on.",Make it work with copy/paste.,"I don't really find them useful, I don't think",10,Most of them!,90,it did a really good job looking for what I wanted.
60723c224e9193e5d5fe5712,https://github.com/prentic/69302_1,4618,2022-11-18 05:56:39,69302,non-binary,I am a professional developer and my most recent job title is,8,3,A was easier than B,28,"I think A lets you get at the code snippet more quickly which is useful if you already know what you're going for, but B invites you to get the context behind the question which is more useful if you're not sure what's going on","for format A sometimes the whole code snippet could be shown instead of having it split. I think adding a ""copy"" button would be useful",when trying to come up with a concise way of writing a function that does something that has to be fairly common,40,"when having a very specific problem in mind that needs an obscure function to work or a complex/articulate piece of code. More ""algorithmic"" question than syntax question",60,"fairly well, I liked having the language already embedded"
A18TCR555RWUZV,https://github.com/prentic/12830_1,3082,2022-11-18 09:33:05,12830,man,I program as a hobby,3,8,A was easier than B,40,I could easily see some of the required code and recognize if it would help much faster.,None.,Trying to get quick snippets and use the right syntax.,60,Trying to understand how the function actually works.,40,"They were perfect, I don't have any more requirements than that."
62a1d78571f418b5e6fc26fb,https://github.com/prentic/92652_3,3796,2022-11-21 13:02:06,92652,woman,I am a professional developer and my most recent job title is,3,3,A was easier than B,35,A made it easier to find a solution whlist B required a bit more work to find a solution,"With A, i would like a small summary about the code is doing or mdn links ",when the question is commonly asked and no unique,40,"if it is a weird nuiance and not very commonly asked ",20,8/10 times scout provided me with very good article and stackoverflow links to get a solution. i wish it filtered out results with no answers/solution though
5c368011a05b4a000143acbc,https://github.com/prentic/63814_1,5065,2022-11-21 13:59:12,63814,woman,I am a professional developer and my most recent job title is,4,4,A was easier than B,35,"A doesn't show much context, so in case it's needed, B is better.",A mix of these two formats would be nice in some cases,"For code in which one can make simple typos, which are hard to realize",20,In complex cases,50,The terms that were provided were always the ones I needed.
A2QD9PJUKW7PKK,https://github.com/prentic/20998_2,3274,2022-11-21 23:53:32,20998,man,I am a professional developer and my most recent job title is,8,8,A was easier than B,33,The format A has the top best solution listed which makes it easier than scrolling and finding in format B. But sometimes reading comments on format B makes the solution easier to understand.,Format A can be improved by adding comments or description for the solution for understanding and learning of the programmers. Format B is fine as we can click on it to see all answers in SO.,It is easier when the solution is one or 2 lines,90,"When the solutions requires multiple lines of code, the programmer often needs to see an output of the mentioned solution to identify if the solution fits the requirement or needs to alter the code.",10,The terms added by Scout were perfect to get the desired solution on top
5aebb10baa05510001ff6500,https://github.com/prentic/32919_2,2862,2022-11-22 16:00:13,32919,man,I am a professional developer and my most recent job title is,4,2,A was easier than B,37,"A - seeing the code
B - more familiar result format, less to read",,"General utility/helper functions, short/basic logic, popular frameworks",70,"Verbose results, naming conventions, obscure libraries",30,"Well-aligned, they are terms I would've used and made the search easier"
5eb81d360943fe74d6aba62b,https://github.com/prentic/59191_3,6133,2022-11-22 16:08:59,59191,man,I program as a hobby,1,1,A was easier than B,38,"Format A is quicker to provide a working example whereas format B provides a better overview and the context in which the solution is applicable. Format A is better for helping with the syntax needed whereas format B is more helpful in ensuring that the solution matches what you are looking for except for ",It might be useful to have line wrapping in format A so that each line of code can be viewed without having to horizontally scroll.,Searches for usage examples when not familiar with the call parameters is when this would be most helpful to me. Seeing examples of how each call is made returned in the search results is what I would be looking for when searching like this.,25,Searches in which I am not specifically looking for assistance or examples on how to call a method but rather when or why it should be used is an instance in which Scout's call signatures might not be helpful. If I am already familiar with a method then I would not need that kind of help.,25,I think Scout did a better job than I did manually for constructing search queries and they aligned with the best that I could come up with. I believe the additional terms  provided are something that I would include in order to narrow the search results.
6168b61ad8c0d63b37a92109,https://github.com/prentic/17380_3,6556,2022-11-22 19:32:47,17380,man,I program as a hobby,0,0.5,Neither format was easier,17,"The strength of format A is that it immediately provides some potentially useful lines of code that might be relevant to the search result. It's weakness is that those lines of code might be relatively hard to understand without context. The strength of format B is that it includes text that may describe the search result in a useful way beyond the title. The weakness is that the text might not be very useful for reasons such as the text being out of context or too specific. ","Tooltips or other ways to view text snippets related to lines of code in format A could be useful. ","They could be useful for searches for a particular way to do something that can be done using certain functions called in certain ways that the user does not already know about. Scout's call signatures would make the functions and basic usage of them readily apparent. They also might be slightly useful for searches about the behavior of certain functions when used with certain call signatures, so the user can quickly identify results relevant to those call signatures. ",30,"They might not be very helpful for searches where the user is interested in specific details beyond the call signatures, such as more details about behavior of functions and other lines of code, so the presence of the call signatures might not be enough to show that a result is relevant enough to be worth clicking on, and the call signatures themselves are too surface-level or already known by the user. They also might not be very useful for when the user is looking for generally how to accomplish something that requires a relatively high number of lines of code. ",70,"They seemed to align well. When the search was done automatically, it found very relevant results. However, when it was not done automatically, it was relatively difficult to find useful results. I might include terms from comments that were formatted in certain ways. I am not sure what terms I would exclude."
5dd370b6e4bf2035a6b93643,https://github.com/prentic/42904_3,3161,2022-11-23 20:49:28,42904,man,I am a professional developer and my most recent job title is,3,3,A was easier than B,30,A gives me an idea of how to code and is very easy. B has unnecessary details that I need to understand,no,If I used specific terms from the programming language in my search text,70,When I don't have terms used in the programming language in my search text,30,It pretty much aligned with my searches. I used the same terms. I would include more terms related to the actual search.
5bdce7ec9b3c6a000115718f,https://github.com/prentic/81897_2,1409,2022-11-24 18:46:32,81897,man,I am a professional developer and my most recent job title is,7,3,A was easier than B,28,"Strength of A is being able to easily discern which function signature might be the one relevant to me, and seeing code examples very easily. Disadvantage is a cluttered search bar. 
Strength of B is compact data, and some textual context on what the question is asking, which makes it less likely to find a dudd. Weakness is that it its not any better than a regular google search.",Don't use the default font for B.,Searches that deal with basic manipulation of common data structures utilizing internal or very common dependencies.,60,"more complex questions interacting with multiple APIs, design/architecture questions",40,Yes they were pretty much the same as the words that I would use to search for these functions.
60aa6d8db045e2b649a4a08c,https://github.com/prentic/39681_2,4212,2022-11-24 21:28:20,39681,woman,"I am a student, and I work with source code as part of my studies",0,0.2,A was easier than B,40,"A was just better imo, no weaknesses compared to the other",I really think the code snippets are amazing. Maybe highlight what is a variable and what isnt,"All of them, especially those which need a specific block of code",90,"I really cant think of much, maybe one where there are a ton of variables present",10,"I think that was helpful, that was a hard task though I didnt understand the question well"
59a2f6d14d25e800012fcbde,https://github.com/prentic/61514_4,4594,2022-11-25 15:32:07,61514,man,I am a professional developer and my most recent job title is,9,4,A was easier than B,30,"The strength of A allows you to find solutions and apply them quickly, where as B takes extra time- however you get a more in depth look after prying into the link.","I would say a combination of both would do the trick, the ""top"" suggestions could be at the top in format A, where as the rest can be listed in B's style.","I think that Scouts call signatures work fine on finding help with issues that pertain to a  specific function related problem, for example finding the right parameters or formatting for a specific function, like Array.reduce shown above. Sometimes, especially for those who work multiple languages like myself- formatting and syntax is something that can fly over our heads. Moving from a less syntax heavy language could be daunting, but something like scout could be helpful.",50,"I do not think Scout's call signatures would be helpful looking for help understanding a function, where code explanations are used- in this case, everything may blend together and look like an eyesore instead of actually helping.",25,"I think that the terms given were adequate, on the last task I should have included express, as I think that was not a term there."
60ceeec3a0bed4a1e603b8d7,https://github.com/prentic/27362_3,2103,2022-11-25 16:36:39,27362,man,I am a professional developer and my most recent job title is,8,2,A was easier than B,26,"I think format A is great for simpler tasks that need one library/API. However, if the task is more complex and requires stringing multiple libraries together, I'd prefer view B so that I can read the thread.","For view B, I'd want any other stackoverflow links that I click to keep me within Scout instead of taking me to an external browser tab.","These call signatures would be helpful if I already know a specific task I want to do (e.g. ""Subtract from a date"") and am reasonably sure that there's a standard library to accomplish that task.",70,These wouldn't be useful for more complex searches that require the use of multiple complex libraries/APIs to resolve.,30,It aligned pretty well. I wouldn't include or exclude any additional terms.
600e06e28546f25be49539fa,https://github.com/prentic/46094_2,5476,2022-11-26 11:14:03,46094,man,I am a professional developer and my most recent job title is,10,5,A was easier than B,33,"In A I was able to view the code atleast but in B the links didn't open in safari. Although in B it was only showing the code, sometimes you need some context of the code given in the answer on stackoverflow to understand the code.",The search could be faster and there should be an option to either expand the Scout window size or open the links in new tab/window.,Nothing comes to mind right now,30,When you need to understand the context behind the answer above results would not be helpful,70,it worked perfectly to get the results. Not sure why but the search was a bit slower then you would search on google
5ad0f1934d061300011b0a4d,https://github.com/prentic/21752_4,3314,2022-11-26 14:34:01,21752,man,I am a professional developer and my most recent job title is,8,5,A was easier than B,33,"Format A filters through the text which uses less mental energy to process. Format B shows me a snippet of text that can explain a feature that I might need to know more about. ",None,"Quick language de-facto standards to copy-and-paste, without needing to know more information, because you usually understand the basic concept and simply want to make sure you dont trigger a syntax error or something of the sort.",80,"Language intricacies that need to be explained in human language due to complexity, because you need to know more details than just what the call is.",20,Scout did a wonderful job of aligning terms. I'd really like to see how it works in a more convoluted code base.
