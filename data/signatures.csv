pid,tid,searchSeq,resultRank,rank,text
1,sort,0,0,0,T[].sort(function): this
1,sort,0,0,1,sort(function)
1,sort,0,0,2,"sortBy(unknown, string)"
1,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
1,sort,0,0,4,"function.sort_by(string, boolean, function): function"
1,sort,0,0,5,sort(typeof mycomparator)
1,sort,0,0,6,function[].(): function[]
1,sort,0,0,7,"sortBy(any[], object): any[]"
1,sort,0,0,8,reverse()
1,sort,0,0,9,T[].sort(): this
1,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
1,sort,0,1,1,"function[].sortBy(object[], string): any[]"
1,sort,0,2,0,sort(function)
1,sort,0,2,1,T[].sort(function): this
1,sort,0,2,2,T[].push(T[]): number
1,sort,0,3,0,ObjectConstructor.keys(object): string[]
1,sort,0,3,1,T[].sort(function): this
1,sort,0,3,2,sort(typeof compare)
1,sort,0,4,0,T[].reverse(): T[]
1,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
1,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
1,sort,0,4,3,ObjectConstructor.keys(object): string[]
1,sort,0,4,4,T[].sort(): this
1,sort,0,4,5,T[].forEach(function): void
1,sort,0,5,0,sort(function)
1,sort,0,5,1,T[].sort(function): this
1,sort,0,5,2,"object[].sortBy(string, string)"
1,sort,0,5,3,sortBy(string)
1,sort,0,5,4,reverse(unknown)
1,sort,0,5,5,sort(typeof compare)
1,sort,0,5,6,dynamicSort(string): function
1,sort,0,5,7,"dynamicSortMultiple(string, string): function"
1,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
1,sort,0,5,9,"sortBy(object[], string)"
1,sort,0,6,0,T[].sort(function): this
1,sort,0,7,0,T[].sort(function): this
1,sort,0,8,0,T[].sort(function): this
1,sort,0,8,1,sort(function)
1,sort,0,9,0,sort(function)
1,sort,0,9,1,T[].sort(function): this
1,sort,0,9,2,dynamicSort(string): function
1,sort,1,0,0,T[].sort(function): this
1,sort,1,0,1,sort(function)
1,sort,1,0,2,T[].sort(): this
1,sort,1,0,3,Float64Array.sort(): this
1,sort,1,0,4,sort(typeof compareNumbers)
1,sort,1,0,5,String.charCodeAt(number): number
1,sort,1,0,6,"(unknown, unknown, unknown, unknown, unknown, unknown, number)"
1,sort,1,0,7,reverse()
1,sort,1,0,8,sort(typeof sortNumber)
1,sort,1,0,9,sort(typeof numerically)
1,sort,1,1,0,Document.write(string[]): void
1,sort,1,1,1,T[].map(function): U[]
1,sort,1,1,2,T[].sort(function): this
1,sort,1,2,0,T[].sort(function): this
1,sort,1,2,1,ToString(unknown)
1,sort,1,2,2,Result(number)
1,sort,1,2,3,sort(any[])
1,sort,1,2,4,sort(function)
1,sort,1,2,5,push(number)
1,sort,1,2,6,sort(typeof Test)
1,sort,1,2,7,Document.write(string[]): void
1,sort,1,3,0,bigSmallSorter(number[]): any[]
1,sort,1,4,0,T[].sort(function): this
1,sort,1,4,1,sort(function)
1,sort,1,4,2,"sortBy(unknown, string)"
1,sort,1,4,3,"function.sort_by(string, boolean, typeof parseInt): function"
1,sort,1,4,4,"function.sort_by(string, boolean, function): function"
1,sort,1,4,5,sort(typeof mycomparator)
1,sort,1,4,6,function[].(): function[]
1,sort,1,4,7,"sortBy(any[], object): any[]"
1,sort,1,4,8,reverse()
1,sort,1,4,9,T[].sort(): this
1,sort,1,5,0,"sortArray(object[], string): void"
1,sort,1,5,1,insertionSort(object[]): void
1,sort,1,6,0,T[].map(function): U[]
1,sort,1,6,1,T[].sort(function): this
1,sort,1,7,0,"T[].reduce(function, U): U"
1,sort,1,7,1,"sortByIdAndTimestamp(object[], boolean)"
1,sort,1,7,2,"T[].flat(): FlatArray<A, D>[]"
1,sort,1,7,3,T[].sort(function): this
1,sort,1,7,4,T[].forEach(function): void
1,sort,1,7,5,ObjectConstructor.values(object): T[]
1,sort,1,7,6,"sort(object[], boolean): any[]"
1,sort,1,8,0,"main(unknown, unknown)"
1,sort,1,8,1,"sortAngGetTopThree(unknown, unknown)"
1,currency,0,0,0,Number.toFixed(number): string
1,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
1,currency,0,0,2,"String.replace(object, string): string"
1,currency,0,0,3,Number.toLocaleString(): string
1,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
1,currency,0,0,5,"number.formatMoney(number, string, string)"
1,currency,0,0,6,number.format(number)
1,currency,0,0,7,NumberConstructor.Number(unknown): number
1,currency,0,0,8,toFixed(number)
1,currency,0,0,9,StringConstructor.String(unknown): string
1,currency,0,1,0,formatMoney(number)
1,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
1,currency,0,3,0,formatTime(string)
1,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
1,currency,0,3,2,Document.getElementById(string): HTMLElement
1,currency,0,3,3,"moment(string, string)"
1,currency,0,3,4,format(string)
1,currency,0,3,5,T[].forEach(function): void
1,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
1,currency,0,4,1,unshift(unknown)
1,currency,0,4,2,"substr(unknown, number)"
1,currency,0,4,3,formatMoney(unknown)
1,currency,0,5,0,"replace(regex, string)"
1,currency,0,5,1,setInputValue(unknown)
1,currency,0,6,0,formatMoney(number)
1,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
1,currency,0,7,1,"String.replace(string | RegExp, string): string"
1,currency,0,7,2,toFixed(number)
1,currency,0,7,3,"String.replace(object, string): string"
1,currency,0,7,4,Math.abs(number): number
1,currency,0,7,5,Math.trunc(number): number
1,currency,0,7,6,Number.toFixed(): string
1,currency,0,7,7,Number.toFixed(number): string
1,currency,0,7,8,"number.replace(regex, string)"
1,currency,0,7,9,"replace(regex, string)"
1,currency,0,8,0,"format(string, string, number): string"
1,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
1,currency,0,8,2,"String.replace(string | RegExp, string): string"
1,currency,0,8,3,String.trim(): string
1,serve,0,2,0,"use(string, function)"
1,serve,0,2,1,use(function)
1,serve,0,3,0,use(function)
1,serve,0,3,1,static(string)
1,serve,0,3,2,use(unknown)
1,serve,0,4,0,static(unknown)
1,serve,0,4,1,use(unknown)
1,serve,0,4,2,"join(unknown, string)"
1,serve,0,4,3,"join(unknown, string, string)"
1,serve,0,6,0,"join(unknown, string)"
1,serve,0,6,1,static(unknown)
1,serve,0,6,2,"use(string, unknown)"
1,serve,0,6,3,"get(string, unknown)"
1,serve,0,7,0,static(string)
1,serve,0,7,1,"use(string, unknown)"
1,serve,0,7,2,"join(unknown, string)"
1,serve,0,7,3,static(unknown)
1,serve,0,7,4,use(unknown)
1,serve,0,8,0,static(string)
1,serve,0,8,1,"use(string, function, unknown)"
1,serve,0,8,2,"use(string, unknown)"
1,serve,0,8,3,"get(string, function)"
1,serve,0,9,0,"get(string, function)"
1,serve,1,0,0,express()
1,serve,1,0,1,static(string)
1,serve,1,0,2,"listen(number, function)"
1,serve,1,0,3,"use(string, unknown)"
1,serve,1,0,4,use(unknown)
1,serve,1,0,5,"get(string, function)"
1,serve,1,0,6,"use(string, function)"
1,serve,1,0,7,compression()
1,serve,1,0,8,urlencoded(object)
1,serve,1,0,9,json()
1,serve,1,1,0,static(string)
1,serve,1,1,1,"use(string, unknown)"
1,serve,1,1,2,"join(unknown, string)"
1,serve,1,1,3,static(unknown)
1,serve,1,1,4,use(unknown)
1,serve,1,2,0,static(string)
1,serve,1,2,1,"use(string, function, unknown)"
1,serve,1,2,2,"use(string, unknown)"
1,serve,1,2,3,"get(string, function)"
1,serve,1,3,0,"get(string, function)"
1,serve,1,5,0,static(string)
1,serve,1,5,1,use(unknown)
1,serve,1,5,2,"use(string, unknown)"
1,serve,1,6,0,"join(unknown, string)"
1,serve,1,6,1,static(unknown)
1,serve,1,6,2,"use(string, unknown)"
1,serve,1,6,3,"get(string, unknown)"
1,serve,1,7,0,static(string)
1,serve,1,7,1,"use(string, function)"
1,serve,1,7,2,"get(string, function)"
1,serve,1,7,3,createServer(unknown)
1,serve,1,7,4,"listen(unknown, function)"
1,serve,1,7,5,"use(string, unknown)"
1,serve,1,7,6,express()
1,serve,1,7,7,"use(string, function, unknown)"
1,serve,1,8,0,"get(string, function)"
1,serve,1,8,1,static(string)
1,serve,1,8,2,"use(string, unknown)"
1,serve,1,8,3,use(unknown)
1,serve,1,8,4,express()
1,serve,1,8,5,"use(string, function)"
1,serve,1,9,0,static(string)
1,serve,1,9,1,use(unknown)
1,serve,1,9,2,express()
1,serve,1,9,3,listen(number)
1,serve,1,9,4,static(unknown)
1,serve,1,9,5,"join(unknown, string)"
1,serve,1,9,6,"use(string, unknown)"
1,serve,1,9,7,"get(string, function)"
1,serve,1,9,8,configure(function)
1,serve,1,9,9,"listen(number, function)"
2,currency,0,0,0,Number.toFixed(number): string
2,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
2,currency,0,0,2,"String.replace(object, string): string"
2,currency,0,0,3,Number.toLocaleString(): string
2,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
2,currency,0,0,5,"number.formatMoney(number, string, string)"
2,currency,0,0,6,number.format(number)
2,currency,0,0,7,NumberConstructor.Number(unknown): number
2,currency,0,0,8,toFixed(number)
2,currency,0,0,9,StringConstructor.String(unknown): string
2,currency,0,1,0,formatMoney(number)
2,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
2,currency,0,3,0,formatTime(string)
2,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
2,currency,0,3,2,Document.getElementById(string): HTMLElement
2,currency,0,3,3,"moment(string, string)"
2,currency,0,3,4,format(string)
2,currency,0,3,5,T[].forEach(function): void
2,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
2,currency,0,4,1,unshift(unknown)
2,currency,0,4,2,"substr(unknown, number)"
2,currency,0,4,3,formatMoney(unknown)
2,currency,0,5,0,"replace(regex, string)"
2,currency,0,5,1,setInputValue(unknown)
2,currency,0,6,0,formatMoney(number)
2,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
2,currency,0,7,1,"String.replace(string | RegExp, string): string"
2,currency,0,7,2,toFixed(number)
2,currency,0,7,3,"String.replace(object, string): string"
2,currency,0,7,4,Math.abs(number): number
2,currency,0,7,5,Math.trunc(number): number
2,currency,0,7,6,Number.toFixed(): string
2,currency,0,7,7,Number.toFixed(number): string
2,currency,0,7,8,"number.replace(regex, string)"
2,currency,0,7,9,"replace(regex, string)"
2,currency,0,8,0,"format(string, string, number): string"
2,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
2,currency,0,8,2,"String.replace(string | RegExp, string): string"
2,currency,0,8,3,String.trim(): string
2,find,0,0,0,T[].filter(function): T[]
2,find,0,0,1,"search(string, object[])"
2,find,0,0,2,T[].find(function): T
2,find,0,0,3,find(function)
2,find,0,0,4,indexOf(unknown)
2,find,0,0,5,"fill(string, unknown, number)"
2,find,0,0,6,findIndex(function)
2,find,0,0,7,function.search(string): object
2,find,0,0,8,forEach(function)
2,find,0,0,9,map(function)
2,find,0,1,0,T[].indexOf(T): number
2,find,0,1,1,T[].includes(T): boolean
2,find,0,1,2,"inArray(string, string[])"
2,find,0,1,3,includes(string)
2,find,0,1,4,"inArray(string, unknown)"
2,find,0,1,5,T[].some(function): boolean
2,find,0,1,6,T[].find(function): T
2,find,0,2,0,T[].some(function): boolean
2,find,0,2,1,T[].filter(function): T[]
2,find,0,2,2,T[].findIndex(function): number
2,find,0,2,3,T[].find(function): T
2,find,0,2,4,find(function)
2,find,0,2,5,T[].forEach(function): void
2,find,0,3,0,T[].find(function): T
2,find,0,3,1,T[].filter(function): T[]
2,find,0,3,2,find(function)
2,find,0,3,3,"filterValue(object[], string, number)"
2,find,0,3,4,"filteredArray(object[], string, number): any[]"
2,find,0,3,5,"findWhere(unknown, object)"
2,find,0,3,6,T[].findIndex(function): number
2,find,0,3,7,some(function)
2,find,0,3,8,"select(unknown, function)"
2,find,0,3,9,"reduce(function, null)"
2,find,0,4,0,"T[].reduce(function, U): U"
2,find,0,4,1,filter(function)
2,find,0,4,2,"grep(unknown, function)"
2,find,0,4,3,T[].find(function): T
2,find,0,4,4,function.(): function
2,find,0,4,5,T[].map(function): U[]
2,find,0,4,6,ArrayConstructor.Array(number): any[]
2,find,0,4,7,map(function[])
2,find,0,4,8,"each(unknown, function)"
2,find,0,4,9,map(function)
2,find,0,5,0,T[].filter(function): T[]
2,find,0,5,1,filter(function)
2,find,0,6,0,T[].includes(T): boolean
2,find,0,6,1,T[].indexOf(T): number
2,find,0,6,2,T[].find(function): T
2,find,0,6,3,T[].some(function): boolean
2,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
2,find,0,6,5,T[].findIndex(function): number
2,find,0,6,6,number[].contains(number)
2,find,0,6,7,number[].contains(string)
2,find,0,6,8,indexOf(string)
2,find,0,6,9,indexOf(number)
2,find,0,7,0,T[].findIndex(function): number
2,find,0,7,1,T[].filter(function): T[]
2,find,0,7,2,T[].map(function): U[]
2,find,0,7,3,T[].forEach(function): void
2,find,0,7,4,map(function)
2,find,0,7,5,"T[].splice(number, number, T[]): T[]"
2,find,0,7,6,T[].find(function): T
2,find,0,7,7,findIndex(function)
2,find,0,7,8,forEach(function)
2,find,0,7,9,T[].pop(): T
2,find,0,8,0,T[].filter(function): T[]
2,find,0,8,1,filter(function)
2,find,0,9,0,includes(unknown)
2,find,0,9,1,"inArray(number, string[])"
2,find,0,9,2,"has(unknown, boolean)"
2,find,0,9,3,has(object)
2,find,0,9,4,"has(object, number)"
2,find,0,9,5,has(string)
2,find,0,9,6,has(number)
2,find,0,9,7,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
2,find,0,9,8,indexOf(unknown)
2,find,0,9,9,"customSlowerSearch(unknown, unknown)"
2,recent,0,0,0,endOf(string)
2,recent,0,0,1,startOf(string)
2,recent,0,0,2,format(string)
2,recent,0,0,3,moment(unknown)
2,recent,0,0,4,clone()
2,recent,0,0,5,"subtract(number, string)"
2,recent,0,0,6,"add(number, string)"
2,recent,0,0,7,moment()
2,recent,0,0,8,moment(number[])
2,recent,0,0,9,moment(string)
2,recent,0,1,0,"subtract(number, string)"
2,recent,0,1,1,format(string)
2,recent,0,1,2,moment()
2,recent,0,1,3,toDate()
2,recent,0,1,4,moment(Date)
2,recent,0,1,5,duration(object)
2,recent,0,1,6,subtract(unknown)
2,recent,0,1,7,"subtract(string, number)"
2,recent,0,1,8,format()
2,recent,0,1,9,"moment(string, string)"
2,recent,0,2,0,"subtract(string, number)"
2,recent,0,2,1,moment()
2,recent,0,2,2,"subtract(number, string)"
2,recent,0,2,3,format(string)
2,recent,0,3,0,moment()
2,recent,0,3,1,startOf(string)
2,recent,0,3,2,endOf(string)
2,recent,0,3,3,format(string)
2,recent,0,3,4,daysInMonth()
2,recent,0,3,5,Date.getFullYear(): number
2,recent,0,3,6,Date.getMonth(): number
2,recent,0,3,7,format(unknown)
2,recent,0,3,8,moment(Date)
2,recent,0,3,9,"daterangepicker(object, function)"
2,recent,0,4,0,Date.getDate(): number
2,recent,0,4,1,Date.setDate(number): number
2,recent,0,4,2,moment()
2,recent,0,4,3,"subtract(number, string)"
2,recent,0,4,4,DateConstructor.now(): number
2,recent,0,4,5,format(string)
2,recent,0,4,6,Date.getFullYear(): number
2,recent,0,4,7,"add(number, string)"
2,recent,0,4,8,add(object)
2,recent,0,4,9,DateConstructor.today()
2,recent,0,5,0,moment(any[])
2,recent,0,5,1,"add(number, string)"
2,recent,0,5,2,"moment(string, string)"
2,recent,0,5,3,endOf(string)
2,recent,0,5,4,toDate()
2,recent,0,5,5,moment(unknown)
2,recent,0,5,6,"getMonthDateRange(number, number): object"
2,recent,0,6,0,Date.getDate(): number
2,recent,0,6,1,Date.getTime(): number
2,recent,0,6,2,Date.setDate(number): number
2,recent,0,6,3,Date.setTime(number): number
2,recent,0,6,4,Date.toLocaleString(): string
2,recent,0,6,5,Document.write(string[]): void
2,recent,0,6,6,"addDays(Date, number): Date"
2,recent,0,6,7,Date.getMonth(): number
2,recent,0,6,8,Date.getFullYear(): number
2,recent,0,6,9,"AddOrSubractDays(Date, number, boolean): Date"
2,recent,0,7,0,"add(number, string)"
2,recent,0,7,1,moment()
2,recent,0,7,2,format(string)
2,recent,0,7,3,function.addRealMonth(unknown)
2,recent,0,7,4,isSame(unknown)
2,recent,0,7,5,date()
2,recent,0,7,6,endOf(string)
2,recent,0,7,7,moment(unknown)
2,recent,0,7,8,moment(string)
2,recent,0,7,9,calendar()
2,recent,0,8,0,diff(unknown)
2,recent,0,8,1,duration(unknown)
2,recent,0,8,2,moment(string)
2,recent,0,8,3,"diff(unknown, string)"
2,recent,0,8,4,asHours()
2,recent,0,8,5,format(string)
2,recent,0,8,6,moment()
2,recent,0,8,7,moment(unknown)
2,recent,0,8,8,"moment(string, string)"
2,recent,0,8,9,moment(Date)
2,recent,0,9,0,moment(unknown)
2,recent,0,9,1,format(string)
2,recent,0,9,2,moment()
2,recent,0,9,3,format()
2,recent,0,9,4,"subtract(number, string)"
2,recent,0,9,5,unix()
2,recent,0,9,6,fromNow()
3,currency,0,0,0,Number.toFixed(number): string
3,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
3,currency,0,0,2,"String.replace(object, string): string"
3,currency,0,0,3,Number.toLocaleString(): string
3,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
3,currency,0,0,5,"number.formatMoney(number, string, string)"
3,currency,0,0,6,number.format(number)
3,currency,0,0,7,NumberConstructor.Number(unknown): number
3,currency,0,0,8,toFixed(number)
3,currency,0,0,9,StringConstructor.String(unknown): string
3,currency,0,1,0,formatMoney(number)
3,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
3,currency,0,3,0,formatTime(string)
3,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
3,currency,0,3,2,Document.getElementById(string): HTMLElement
3,currency,0,3,3,"moment(string, string)"
3,currency,0,3,4,format(string)
3,currency,0,3,5,T[].forEach(function): void
3,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
3,currency,0,4,1,unshift(unknown)
3,currency,0,4,2,"substr(unknown, number)"
3,currency,0,4,3,formatMoney(unknown)
3,currency,0,5,0,"replace(regex, string)"
3,currency,0,5,1,setInputValue(unknown)
3,currency,0,6,0,formatMoney(number)
3,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
3,currency,0,7,1,"String.replace(string | RegExp, string): string"
3,currency,0,7,2,toFixed(number)
3,currency,0,7,3,"String.replace(object, string): string"
3,currency,0,7,4,Math.abs(number): number
3,currency,0,7,5,Math.trunc(number): number
3,currency,0,7,6,Number.toFixed(): string
3,currency,0,7,7,Number.toFixed(number): string
3,currency,0,7,8,"number.replace(regex, string)"
3,currency,0,7,9,"replace(regex, string)"
3,currency,0,8,0,"format(string, string, number): string"
3,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
3,currency,0,8,2,"String.replace(string | RegExp, string): string"
3,currency,0,8,3,String.trim(): string
3,recent,0,0,0,"diff(unknown, string)"
3,recent,0,0,1,diff(unknown)
3,recent,0,0,2,moment(string)
3,recent,0,1,0,"subtract(number, string)"
3,recent,0,1,1,format(string)
3,recent,0,1,2,moment()
3,recent,0,1,3,toDate()
3,recent,0,1,4,moment(Date)
3,recent,0,1,5,duration(object)
3,recent,0,1,6,subtract(unknown)
3,recent,0,1,7,"subtract(string, number)"
3,recent,0,1,8,format()
3,recent,0,1,9,"moment(string, string)"
3,recent,0,2,0,diff(unknown)
3,recent,0,2,1,"tz(Date, string, string)"
3,recent,0,2,2,local()
3,recent,0,2,3,duration(unknown)
3,recent,0,2,4,asHours()
3,recent,0,2,5,"tz(unknown, string, string)"
3,recent,0,2,6,"diff(unknown, string)"
3,recent,0,2,7,moment()
3,recent,0,2,8,moment(unknown)
3,recent,0,2,9,format(string)
3,recent,0,3,0,moment()
3,recent,0,3,1,"subtract(number, string)"
3,recent,0,3,2,format(string)
3,recent,0,3,3,moment(number)
3,recent,0,3,4,DateConstructor.now(): number
3,recent,0,3,5,toDate()
3,recent,0,3,6,endOf(string)
3,recent,0,3,7,day(number)
3,recent,0,3,8,startOf(string)
3,recent,0,4,0,subtract(object)
3,recent,0,4,1,moment(string)
3,recent,0,4,2,String.split(string | RegExp): string[]
3,recent,0,4,3,subtract(unknown)
3,recent,0,4,4,moment(number)
3,recent,0,4,5,format(string)
3,recent,0,4,6,toString()
3,recent,0,4,7,subtract(ObjectConstructor)
3,recent,0,4,8,"subtract(StringConstructor, StringConstructor)"
3,recent,0,4,9,"subtract(NumberConstructor, StringConstructor)"
3,recent,0,5,0,format(string)
3,recent,0,5,1,"subtract(number, string)"
3,recent,0,5,2,"add(number, string)"
3,recent,0,5,3,moment(number)
3,recent,0,5,4,"subtract(string, number)"
3,recent,0,5,5,"add(string, number)"
3,recent,0,5,6,moment()
3,recent,0,5,7,Document.getElementById(string): HTMLElement
3,recent,0,5,8,Date.PrevDay(number)
3,recent,0,5,9,Date.Nextday(number)
3,recent,0,6,0,"subtract(string, number)"
3,recent,0,6,1,moment()
3,recent,0,6,2,"subtract(number, string)"
3,recent,0,6,3,format(string)
3,recent,0,7,0,"subtract(number, string)"
3,recent,0,8,0,checkDateIsValid(unknown)
3,recent,0,9,0,isAfter(unknown)
3,recent,0,9,1,isBefore(unknown)
3,recent,0,9,2,toISOString()
3,recent,0,9,3,moment(string)
3,recent,0,9,4,"subtract(number, string)"
3,recent,0,9,5,startOf(string)
4,find,0,0,0,T[].filter(function): T[]
4,find,0,0,1,"search(string, object[])"
4,find,0,0,2,T[].find(function): T
4,find,0,0,3,find(function)
4,find,0,0,4,indexOf(unknown)
4,find,0,0,5,"fill(string, unknown, number)"
4,find,0,0,6,findIndex(function)
4,find,0,0,7,function.search(string): object
4,find,0,0,8,forEach(function)
4,find,0,0,9,map(function)
4,find,0,1,0,T[].indexOf(T): number
4,find,0,1,1,T[].includes(T): boolean
4,find,0,1,2,"inArray(string, string[])"
4,find,0,1,3,includes(string)
4,find,0,1,4,"inArray(string, unknown)"
4,find,0,1,5,T[].some(function): boolean
4,find,0,1,6,T[].find(function): T
4,find,0,2,0,T[].some(function): boolean
4,find,0,2,1,T[].filter(function): T[]
4,find,0,2,2,T[].findIndex(function): number
4,find,0,2,3,T[].find(function): T
4,find,0,2,4,find(function)
4,find,0,2,5,T[].forEach(function): void
4,find,0,3,0,T[].find(function): T
4,find,0,3,1,T[].filter(function): T[]
4,find,0,3,2,find(function)
4,find,0,3,3,"filterValue(object[], string, number)"
4,find,0,3,4,"filteredArray(object[], string, number): any[]"
4,find,0,3,5,"findWhere(unknown, object)"
4,find,0,3,6,T[].findIndex(function): number
4,find,0,3,7,some(function)
4,find,0,3,8,"select(unknown, function)"
4,find,0,3,9,"reduce(function, null)"
4,find,0,4,0,"T[].reduce(function, U): U"
4,find,0,4,1,filter(function)
4,find,0,4,2,"grep(unknown, function)"
4,find,0,4,3,T[].find(function): T
4,find,0,4,4,function.(): function
4,find,0,4,5,T[].map(function): U[]
4,find,0,4,6,ArrayConstructor.Array(number): any[]
4,find,0,4,7,map(function[])
4,find,0,4,8,"each(unknown, function)"
4,find,0,4,9,map(function)
4,find,0,5,0,T[].filter(function): T[]
4,find,0,5,1,filter(function)
4,find,0,6,0,T[].includes(T): boolean
4,find,0,6,1,T[].indexOf(T): number
4,find,0,6,2,T[].find(function): T
4,find,0,6,3,T[].some(function): boolean
4,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
4,find,0,6,5,T[].findIndex(function): number
4,find,0,6,6,number[].contains(number)
4,find,0,6,7,number[].contains(string)
4,find,0,6,8,indexOf(string)
4,find,0,6,9,indexOf(number)
4,find,0,7,0,T[].findIndex(function): number
4,find,0,7,1,T[].filter(function): T[]
4,find,0,7,2,T[].map(function): U[]
4,find,0,7,3,T[].forEach(function): void
4,find,0,7,4,map(function)
4,find,0,7,5,"T[].splice(number, number, T[]): T[]"
4,find,0,7,6,T[].find(function): T
4,find,0,7,7,findIndex(function)
4,find,0,7,8,forEach(function)
4,find,0,7,9,T[].pop(): T
4,find,0,8,0,T[].filter(function): T[]
4,find,0,8,1,filter(function)
4,find,0,9,0,includes(unknown)
4,find,0,9,1,"inArray(number, string[])"
4,find,0,9,2,"has(unknown, boolean)"
4,find,0,9,3,has(object)
4,find,0,9,4,"has(object, number)"
4,find,0,9,5,has(string)
4,find,0,9,6,has(number)
4,find,0,9,7,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
4,find,0,9,8,indexOf(unknown)
4,find,0,9,9,"customSlowerSearch(unknown, unknown)"
4,clone,0,0,0,JSON.parse(string)
4,clone,0,0,1,JSON.stringify(unknown): string
4,clone,0,0,2,T[].slice(): T[]
4,clone,0,0,3,slice()
4,clone,0,0,4,slice(number)
4,clone,0,0,5,JSON.stringify(function): string
4,clone,0,0,6,map(function)
4,clone,0,0,7,T[].push(T[]): number
4,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
4,clone,0,0,9,clone(function[]): void
4,clone,0,1,0,JSON.stringify(function): string
4,clone,0,1,1,JSON.parse(string)
4,clone,0,1,2,T[].slice(number): T[]
4,clone,0,1,3,T[].map(function): U[]
4,clone,0,1,4,"extend(boolean, undefined[], function)"
4,clone,0,1,5,slice(number)
4,clone,0,1,6,T[].slice(): T[]
4,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
4,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
4,clone,0,1,9,T[].push(T[]): number
4,clone,0,2,0,T[].concat(function): T[]
4,clone,0,2,1,undefined[].add(string)
4,clone,0,2,2,add(string)
4,clone,0,2,3,T[].slice(): T[]
4,clone,0,2,4,T[].push(T[]): number
4,clone,0,3,0,T[].map(function): U[]
4,clone,0,3,1,T[].forEach(function): void
4,clone,0,3,2,map(function)
4,clone,0,3,3,forEach(function)
4,clone,0,3,4,slice()
4,clone,0,3,5,JSON.parse(string)
4,clone,0,3,6,JSON.stringify(unknown): string
4,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
4,clone,0,5,0,map(function)
4,clone,0,5,1,"getGenericItems(unknown, unknown)"
4,clone,0,5,2,T[].forEach(function): void
4,clone,0,5,3,cloneDeep(unknown)
4,clone,0,5,4,JSON.parse(string)
4,clone,0,5,5,JSON.stringify(unknown): string
4,clone,0,5,6,slice()
4,clone,0,5,7,T[].map(function): U[]
4,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
4,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
4,clone,0,6,0,bestCopyEver(object)
4,clone,0,6,1,iterationCopy(object): object
4,clone,0,6,2,JSON.stringify(unknown): string
4,clone,0,6,3,JSON.parse(string)
4,clone,0,7,0,T[].map(function): U[]
4,clone,0,8,0,JSON.stringify(unknown): string
4,clone,0,8,1,JSON.parse(string)
4,clone,0,8,2,map(function)
4,clone,0,8,3,structuredClone(unknown)
4,clone,0,8,4,slice(number)
4,clone,0,8,5,"map(unknown, function)"
4,clone,0,8,6,evalJSON(unknown)
4,clone,0,8,7,toJSON(unknown)
4,clone,0,8,8,JSON.stringify(object): string
4,clone,0,8,9,cloneDeep(function)
4,clone,0,9,0,JSON.stringify(number[][]): string
4,clone,0,9,1,JSON.parse(string)
4,recent,0,0,0,"diff(unknown, string)"
4,recent,0,0,1,diff(unknown)
4,recent,0,0,2,moment(string)
4,recent,0,1,0,moment()
4,recent,0,1,1,"subtract(number, string)"
4,recent,0,1,2,format(string)
4,recent,0,1,3,moment(number)
4,recent,0,1,4,DateConstructor.now(): number
4,recent,0,1,5,toDate()
4,recent,0,1,6,endOf(string)
4,recent,0,1,7,day(number)
4,recent,0,1,8,startOf(string)
4,recent,0,2,0,"subtract(number, string)"
4,recent,0,2,1,format(string)
4,recent,0,2,2,moment()
4,recent,0,2,3,toDate()
4,recent,0,2,4,moment(Date)
4,recent,0,2,5,duration(object)
4,recent,0,2,6,subtract(unknown)
4,recent,0,2,7,"subtract(string, number)"
4,recent,0,2,8,format()
4,recent,0,2,9,"moment(string, string)"
4,recent,0,3,0,format(string)
4,recent,0,3,1,"subtract(number, string)"
4,recent,0,3,2,"add(number, string)"
4,recent,0,3,3,moment(number)
4,recent,0,3,4,"subtract(string, number)"
4,recent,0,3,5,"add(string, number)"
4,recent,0,3,6,moment()
4,recent,0,3,7,Document.getElementById(string): HTMLElement
4,recent,0,3,8,Date.PrevDay(number)
4,recent,0,3,9,Date.Nextday(number)
4,recent,0,4,0,setDate(unknown): void
4,recent,0,4,1,now()
4,recent,0,4,2,moment(unknown)
4,recent,0,4,3,"add(number, string)"
4,recent,0,5,0,diff(unknown)
4,recent,0,5,1,"tz(Date, string, string)"
4,recent,0,5,2,local()
4,recent,0,5,3,duration(unknown)
4,recent,0,5,4,asHours()
4,recent,0,5,5,"tz(unknown, string, string)"
4,recent,0,5,6,"diff(unknown, string)"
4,recent,0,5,7,moment()
4,recent,0,5,8,moment(unknown)
4,recent,0,5,9,format(string)
4,recent,0,6,0,"subtract(number, string)"
4,recent,0,7,0,clone()
4,recent,0,7,1,"subtract(number, string)"
4,recent,0,7,2,format()
4,recent,0,7,3,moment(string)
4,recent,0,8,0,checkDateIsValid(unknown)
4,recent,0,9,0,"subtract(string, number)"
4,recent,0,9,1,moment()
4,recent,0,9,2,"subtract(number, string)"
4,recent,0,9,3,format(string)
4,recent,1,0,0,"subtract(number, string)"
4,recent,1,0,1,format(string)
4,recent,1,0,2,moment()
4,recent,1,0,3,toDate()
4,recent,1,0,4,moment(Date)
4,recent,1,0,5,duration(object)
4,recent,1,0,6,subtract(unknown)
4,recent,1,0,7,"subtract(string, number)"
4,recent,1,0,8,format()
4,recent,1,0,9,"moment(string, string)"
4,recent,1,1,0,format(string)
4,recent,1,1,1,"subtract(number, string)"
4,recent,1,1,2,"add(number, string)"
4,recent,1,1,3,moment(number)
4,recent,1,1,4,"subtract(string, number)"
4,recent,1,1,5,"add(string, number)"
4,recent,1,1,6,moment()
4,recent,1,1,7,Document.getElementById(string): HTMLElement
4,recent,1,1,8,Date.PrevDay(number)
4,recent,1,1,9,Date.Nextday(number)
4,recent,1,2,0,subtract(object)
4,recent,1,2,1,moment(string)
4,recent,1,2,2,String.split(string | RegExp): string[]
4,recent,1,2,3,subtract(unknown)
4,recent,1,2,4,moment(number)
4,recent,1,2,5,format(string)
4,recent,1,2,6,toString()
4,recent,1,2,7,subtract(ObjectConstructor)
4,recent,1,2,8,"subtract(StringConstructor, StringConstructor)"
4,recent,1,2,9,"subtract(NumberConstructor, StringConstructor)"
4,recent,1,3,0,moment()
4,recent,1,3,1,"subtract(number, string)"
4,recent,1,3,2,format(string)
4,recent,1,3,3,moment(number)
4,recent,1,3,4,DateConstructor.now(): number
4,recent,1,3,5,toDate()
4,recent,1,3,6,endOf(string)
4,recent,1,3,7,day(number)
4,recent,1,3,8,startOf(string)
4,recent,1,4,0,utc(number)
4,recent,1,4,1,format(string)
4,recent,1,4,2,"subtract(number, string)"
4,recent,1,4,3,diff(unknown)
4,recent,1,4,4,duration(unknown)
4,recent,1,4,5,"add(number, string)"
4,recent,1,4,6,isBefore(unknown)
4,recent,1,4,7,"utc(unknown, string)"
4,recent,1,5,0,diff(unknown)
4,recent,1,5,1,duration(unknown)
4,recent,1,5,2,moment(string)
4,recent,1,5,3,"diff(unknown, string)"
4,recent,1,5,4,asHours()
4,recent,1,5,5,format(string)
4,recent,1,5,6,moment()
4,recent,1,5,7,moment(unknown)
4,recent,1,5,8,"moment(string, string)"
4,recent,1,5,9,moment(Date)
4,recent,1,6,0,duration(unknown)
4,recent,1,6,1,diff(unknown)
4,recent,1,6,2,asHours()
4,recent,1,6,3,Math.floor(number): number
4,recent,1,6,4,"moment(string, string)"
4,recent,1,6,5,moment(string)
4,recent,1,6,6,asMinutes()
4,recent,1,6,7,utc(unknown)
4,recent,1,6,8,format(string)
4,recent,1,6,9,"diff(unknown, string)"
4,recent,1,7,0,"diff(unknown, string)"
4,recent,1,7,1,"moment(string, string)"
4,recent,1,7,2,startOf(string)
4,recent,1,7,3,moment(number[])
4,recent,1,7,4,asDays()
4,recent,1,7,5,duration(unknown)
4,recent,1,7,6,diff(unknown)
4,recent,1,7,7,asWeeks()
4,recent,1,7,8,moment()
4,recent,1,7,9,Math.floor(number): number
4,recent,1,8,0,Math.abs(number): number
4,recent,1,8,1,"replace(regex, string)"
4,recent,1,8,2,"it(string, function)"
4,recent,1,9,0,format(string)
4,recent,1,9,1,moment()
4,recent,1,9,2,format(unknown)
4,recent,1,9,3,startOf(string)
4,recent,1,9,4,moment(string)
4,recent,1,9,5,moment(unknown)
4,recent,1,9,6,moment(object)
4,recent,1,9,7,format()
4,recent,1,9,8,locale()
4,recent,1,9,9,Moment()
5,sort,0,0,0,T[].sort(function): this
5,sort,0,0,1,sort(function)
5,sort,0,0,2,"sortBy(unknown, string)"
5,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
5,sort,0,0,4,"function.sort_by(string, boolean, function): function"
5,sort,0,0,5,sort(typeof mycomparator)
5,sort,0,0,6,function[].(): function[]
5,sort,0,0,7,"sortBy(any[], object): any[]"
5,sort,0,0,8,reverse()
5,sort,0,0,9,T[].sort(): this
5,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
5,sort,0,1,1,"function[].sortBy(object[], string): any[]"
5,sort,0,2,0,sort(function)
5,sort,0,2,1,T[].sort(function): this
5,sort,0,2,2,T[].push(T[]): number
5,sort,0,3,0,ObjectConstructor.keys(object): string[]
5,sort,0,3,1,T[].sort(function): this
5,sort,0,3,2,sort(typeof compare)
5,sort,0,4,0,T[].reverse(): T[]
5,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
5,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
5,sort,0,4,3,ObjectConstructor.keys(object): string[]
5,sort,0,4,4,T[].sort(): this
5,sort,0,4,5,T[].forEach(function): void
5,sort,0,5,0,sort(function)
5,sort,0,5,1,T[].sort(function): this
5,sort,0,5,2,"object[].sortBy(string, string)"
5,sort,0,5,3,sortBy(string)
5,sort,0,5,4,reverse(unknown)
5,sort,0,5,5,sort(typeof compare)
5,sort,0,5,6,dynamicSort(string): function
5,sort,0,5,7,"dynamicSortMultiple(string, string): function"
5,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
5,sort,0,5,9,"sortBy(object[], string)"
5,sort,0,6,0,T[].sort(function): this
5,sort,0,7,0,T[].sort(function): this
5,sort,0,8,0,T[].sort(function): this
5,sort,0,8,1,sort(function)
5,sort,0,9,0,sort(function)
5,sort,0,9,1,T[].sort(function): this
5,sort,0,9,2,dynamicSort(string): function
5,currency,0,0,0,Number.toFixed(number): string
5,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
5,currency,0,0,2,"String.replace(object, string): string"
5,currency,0,0,3,Number.toLocaleString(): string
5,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
5,currency,0,0,5,"number.formatMoney(number, string, string)"
5,currency,0,0,6,number.format(number)
5,currency,0,0,7,NumberConstructor.Number(unknown): number
5,currency,0,0,8,toFixed(number)
5,currency,0,0,9,StringConstructor.String(unknown): string
5,currency,0,1,0,formatMoney(number)
5,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
5,currency,0,3,0,formatTime(string)
5,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
5,currency,0,3,2,Document.getElementById(string): HTMLElement
5,currency,0,3,3,"moment(string, string)"
5,currency,0,3,4,format(string)
5,currency,0,3,5,T[].forEach(function): void
5,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
5,currency,0,4,1,unshift(unknown)
5,currency,0,4,2,"substr(unknown, number)"
5,currency,0,4,3,formatMoney(unknown)
5,currency,0,5,0,"replace(regex, string)"
5,currency,0,5,1,setInputValue(unknown)
5,currency,0,6,0,formatMoney(number)
5,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
5,currency,0,7,1,"String.replace(string | RegExp, string): string"
5,currency,0,7,2,toFixed(number)
5,currency,0,7,3,"String.replace(object, string): string"
5,currency,0,7,4,Math.abs(number): number
5,currency,0,7,5,Math.trunc(number): number
5,currency,0,7,6,Number.toFixed(): string
5,currency,0,7,7,Number.toFixed(number): string
5,currency,0,7,8,"number.replace(regex, string)"
5,currency,0,7,9,"replace(regex, string)"
5,currency,0,8,0,"format(string, string, number): string"
5,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
5,currency,0,8,2,"String.replace(string | RegExp, string): string"
5,currency,0,8,3,String.trim(): string
5,serve,0,0,0,static(string)
5,serve,0,0,1,"use(string, unknown)"
5,serve,0,0,2,"join(unknown, string)"
5,serve,0,0,3,static(unknown)
5,serve,0,0,4,use(unknown)
5,serve,0,2,0,static(unknown)
5,serve,0,2,1,"use(string, unknown)"
5,serve,0,2,2,"use(string, function)"
5,serve,0,2,3,express()
5,serve,0,2,4,"join(unknown, string)"
5,serve,0,2,5,"get(string, function)"
5,serve,0,2,6,listen(number)
5,serve,0,4,0,"join(unknown, string)"
5,serve,0,4,1,static(unknown)
5,serve,0,4,2,"use(string, unknown)"
5,serve,0,4,3,"get(string, unknown)"
5,serve,0,5,0,"T[].reduce(function, U): U"
5,serve,0,5,1,"get(string, function)"
5,serve,0,5,2,use(function)
5,serve,0,5,3,use(unknown)
5,serve,0,5,4,static(unknown)
5,serve,0,5,5,"join(unknown, string)"
5,serve,0,7,0,static(string)
5,serve,0,7,1,use(unknown)
6,currency,0,0,0,Number.toFixed(number): string
6,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
6,currency,0,0,2,"String.replace(object, string): string"
6,currency,0,0,3,Number.toLocaleString(): string
6,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
6,currency,0,0,5,"number.formatMoney(number, string, string)"
6,currency,0,0,6,number.format(number)
6,currency,0,0,7,NumberConstructor.Number(unknown): number
6,currency,0,0,8,toFixed(number)
6,currency,0,0,9,StringConstructor.String(unknown): string
6,currency,0,1,0,formatMoney(number)
6,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
6,currency,0,3,0,formatTime(string)
6,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
6,currency,0,3,2,Document.getElementById(string): HTMLElement
6,currency,0,3,3,"moment(string, string)"
6,currency,0,3,4,format(string)
6,currency,0,3,5,T[].forEach(function): void
6,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
6,currency,0,4,1,unshift(unknown)
6,currency,0,4,2,"substr(unknown, number)"
6,currency,0,4,3,formatMoney(unknown)
6,currency,0,5,0,"replace(regex, string)"
6,currency,0,5,1,setInputValue(unknown)
6,currency,0,6,0,formatMoney(number)
6,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
6,currency,0,7,1,"String.replace(string | RegExp, string): string"
6,currency,0,7,2,toFixed(number)
6,currency,0,7,3,"String.replace(object, string): string"
6,currency,0,7,4,Math.abs(number): number
6,currency,0,7,5,Math.trunc(number): number
6,currency,0,7,6,Number.toFixed(): string
6,currency,0,7,7,Number.toFixed(number): string
6,currency,0,7,8,"number.replace(regex, string)"
6,currency,0,7,9,"replace(regex, string)"
6,currency,0,8,0,"format(string, string, number): string"
6,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
6,currency,0,8,2,"String.replace(string | RegExp, string): string"
6,currency,0,8,3,String.trim(): string
6,find,0,0,0,T[].filter(function): T[]
6,find,0,0,1,"search(string, object[])"
6,find,0,0,2,T[].find(function): T
6,find,0,0,3,find(function)
6,find,0,0,4,indexOf(unknown)
6,find,0,0,5,"fill(string, unknown, number)"
6,find,0,0,6,findIndex(function)
6,find,0,0,7,function.search(string): object
6,find,0,0,8,forEach(function)
6,find,0,0,9,map(function)
6,find,0,1,0,T[].indexOf(T): number
6,find,0,1,1,T[].includes(T): boolean
6,find,0,1,2,"inArray(string, string[])"
6,find,0,1,3,includes(string)
6,find,0,1,4,"inArray(string, unknown)"
6,find,0,1,5,T[].some(function): boolean
6,find,0,1,6,T[].find(function): T
6,find,0,2,0,T[].some(function): boolean
6,find,0,2,1,T[].filter(function): T[]
6,find,0,2,2,T[].findIndex(function): number
6,find,0,2,3,T[].find(function): T
6,find,0,2,4,find(function)
6,find,0,2,5,T[].forEach(function): void
6,find,0,3,0,T[].find(function): T
6,find,0,3,1,T[].filter(function): T[]
6,find,0,3,2,find(function)
6,find,0,3,3,"filterValue(object[], string, number)"
6,find,0,3,4,"filteredArray(object[], string, number): any[]"
6,find,0,3,5,"findWhere(unknown, object)"
6,find,0,3,6,T[].findIndex(function): number
6,find,0,3,7,some(function)
6,find,0,3,8,"select(unknown, function)"
6,find,0,3,9,"reduce(function, null)"
6,find,0,4,0,"T[].reduce(function, U): U"
6,find,0,4,1,filter(function)
6,find,0,4,2,"grep(unknown, function)"
6,find,0,4,3,T[].find(function): T
6,find,0,4,4,function.(): function
6,find,0,4,5,T[].map(function): U[]
6,find,0,4,6,ArrayConstructor.Array(number): any[]
6,find,0,4,7,map(function[])
6,find,0,4,8,"each(unknown, function)"
6,find,0,4,9,map(function)
6,find,0,5,0,T[].filter(function): T[]
6,find,0,5,1,filter(function)
6,find,0,6,0,T[].includes(T): boolean
6,find,0,6,1,T[].indexOf(T): number
6,find,0,6,2,T[].find(function): T
6,find,0,6,3,T[].some(function): boolean
6,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
6,find,0,6,5,T[].findIndex(function): number
6,find,0,6,6,number[].contains(number)
6,find,0,6,7,number[].contains(string)
6,find,0,6,8,indexOf(string)
6,find,0,6,9,indexOf(number)
6,recent,0,0,0,"subtract(number, string)"
6,recent,0,0,1,format(string)
6,recent,0,0,2,moment()
6,recent,0,0,3,toDate()
6,recent,0,0,4,moment(Date)
6,recent,0,0,5,duration(object)
6,recent,0,0,6,subtract(unknown)
6,recent,0,0,7,"subtract(string, number)"
6,recent,0,0,8,format()
6,recent,0,0,9,"moment(string, string)"
6,recent,0,1,0,moment()
6,recent,0,1,1,"subtract(number, string)"
6,recent,0,1,2,format(string)
6,recent,0,1,3,moment(number)
6,recent,0,1,4,DateConstructor.now(): number
6,recent,0,1,5,toDate()
6,recent,0,1,6,endOf(string)
6,recent,0,1,7,day(number)
6,recent,0,1,8,startOf(string)
6,recent,0,2,0,format(string)
6,recent,0,2,1,"subtract(number, string)"
6,recent,0,2,2,"add(number, string)"
6,recent,0,2,3,moment(number)
6,recent,0,2,4,"subtract(string, number)"
6,recent,0,2,5,"add(string, number)"
6,recent,0,2,6,moment()
6,recent,0,2,7,Document.getElementById(string): HTMLElement
6,recent,0,2,8,Date.PrevDay(number)
6,recent,0,2,9,Date.Nextday(number)
7,sort,0,0,0,T[].sort(function): this
7,sort,0,0,1,sort(function)
7,sort,0,0,2,"sortBy(unknown, string)"
7,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
7,sort,0,0,4,"function.sort_by(string, boolean, function): function"
7,sort,0,0,5,sort(typeof mycomparator)
7,sort,0,0,6,function[].(): function[]
7,sort,0,0,7,"sortBy(any[], object): any[]"
7,sort,0,0,8,reverse()
7,sort,0,0,9,T[].sort(): this
7,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
7,sort,0,1,1,"function[].sortBy(object[], string): any[]"
7,sort,0,2,0,sort(function)
7,sort,0,2,1,T[].sort(function): this
7,sort,0,2,2,T[].push(T[]): number
7,sort,0,3,0,ObjectConstructor.keys(object): string[]
7,sort,0,3,1,T[].sort(function): this
7,sort,0,3,2,sort(typeof compare)
7,sort,0,4,0,T[].reverse(): T[]
7,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
7,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
7,sort,0,4,3,ObjectConstructor.keys(object): string[]
7,sort,0,4,4,T[].sort(): this
7,sort,0,4,5,T[].forEach(function): void
7,sort,0,5,0,sort(function)
7,sort,0,5,1,T[].sort(function): this
7,sort,0,5,2,"object[].sortBy(string, string)"
7,sort,0,5,3,sortBy(string)
7,sort,0,5,4,reverse(unknown)
7,sort,0,5,5,sort(typeof compare)
7,sort,0,5,6,dynamicSort(string): function
7,sort,0,5,7,"dynamicSortMultiple(string, string): function"
7,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
7,sort,0,5,9,"sortBy(object[], string)"
7,sort,0,6,0,T[].sort(function): this
7,sort,0,7,0,T[].sort(function): this
7,sort,0,8,0,T[].sort(function): this
7,sort,0,8,1,sort(function)
7,sort,0,9,0,sort(function)
7,sort,0,9,1,T[].sort(function): this
7,sort,0,9,2,dynamicSort(string): function
7,clone,0,0,0,JSON.parse(string)
7,clone,0,0,1,JSON.stringify(unknown): string
7,clone,0,0,2,T[].slice(): T[]
7,clone,0,0,3,slice()
7,clone,0,0,4,slice(number)
7,clone,0,0,5,JSON.stringify(function): string
7,clone,0,0,6,map(function)
7,clone,0,0,7,T[].push(T[]): number
7,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
7,clone,0,0,9,clone(function[]): void
7,clone,0,1,0,JSON.stringify(function): string
7,clone,0,1,1,JSON.parse(string)
7,clone,0,1,2,T[].slice(number): T[]
7,clone,0,1,3,T[].map(function): U[]
7,clone,0,1,4,"extend(boolean, undefined[], function)"
7,clone,0,1,5,slice(number)
7,clone,0,1,6,T[].slice(): T[]
7,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
7,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
7,clone,0,1,9,T[].push(T[]): number
7,clone,0,2,0,T[].concat(function): T[]
7,clone,0,2,1,undefined[].add(string)
7,clone,0,2,2,add(string)
7,clone,0,2,3,T[].slice(): T[]
7,clone,0,2,4,T[].push(T[]): number
7,clone,0,3,0,T[].map(function): U[]
7,clone,0,3,1,T[].forEach(function): void
7,clone,0,3,2,map(function)
7,clone,0,3,3,forEach(function)
7,clone,0,3,4,slice()
7,clone,0,3,5,JSON.parse(string)
7,clone,0,3,6,JSON.stringify(unknown): string
7,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
7,clone,0,5,0,map(function)
7,clone,0,5,1,"getGenericItems(unknown, unknown)"
7,clone,0,5,2,T[].forEach(function): void
7,clone,0,5,3,cloneDeep(unknown)
7,clone,0,5,4,JSON.parse(string)
7,clone,0,5,5,JSON.stringify(unknown): string
7,clone,0,5,6,slice()
7,clone,0,5,7,T[].map(function): U[]
7,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
7,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
7,clone,0,6,0,bestCopyEver(object)
7,clone,0,6,1,iterationCopy(object): object
7,clone,0,6,2,JSON.stringify(unknown): string
7,clone,0,6,3,JSON.parse(string)
7,clone,0,7,0,T[].map(function): U[]
7,clone,0,8,0,JSON.stringify(unknown): string
7,clone,0,8,1,JSON.parse(string)
7,clone,0,8,2,map(function)
7,clone,0,8,3,structuredClone(unknown)
7,clone,0,8,4,slice(number)
7,clone,0,8,5,"map(unknown, function)"
7,clone,0,8,6,evalJSON(unknown)
7,clone,0,8,7,toJSON(unknown)
7,clone,0,8,8,JSON.stringify(object): string
7,clone,0,8,9,cloneDeep(function)
7,clone,0,9,0,JSON.stringify(number[][]): string
7,clone,0,9,1,JSON.parse(string)
7,serve,0,0,0,static(unknown)
7,serve,0,0,1,"use(string, unknown)"
7,serve,0,0,2,"use(string, function)"
7,serve,0,0,3,express()
7,serve,0,0,4,"join(unknown, string)"
7,serve,0,0,5,"get(string, function)"
7,serve,0,0,6,listen(number)
7,serve,0,1,0,"join(unknown, string)"
7,serve,0,1,1,static(unknown)
7,serve,0,1,2,use(unknown)
7,serve,0,2,0,static(string)
7,serve,0,2,1,use(unknown)
7,serve,0,4,0,static(string)
7,serve,0,4,1,use(unknown)
7,serve,0,5,0,static(string)
7,serve,0,5,1,use(unknown)
7,serve,0,6,0,"join(unknown, string)"
7,serve,0,6,1,static(unknown)
7,serve,0,6,2,"use(string, unknown)"
7,serve,0,7,0,static(string)
7,serve,0,7,1,use(unknown)
7,serve,0,7,2,"set(string, unknown)"
7,serve,0,7,3,express()
7,serve,0,8,0,"join(unknown, string)"
7,serve,0,8,1,static(unknown)
7,serve,0,8,2,use(unknown)
7,serve,0,8,3,"use(string, unknown)"
8,currency,0,0,0,Number.toFixed(number): string
8,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
8,currency,0,0,2,"String.replace(object, string): string"
8,currency,0,0,3,Number.toLocaleString(): string
8,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
8,currency,0,0,5,"number.formatMoney(number, string, string)"
8,currency,0,0,6,number.format(number)
8,currency,0,0,7,NumberConstructor.Number(unknown): number
8,currency,0,0,8,toFixed(number)
8,currency,0,0,9,StringConstructor.String(unknown): string
8,currency,0,1,0,formatMoney(number)
8,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
8,currency,0,3,0,formatTime(string)
8,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
8,currency,0,3,2,Document.getElementById(string): HTMLElement
8,currency,0,3,3,"moment(string, string)"
8,currency,0,3,4,format(string)
8,currency,0,3,5,T[].forEach(function): void
8,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
8,currency,0,4,1,unshift(unknown)
8,currency,0,4,2,"substr(unknown, number)"
8,currency,0,4,3,formatMoney(unknown)
8,currency,0,5,0,"replace(regex, string)"
8,currency,0,5,1,setInputValue(unknown)
8,currency,0,6,0,formatMoney(number)
8,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
8,currency,0,7,1,"String.replace(string | RegExp, string): string"
8,currency,0,7,2,toFixed(number)
8,currency,0,7,3,"String.replace(object, string): string"
8,currency,0,7,4,Math.abs(number): number
8,currency,0,7,5,Math.trunc(number): number
8,currency,0,7,6,Number.toFixed(): string
8,currency,0,7,7,Number.toFixed(number): string
8,currency,0,7,8,"number.replace(regex, string)"
8,currency,0,7,9,"replace(regex, string)"
8,currency,0,8,0,"format(string, string, number): string"
8,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
8,currency,0,8,2,"String.replace(string | RegExp, string): string"
8,currency,0,8,3,String.trim(): string
8,find,0,0,0,T[].filter(function): T[]
8,find,0,0,1,"search(string, object[])"
8,find,0,0,2,T[].find(function): T
8,find,0,0,3,find(function)
8,find,0,0,4,indexOf(unknown)
8,find,0,0,5,"fill(string, unknown, number)"
8,find,0,0,6,findIndex(function)
8,find,0,0,7,function.search(string): object
8,find,0,0,8,forEach(function)
8,find,0,0,9,map(function)
8,find,0,1,0,T[].indexOf(T): number
8,find,0,1,1,T[].includes(T): boolean
8,find,0,1,2,"inArray(string, string[])"
8,find,0,1,3,includes(string)
8,find,0,1,4,"inArray(string, unknown)"
8,find,0,1,5,T[].some(function): boolean
8,find,0,1,6,T[].find(function): T
8,find,0,2,0,T[].some(function): boolean
8,find,0,2,1,T[].filter(function): T[]
8,find,0,2,2,T[].findIndex(function): number
8,find,0,2,3,T[].find(function): T
8,find,0,2,4,find(function)
8,find,0,2,5,T[].forEach(function): void
8,find,0,3,0,T[].find(function): T
8,find,0,3,1,T[].filter(function): T[]
8,find,0,3,2,find(function)
8,find,0,3,3,"filterValue(object[], string, number)"
8,find,0,3,4,"filteredArray(object[], string, number): any[]"
8,find,0,3,5,"findWhere(unknown, object)"
8,find,0,3,6,T[].findIndex(function): number
8,find,0,3,7,some(function)
8,find,0,3,8,"select(unknown, function)"
8,find,0,3,9,"reduce(function, null)"
8,find,0,4,0,"T[].reduce(function, U): U"
8,find,0,4,1,filter(function)
8,find,0,4,2,"grep(unknown, function)"
8,find,0,4,3,T[].find(function): T
8,find,0,4,4,function.(): function
8,find,0,4,5,T[].map(function): U[]
8,find,0,4,6,ArrayConstructor.Array(number): any[]
8,find,0,4,7,map(function[])
8,find,0,4,8,"each(unknown, function)"
8,find,0,4,9,map(function)
8,find,0,5,0,T[].filter(function): T[]
8,find,0,5,1,filter(function)
8,find,0,6,0,T[].includes(T): boolean
8,find,0,6,1,T[].indexOf(T): number
8,find,0,6,2,T[].find(function): T
8,find,0,6,3,T[].some(function): boolean
8,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
8,find,0,6,5,T[].findIndex(function): number
8,find,0,6,6,number[].contains(number)
8,find,0,6,7,number[].contains(string)
8,find,0,6,8,indexOf(string)
8,find,0,6,9,indexOf(number)
8,recent,0,0,0,format(string)
8,recent,0,0,1,moment()
8,recent,0,0,2,moment(string)
8,recent,0,0,3,moment(unknown)
8,recent,0,0,4,moment(number)
8,recent,0,0,5,format()
8,recent,0,0,6,"format(Date, string)"
8,recent,0,0,7,"moment(string, string)"
8,recent,0,0,8,locale(string)
8,recent,0,0,9,utc()
8,recent,0,1,0,moment()
8,recent,0,1,1,"moment(string, string)"
8,recent,0,1,2,isBefore(unknown)
8,recent,0,2,0,forEach(function)
8,recent,0,2,1,moment()
8,recent,0,2,2,format()
8,recent,0,2,3,invalid()
8,recent,0,2,4,isValid()
8,recent,0,3,0,"moment(string, string)"
8,recent,0,3,1,format(string)
8,recent,0,4,0,endOf(string)
8,recent,0,4,1,moment(string)
8,recent,0,4,2,utc()
8,recent,0,4,3,toDate()
8,recent,0,4,4,format(string)
8,recent,0,4,5,utc(string)
8,recent,0,7,0,dateFormatwithSec(string)
8,recent,0,7,1,"utc(unknown, string)"
8,recent,0,8,0,date(number)
8,recent,0,8,1,"subtract(number, string)"
8,recent,0,8,2,moment()
8,recent,0,8,3,"Date.setMonth(number, number): number"
8,recent,0,8,4,Date.getMonth(): number
8,recent,0,8,5,Date.toString(): string
8,recent,0,9,0,format(string)
8,recent,0,9,1,moment(unknown)
8,recent,0,9,2,T[].map(function): U[]
8,recent,0,9,3,endOf(string)
8,recent,0,9,4,moment()
8,recent,0,9,5,startOf(string)
8,recent,0,9,6,moment(Date)
8,recent,1,0,0,"add(number, string)"
8,recent,1,0,1,moment()
8,recent,1,0,2,format(string)
8,recent,1,0,3,function.addRealMonth(unknown)
8,recent,1,0,4,isSame(unknown)
8,recent,1,0,5,date()
8,recent,1,0,6,endOf(string)
8,recent,1,0,7,moment(unknown)
8,recent,1,0,8,moment(string)
8,recent,1,0,9,calendar()
8,recent,1,1,0,$(string)
8,recent,1,1,1,"on(string, function)"
8,recent,1,1,2,"add(number, string)"
8,recent,1,1,3,moment()
8,recent,1,2,0,moment()
8,recent,1,2,1,"diff(unknown, string)"
8,recent,1,2,2,diff(unknown)
8,recent,1,2,3,"moment(string, string)"
8,recent,1,2,4,moment(unknown)
8,recent,1,2,5,moment(string)
8,recent,1,2,6,"isSame(Date, string)"
8,recent,1,2,7,isBefore()
8,recent,1,2,8,isAfter()
8,recent,1,2,9,"isSame(unknown, string)"
8,recent,1,3,0,format(string)
8,recent,1,3,1,Document.write(string[]): void
8,recent,1,3,2,"add(number, string)"
8,recent,1,4,0,$(string)
8,recent,1,4,1,click(function)
8,recent,1,4,2,moment()
8,recent,1,4,3,"add(number, string)"
8,recent,1,6,0,"add(number, string)"
8,recent,1,6,1,date(number)
8,recent,1,6,2,startOf(string)
8,recent,1,6,3,"subtract(number, string)"
8,recent,1,6,4,moment()
8,recent,1,6,5,endOf(string)
8,recent,1,7,0,Date.getMonth(): number
8,recent,1,7,1,Date.setMonth(number): number
8,recent,1,7,2,"addMonths(Date, number)"
8,recent,1,7,3,toISOString()
8,recent,1,7,4,Date.addMonths(number)
8,recent,1,7,5,Date.getDate(): number
8,recent,1,7,6,Date.setDate(number): number
8,recent,1,7,7,toString()
8,recent,1,7,8,moment(Date)
8,recent,1,7,9,"add(number, string)"
8,recent,1,8,0,"moment(string, string)"
8,recent,1,8,1,moment()
8,recent,1,8,2,checkDays(unknown): string
8,recent,1,8,3,endOf(string)
8,recent,1,8,4,format(string)
8,recent,1,8,5,"add(number, string)"
8,recent,1,9,0,format(string)
8,recent,1,9,1,moment()
8,recent,1,9,2,month(string)
8,recent,1,9,3,month(number)
8,recent,1,9,4,"moment(number, string)"
9,find,0,0,0,T[].filter(function): T[]
9,find,0,0,1,"search(string, object[])"
9,find,0,0,2,T[].find(function): T
9,find,0,0,3,find(function)
9,find,0,0,4,indexOf(unknown)
9,find,0,0,5,"fill(string, unknown, number)"
9,find,0,0,6,findIndex(function)
9,find,0,0,7,function.search(string): object
9,find,0,0,8,forEach(function)
9,find,0,0,9,map(function)
9,find,0,1,0,T[].indexOf(T): number
9,find,0,1,1,T[].includes(T): boolean
9,find,0,1,2,"inArray(string, string[])"
9,find,0,1,3,includes(string)
9,find,0,1,4,"inArray(string, unknown)"
9,find,0,1,5,T[].some(function): boolean
9,find,0,1,6,T[].find(function): T
9,find,0,2,0,T[].some(function): boolean
9,find,0,2,1,T[].filter(function): T[]
9,find,0,2,2,T[].findIndex(function): number
9,find,0,2,3,T[].find(function): T
9,find,0,2,4,find(function)
9,find,0,2,5,T[].forEach(function): void
9,find,0,3,0,T[].find(function): T
9,find,0,3,1,T[].filter(function): T[]
9,find,0,3,2,find(function)
9,find,0,3,3,"filterValue(object[], string, number)"
9,find,0,3,4,"filteredArray(object[], string, number): any[]"
9,find,0,3,5,"findWhere(unknown, object)"
9,find,0,3,6,T[].findIndex(function): number
9,find,0,3,7,some(function)
9,find,0,3,8,"select(unknown, function)"
9,find,0,3,9,"reduce(function, null)"
9,find,0,4,0,"T[].reduce(function, U): U"
9,find,0,4,1,filter(function)
9,find,0,4,2,"grep(unknown, function)"
9,find,0,4,3,T[].find(function): T
9,find,0,4,4,function.(): function
9,find,0,4,5,T[].map(function): U[]
9,find,0,4,6,ArrayConstructor.Array(number): any[]
9,find,0,4,7,map(function[])
9,find,0,4,8,"each(unknown, function)"
9,find,0,4,9,map(function)
9,find,0,5,0,T[].filter(function): T[]
9,find,0,5,1,filter(function)
9,find,0,6,0,T[].includes(T): boolean
9,find,0,6,1,T[].indexOf(T): number
9,find,0,6,2,T[].find(function): T
9,find,0,6,3,T[].some(function): boolean
9,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
9,find,0,6,5,T[].findIndex(function): number
9,find,0,6,6,number[].contains(number)
9,find,0,6,7,number[].contains(string)
9,find,0,6,8,indexOf(string)
9,find,0,6,9,indexOf(number)
9,find,0,7,0,T[].findIndex(function): number
9,find,0,7,1,T[].filter(function): T[]
9,find,0,7,2,T[].map(function): U[]
9,find,0,7,3,T[].forEach(function): void
9,find,0,7,4,map(function)
9,find,0,7,5,"T[].splice(number, number, T[]): T[]"
9,find,0,7,6,T[].find(function): T
9,find,0,7,7,findIndex(function)
9,find,0,7,8,forEach(function)
9,find,0,7,9,T[].pop(): T
9,find,0,8,0,T[].filter(function): T[]
9,find,0,8,1,filter(function)
9,find,0,9,0,includes(unknown)
9,find,0,9,1,"inArray(number, string[])"
9,find,0,9,2,"has(unknown, boolean)"
9,find,0,9,3,has(object)
9,find,0,9,4,"has(object, number)"
9,find,0,9,5,has(string)
9,find,0,9,6,has(number)
9,find,0,9,7,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
9,find,0,9,8,indexOf(unknown)
9,find,0,9,9,"customSlowerSearch(unknown, unknown)"
9,clone,0,0,0,JSON.parse(string)
9,clone,0,0,1,JSON.stringify(unknown): string
9,clone,0,0,2,T[].slice(): T[]
9,clone,0,0,3,slice()
9,clone,0,0,4,slice(number)
9,clone,0,0,5,JSON.stringify(function): string
9,clone,0,0,6,map(function)
9,clone,0,0,7,T[].push(T[]): number
9,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
9,clone,0,0,9,clone(function[]): void
9,clone,0,1,0,JSON.stringify(function): string
9,clone,0,1,1,JSON.parse(string)
9,clone,0,1,2,T[].slice(number): T[]
9,clone,0,1,3,T[].map(function): U[]
9,clone,0,1,4,"extend(boolean, undefined[], function)"
9,clone,0,1,5,slice(number)
9,clone,0,1,6,T[].slice(): T[]
9,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
9,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
9,clone,0,1,9,T[].push(T[]): number
9,clone,0,2,0,T[].concat(function): T[]
9,clone,0,2,1,undefined[].add(string)
9,clone,0,2,2,add(string)
9,clone,0,2,3,T[].slice(): T[]
9,clone,0,2,4,T[].push(T[]): number
9,clone,0,3,0,T[].map(function): U[]
9,clone,0,3,1,T[].forEach(function): void
9,clone,0,3,2,map(function)
9,clone,0,3,3,forEach(function)
9,clone,0,3,4,slice()
9,clone,0,3,5,JSON.parse(string)
9,clone,0,3,6,JSON.stringify(unknown): string
9,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
9,clone,0,5,0,map(function)
9,clone,0,5,1,"getGenericItems(unknown, unknown)"
9,clone,0,5,2,T[].forEach(function): void
9,clone,0,5,3,cloneDeep(unknown)
9,clone,0,5,4,JSON.parse(string)
9,clone,0,5,5,JSON.stringify(unknown): string
9,clone,0,5,6,slice()
9,clone,0,5,7,T[].map(function): U[]
9,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
9,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
9,clone,0,6,0,bestCopyEver(object)
9,clone,0,6,1,iterationCopy(object): object
9,clone,0,6,2,JSON.stringify(unknown): string
9,clone,0,6,3,JSON.parse(string)
9,clone,0,7,0,T[].map(function): U[]
9,clone,0,8,0,JSON.stringify(unknown): string
9,clone,0,8,1,JSON.parse(string)
9,clone,0,8,2,map(function)
9,clone,0,8,3,structuredClone(unknown)
9,clone,0,8,4,slice(number)
9,clone,0,8,5,"map(unknown, function)"
9,clone,0,8,6,evalJSON(unknown)
9,clone,0,8,7,toJSON(unknown)
9,clone,0,8,8,JSON.stringify(object): string
9,clone,0,8,9,cloneDeep(function)
9,clone,0,9,0,JSON.stringify(number[][]): string
9,clone,0,9,1,JSON.parse(string)
9,recent,0,0,0,subtract(object)
9,recent,0,0,1,moment(string)
9,recent,0,0,2,String.split(string | RegExp): string[]
9,recent,0,0,3,subtract(unknown)
9,recent,0,0,4,moment(number)
9,recent,0,0,5,format(string)
9,recent,0,0,6,toString()
9,recent,0,0,7,subtract(ObjectConstructor)
9,recent,0,0,8,"subtract(StringConstructor, StringConstructor)"
9,recent,0,0,9,"subtract(NumberConstructor, StringConstructor)"
9,recent,0,1,0,"subtract(number, string)"
9,recent,0,1,1,format(string)
9,recent,0,1,2,moment()
9,recent,0,1,3,toDate()
9,recent,0,1,4,moment(Date)
9,recent,0,1,5,duration(object)
9,recent,0,1,6,subtract(unknown)
9,recent,0,1,7,"subtract(string, number)"
9,recent,0,1,8,format()
9,recent,0,1,9,"moment(string, string)"
9,recent,0,2,0,Date.getDate(): number
9,recent,0,2,1,Date.getTime(): number
9,recent,0,2,2,Date.setDate(number): number
9,recent,0,2,3,Date.setTime(number): number
9,recent,0,2,4,Date.toLocaleString(): string
9,recent,0,2,5,Document.write(string[]): void
9,recent,0,2,6,"addDays(Date, number): Date"
9,recent,0,2,7,Date.getMonth(): number
9,recent,0,2,8,Date.getFullYear(): number
9,recent,0,2,9,"AddOrSubractDays(Date, number, boolean): Date"
9,recent,0,3,0,Date.setMinutes(number): number
9,recent,0,3,1,Date.getMinutes(): number
9,recent,0,3,2,getMinutes()
9,recent,0,3,3,DateConstructor.now(): number
9,recent,0,3,4,getTime()
9,recent,0,3,5,toDate()
9,recent,0,3,6,"subtract(number, string)"
9,recent,0,3,7,moment(Date)
9,recent,0,3,8,now()
9,recent,0,3,9,minus(object)
9,recent,0,4,0,"calculateWithoutTimeOffset(unknown, unknown)"
9,recent,0,6,0,Math.abs(number): number
9,recent,0,6,1,"replace(regex, string)"
9,recent,0,6,2,"it(string, function)"
9,recent,0,7,0,duration(unknown)
9,recent,0,7,1,diff(unknown)
9,recent,0,7,2,asHours()
9,recent,0,7,3,Math.floor(number): number
9,recent,0,7,4,"moment(string, string)"
9,recent,0,7,5,moment(string)
9,recent,0,7,6,asMinutes()
9,recent,0,7,7,utc(unknown)
9,recent,0,7,8,format(string)
9,recent,0,7,9,"diff(unknown, string)"
9,recent,0,9,0,moment(unknown)
9,recent,0,9,1,format(string)
9,recent,0,9,2,moment()
9,recent,0,9,3,format()
9,recent,0,9,4,"subtract(number, string)"
9,recent,0,9,5,unix()
9,recent,0,9,6,fromNow()
10,find,0,0,0,T[].filter(function): T[]
10,find,0,0,1,"search(string, object[])"
10,find,0,0,2,T[].find(function): T
10,find,0,0,3,find(function)
10,find,0,0,4,indexOf(unknown)
10,find,0,0,5,"fill(string, unknown, number)"
10,find,0,0,6,findIndex(function)
10,find,0,0,7,function.search(string): object
10,find,0,0,8,forEach(function)
10,find,0,0,9,map(function)
10,find,0,1,0,T[].indexOf(T): number
10,find,0,1,1,T[].includes(T): boolean
10,find,0,1,2,"inArray(string, string[])"
10,find,0,1,3,includes(string)
10,find,0,1,4,"inArray(string, unknown)"
10,find,0,1,5,T[].some(function): boolean
10,find,0,1,6,T[].find(function): T
10,find,0,2,0,T[].some(function): boolean
10,find,0,2,1,T[].filter(function): T[]
10,find,0,2,2,T[].findIndex(function): number
10,find,0,2,3,T[].find(function): T
10,find,0,2,4,find(function)
10,find,0,2,5,T[].forEach(function): void
10,find,0,3,0,T[].find(function): T
10,find,0,3,1,T[].filter(function): T[]
10,find,0,3,2,find(function)
10,find,0,3,3,"filterValue(object[], string, number)"
10,find,0,3,4,"filteredArray(object[], string, number): any[]"
10,find,0,3,5,"findWhere(unknown, object)"
10,find,0,3,6,T[].findIndex(function): number
10,find,0,3,7,some(function)
10,find,0,3,8,"select(unknown, function)"
10,find,0,3,9,"reduce(function, null)"
10,find,0,4,0,"T[].reduce(function, U): U"
10,find,0,4,1,filter(function)
10,find,0,4,2,"grep(unknown, function)"
10,find,0,4,3,T[].find(function): T
10,find,0,4,4,function.(): function
10,find,0,4,5,T[].map(function): U[]
10,find,0,4,6,ArrayConstructor.Array(number): any[]
10,find,0,4,7,map(function[])
10,find,0,4,8,"each(unknown, function)"
10,find,0,4,9,map(function)
10,find,0,5,0,T[].filter(function): T[]
10,find,0,5,1,filter(function)
10,find,0,6,0,T[].includes(T): boolean
10,find,0,6,1,T[].indexOf(T): number
10,find,0,6,2,T[].find(function): T
10,find,0,6,3,T[].some(function): boolean
10,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
10,find,0,6,5,T[].findIndex(function): number
10,find,0,6,6,number[].contains(number)
10,find,0,6,7,number[].contains(string)
10,find,0,6,8,indexOf(string)
10,find,0,6,9,indexOf(number)
10,find,0,7,0,T[].findIndex(function): number
10,find,0,7,1,T[].filter(function): T[]
10,find,0,7,2,T[].map(function): U[]
10,find,0,7,3,T[].forEach(function): void
10,find,0,7,4,map(function)
10,find,0,7,5,"T[].splice(number, number, T[]): T[]"
10,find,0,7,6,T[].find(function): T
10,find,0,7,7,findIndex(function)
10,find,0,7,8,forEach(function)
10,find,0,7,9,T[].pop(): T
10,clone,0,0,0,JSON.parse(string)
10,clone,0,0,1,JSON.stringify(unknown): string
10,clone,0,0,2,T[].slice(): T[]
10,clone,0,0,3,slice()
10,clone,0,0,4,slice(number)
10,clone,0,0,5,JSON.stringify(function): string
10,clone,0,0,6,map(function)
10,clone,0,0,7,T[].push(T[]): number
10,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
10,clone,0,0,9,clone(function[]): void
10,clone,0,1,0,JSON.stringify(function): string
10,clone,0,1,1,JSON.parse(string)
10,clone,0,1,2,T[].slice(number): T[]
10,clone,0,1,3,T[].map(function): U[]
10,clone,0,1,4,"extend(boolean, undefined[], function)"
10,clone,0,1,5,slice(number)
10,clone,0,1,6,T[].slice(): T[]
10,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
10,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
10,clone,0,1,9,T[].push(T[]): number
10,clone,0,2,0,T[].concat(function): T[]
10,clone,0,2,1,undefined[].add(string)
10,clone,0,2,2,add(string)
10,clone,0,2,3,T[].slice(): T[]
10,clone,0,2,4,T[].push(T[]): number
10,clone,0,3,0,T[].map(function): U[]
10,clone,0,3,1,T[].forEach(function): void
10,clone,0,3,2,map(function)
10,clone,0,3,3,forEach(function)
10,clone,0,3,4,slice()
10,clone,0,3,5,JSON.parse(string)
10,clone,0,3,6,JSON.stringify(unknown): string
10,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
10,clone,0,5,0,map(function)
10,clone,0,5,1,"getGenericItems(unknown, unknown)"
10,clone,0,5,2,T[].forEach(function): void
10,clone,0,5,3,cloneDeep(unknown)
10,clone,0,5,4,JSON.parse(string)
10,clone,0,5,5,JSON.stringify(unknown): string
10,clone,0,5,6,slice()
10,clone,0,5,7,T[].map(function): U[]
10,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
10,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
10,clone,0,6,0,bestCopyEver(object)
10,clone,0,6,1,iterationCopy(object): object
10,clone,0,6,2,JSON.stringify(unknown): string
10,clone,0,6,3,JSON.parse(string)
10,clone,0,7,0,T[].map(function): U[]
10,clone,0,8,0,JSON.stringify(unknown): string
10,clone,0,8,1,JSON.parse(string)
10,clone,0,8,2,map(function)
10,clone,0,8,3,structuredClone(unknown)
10,clone,0,8,4,slice(number)
10,clone,0,8,5,"map(unknown, function)"
10,clone,0,8,6,evalJSON(unknown)
10,clone,0,8,7,toJSON(unknown)
10,clone,0,8,8,JSON.stringify(object): string
10,clone,0,8,9,cloneDeep(function)
10,clone,0,9,0,JSON.stringify(number[][]): string
10,clone,0,9,1,JSON.parse(string)
10,clone,1,0,0,JSON.parse(string)
10,clone,1,0,1,JSON.stringify(unknown): string
10,clone,1,0,2,T[].slice(): T[]
10,clone,1,0,3,slice()
10,clone,1,0,4,slice(number)
10,clone,1,0,5,JSON.stringify(function): string
10,clone,1,0,6,map(function)
10,clone,1,0,7,T[].push(T[]): number
10,clone,1,0,8,ArrayConstructor.Array(T[]): T[]
10,clone,1,0,9,clone(function[]): void
10,clone,1,1,0,clone()
10,clone,1,1,1,Dog.getName(): void
10,clone,1,1,2,println(void)
10,clone,1,1,3,setName(string)
10,clone,1,1,4,typeof myDogs.clone()
10,clone,1,1,5,println(number)
10,clone,1,1,6,println(unknown)
10,clone,1,1,7,println(string)
10,clone,1,1,8,getClass()
10,clone,1,1,9,equals(unknown)
10,clone,1,2,0,map(function)
10,clone,1,2,1,"getGenericItems(unknown, unknown)"
10,clone,1,2,2,T[].forEach(function): void
10,clone,1,2,3,cloneDeep(unknown)
10,clone,1,2,4,JSON.parse(string)
10,clone,1,2,5,JSON.stringify(unknown): string
10,clone,1,2,6,slice()
10,clone,1,2,7,T[].map(function): U[]
10,clone,1,2,8,"deepArrayCopy(unknown, unknown)"
10,clone,1,2,9,typeof globalThis.deepArrayCopy(unknown)
10,clone,1,3,0,T[].concat(function): T[]
10,clone,1,3,1,undefined[].add(string)
10,clone,1,3,2,add(string)
10,clone,1,3,3,T[].slice(): T[]
10,clone,1,3,4,T[].push(T[]): number
10,clone,1,4,0,T[].concat(ConcatArray<T>[]): T[]
10,clone,1,4,1,function.self2()
10,clone,1,4,2,"apply(unknown, unknown)"
10,clone,1,5,0,T[].map(function): U[]
10,clone,1,5,1,T[].forEach(function): void
10,clone,1,5,2,map(function)
10,clone,1,5,3,forEach(function)
10,clone,1,5,4,slice()
10,clone,1,5,5,JSON.parse(string)
10,clone,1,5,6,JSON.stringify(unknown): string
10,clone,1,6,0,State(unknown)
10,clone,1,6,1,Param(object)
10,clone,1,6,2,Fork(number)
10,clone,1,6,3,BenchmarkMode(unknown)
10,clone,1,6,4,Benchmark(unknown)
10,clone,1,6,5,"Measurement(number, number, number)"
10,clone,1,6,6,"Warmup(number, number, number)"
10,clone,1,6,7,OutputTimeUnit(unknown)
10,clone,1,6,8,Setup(unknown)
10,clone,1,6,9,"create(unknown, unknown)"
10,clone,1,8,0,clone()
10,clone,1,8,1,"main(unknown, unknown)"
10,clone,1,8,2,println(boolean)
10,clone,1,9,0,JSON.stringify(unknown): string
10,clone,1,9,1,JSON.parse(string)
10,clone,1,9,2,map(function)
10,clone,1,9,3,structuredClone(unknown)
10,clone,1,9,4,slice(number)
10,clone,1,9,5,"map(unknown, function)"
10,clone,1,9,6,evalJSON(unknown)
10,clone,1,9,7,toJSON(unknown)
10,clone,1,9,8,JSON.stringify(object): string
10,clone,1,9,9,cloneDeep(function)
10,recent,0,0,0,"diff(unknown, string)"
10,recent,0,0,1,diff(unknown)
10,recent,0,0,2,moment(string)
10,recent,0,1,0,moment()
10,recent,0,1,1,"subtract(number, string)"
10,recent,0,1,2,format(string)
10,recent,0,1,3,moment(number)
10,recent,0,1,4,DateConstructor.now(): number
10,recent,0,1,5,toDate()
10,recent,0,1,6,endOf(string)
10,recent,0,1,7,day(number)
10,recent,0,1,8,startOf(string)
10,recent,0,2,0,"subtract(number, string)"
10,recent,0,2,1,format(string)
10,recent,0,2,2,moment()
10,recent,0,2,3,toDate()
10,recent,0,2,4,moment(Date)
10,recent,0,2,5,duration(object)
10,recent,0,2,6,subtract(unknown)
10,recent,0,2,7,"subtract(string, number)"
10,recent,0,2,8,format()
10,recent,0,2,9,"moment(string, string)"
10,recent,0,3,0,format(string)
10,recent,0,3,1,"subtract(number, string)"
10,recent,0,3,2,"add(number, string)"
10,recent,0,3,3,moment(number)
10,recent,0,3,4,"subtract(string, number)"
10,recent,0,3,5,"add(string, number)"
10,recent,0,3,6,moment()
10,recent,0,3,7,Document.getElementById(string): HTMLElement
10,recent,0,3,8,Date.PrevDay(number)
10,recent,0,3,9,Date.Nextday(number)
10,recent,0,4,0,setDate(unknown): void
10,recent,0,4,1,now()
10,recent,0,4,2,moment(unknown)
10,recent,0,4,3,"add(number, string)"
10,recent,0,5,0,diff(unknown)
10,recent,0,5,1,"tz(Date, string, string)"
10,recent,0,5,2,local()
10,recent,0,5,3,duration(unknown)
10,recent,0,5,4,asHours()
10,recent,0,5,5,"tz(unknown, string, string)"
10,recent,0,5,6,"diff(unknown, string)"
10,recent,0,5,7,moment()
10,recent,0,5,8,moment(unknown)
10,recent,0,5,9,format(string)
10,recent,0,6,0,"subtract(number, string)"
10,recent,0,7,0,clone()
10,recent,0,7,1,"subtract(number, string)"
10,recent,0,7,2,format()
10,recent,0,7,3,moment(string)
10,recent,0,8,0,"subtract(string, number)"
10,recent,0,8,1,moment()
10,recent,0,8,2,"subtract(number, string)"
10,recent,0,8,3,format(string)
10,recent,0,9,0,Number.toString(): string
10,recent,0,9,1,moment(string)
10,recent,0,9,2,unix()
10,recent,0,9,3,toString()
10,recent,0,9,4,year()
10,recent,0,9,5,"subtract(number, string)"
10,recent,0,9,6,moment(unknown)
10,recent,0,9,7,asDays()
10,recent,0,9,8,diff(unknown)
10,recent,0,9,9,duration(unknown)
11,sort,0,0,0,T[].sort(function): this
11,sort,0,0,1,sort(function)
11,sort,0,0,2,"sortBy(unknown, string)"
11,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
11,sort,0,0,4,"function.sort_by(string, boolean, function): function"
11,sort,0,0,5,sort(typeof mycomparator)
11,sort,0,0,6,function[].(): function[]
11,sort,0,0,7,"sortBy(any[], object): any[]"
11,sort,0,0,8,reverse()
11,sort,0,0,9,T[].sort(): this
11,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
11,sort,0,1,1,"function[].sortBy(object[], string): any[]"
11,sort,0,2,0,sort(function)
11,sort,0,2,1,T[].sort(function): this
11,sort,0,2,2,T[].push(T[]): number
11,sort,0,3,0,ObjectConstructor.keys(object): string[]
11,sort,0,3,1,T[].sort(function): this
11,sort,0,3,2,sort(typeof compare)
11,sort,0,4,0,T[].reverse(): T[]
11,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
11,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
11,sort,0,4,3,ObjectConstructor.keys(object): string[]
11,sort,0,4,4,T[].sort(): this
11,sort,0,4,5,T[].forEach(function): void
11,sort,0,5,0,sort(function)
11,sort,0,5,1,T[].sort(function): this
11,sort,0,5,2,"object[].sortBy(string, string)"
11,sort,0,5,3,sortBy(string)
11,sort,0,5,4,reverse(unknown)
11,sort,0,5,5,sort(typeof compare)
11,sort,0,5,6,dynamicSort(string): function
11,sort,0,5,7,"dynamicSortMultiple(string, string): function"
11,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
11,sort,0,5,9,"sortBy(object[], string)"
11,sort,0,6,0,T[].sort(function): this
11,sort,0,7,0,T[].sort(function): this
11,sort,0,8,0,T[].sort(function): this
11,sort,0,8,1,sort(function)
11,sort,0,9,0,sort(function)
11,sort,0,9,1,T[].sort(function): this
11,sort,0,9,2,dynamicSort(string): function
11,serve,0,0,0,static(string)
11,serve,0,0,1,use(unknown)
11,serve,0,0,2,"use(string, unknown)"
11,serve,0,3,0,"join(unknown, string)"
11,serve,0,3,1,static(unknown)
11,serve,0,3,2,"use(string, unknown)"
11,serve,0,3,3,"get(string, unknown)"
11,serve,0,4,0,use(function)
11,serve,0,4,1,static(string)
11,serve,0,4,2,use(unknown)
11,serve,0,5,0,static(unknown)
11,serve,0,5,1,use(unknown)
11,serve,0,5,2,"join(unknown, string)"
11,serve,0,5,3,"join(unknown, string, string)"
11,serve,0,6,0,static(string)
11,serve,0,6,1,"use(string, unknown)"
11,serve,0,6,2,"join(unknown, string)"
11,serve,0,6,3,static(unknown)
11,serve,0,6,4,use(unknown)
11,serve,0,7,0,"use(string, function)"
11,serve,0,7,1,use(function)
11,serve,0,8,0,"get(string, function)"
12,sort,0,0,0,T[].sort(function): this
12,sort,0,0,1,sort(function)
12,sort,0,0,2,"sortBy(unknown, string)"
12,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
12,sort,0,0,4,"function.sort_by(string, boolean, function): function"
12,sort,0,0,5,sort(typeof mycomparator)
12,sort,0,0,6,function[].(): function[]
12,sort,0,0,7,"sortBy(any[], object): any[]"
12,sort,0,0,8,reverse()
12,sort,0,0,9,T[].sort(): this
12,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
12,sort,0,1,1,"function[].sortBy(object[], string): any[]"
12,sort,0,2,0,sort(function)
12,sort,0,2,1,T[].sort(function): this
12,sort,0,2,2,T[].push(T[]): number
12,sort,0,3,0,ObjectConstructor.keys(object): string[]
12,sort,0,3,1,T[].sort(function): this
12,sort,0,3,2,sort(typeof compare)
12,sort,0,4,0,T[].reverse(): T[]
12,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
12,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
12,sort,0,4,3,ObjectConstructor.keys(object): string[]
12,sort,0,4,4,T[].sort(): this
12,sort,0,4,5,T[].forEach(function): void
12,sort,0,5,0,sort(function)
12,sort,0,5,1,T[].sort(function): this
12,sort,0,5,2,"object[].sortBy(string, string)"
12,sort,0,5,3,sortBy(string)
12,sort,0,5,4,reverse(unknown)
12,sort,0,5,5,sort(typeof compare)
12,sort,0,5,6,dynamicSort(string): function
12,sort,0,5,7,"dynamicSortMultiple(string, string): function"
12,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
12,sort,0,5,9,"sortBy(object[], string)"
12,sort,0,6,0,T[].sort(function): this
12,sort,0,7,0,T[].sort(function): this
12,sort,0,8,0,T[].sort(function): this
12,sort,0,8,1,sort(function)
12,sort,0,9,0,sort(function)
12,sort,0,9,1,T[].sort(function): this
12,sort,0,9,2,dynamicSort(string): function
12,clone,0,0,0,JSON.parse(string)
12,clone,0,0,1,JSON.stringify(unknown): string
12,clone,0,0,2,T[].slice(): T[]
12,clone,0,0,3,slice()
12,clone,0,0,4,slice(number)
12,clone,0,0,5,JSON.stringify(function): string
12,clone,0,0,6,map(function)
12,clone,0,0,7,T[].push(T[]): number
12,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
12,clone,0,0,9,clone(function[]): void
12,clone,0,1,0,JSON.stringify(function): string
12,clone,0,1,1,JSON.parse(string)
12,clone,0,1,2,T[].slice(number): T[]
12,clone,0,1,3,T[].map(function): U[]
12,clone,0,1,4,"extend(boolean, undefined[], function)"
12,clone,0,1,5,slice(number)
12,clone,0,1,6,T[].slice(): T[]
12,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
12,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
12,clone,0,1,9,T[].push(T[]): number
12,clone,0,2,0,T[].concat(function): T[]
12,clone,0,2,1,undefined[].add(string)
12,clone,0,2,2,add(string)
12,clone,0,2,3,T[].slice(): T[]
12,clone,0,2,4,T[].push(T[]): number
12,clone,0,3,0,T[].map(function): U[]
12,clone,0,3,1,T[].forEach(function): void
12,clone,0,3,2,map(function)
12,clone,0,3,3,forEach(function)
12,clone,0,3,4,slice()
12,clone,0,3,5,JSON.parse(string)
12,clone,0,3,6,JSON.stringify(unknown): string
12,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
12,clone,0,5,0,map(function)
12,clone,0,5,1,"getGenericItems(unknown, unknown)"
12,clone,0,5,2,T[].forEach(function): void
12,clone,0,5,3,cloneDeep(unknown)
12,clone,0,5,4,JSON.parse(string)
12,clone,0,5,5,JSON.stringify(unknown): string
12,clone,0,5,6,slice()
12,clone,0,5,7,T[].map(function): U[]
12,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
12,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
12,clone,0,6,0,bestCopyEver(object)
12,clone,0,6,1,iterationCopy(object): object
12,clone,0,6,2,JSON.stringify(unknown): string
12,clone,0,6,3,JSON.parse(string)
12,clone,0,7,0,T[].map(function): U[]
12,clone,0,8,0,JSON.stringify(unknown): string
12,clone,0,8,1,JSON.parse(string)
12,clone,0,8,2,map(function)
12,clone,0,8,3,structuredClone(unknown)
12,clone,0,8,4,slice(number)
12,clone,0,8,5,"map(unknown, function)"
12,clone,0,8,6,evalJSON(unknown)
12,clone,0,8,7,toJSON(unknown)
12,clone,0,8,8,JSON.stringify(object): string
12,clone,0,8,9,cloneDeep(function)
12,clone,0,9,0,JSON.stringify(number[][]): string
12,clone,0,9,1,JSON.parse(string)
12,clone,1,0,0,"T[].reduce(function, U): U"
12,clone,1,0,1,JSON.parse(string)
12,clone,1,0,2,JSON.stringify(object): string
12,clone,1,0,3,JSON.stringify(unknown): string
12,clone,1,0,4,"ObjectConstructor.assign(T, U): T & U"
12,clone,1,0,5,clone(object)
12,clone,1,0,6,cloneDeep(function)
12,clone,1,0,7,cloneDeep(object)
12,clone,1,0,8,"extend(boolean, object, object)"
12,clone,1,0,9,clone(unknown)
12,clone,1,1,0,JSON.parse(string)
12,clone,1,1,1,JSON.stringify(unknown): string
12,clone,1,1,2,ObjectConstructor.assign(object)
12,clone,1,1,3,cloneDeep(function)
12,clone,1,1,4,JSON.stringify(object): string
12,clone,1,1,5,instanceCopy(myObject)
12,clone,1,1,6,something()
12,clone,1,1,7,structuredClone(unknown)
12,clone,1,2,0,JSON.stringify(object): string
12,clone,1,2,1,JSON.parse(string)
12,clone,1,2,2,"function.mapCopy(unknown, function): object"
12,clone,1,2,3,clone(object[])
12,clone,1,2,4,T[].slice(): T[]
12,clone,1,2,5,cloneDeep(object[])
12,clone,1,2,6,structuredClone(object)
12,clone,1,2,7,"ObjectConstructor.assign(T, U): T & U"
12,clone,1,2,8,deepClone(number)
12,clone,1,2,9,deepClone(string)
12,clone,1,3,0,JSON.stringify(object): string
12,clone,1,3,1,JSON.parse(string)
12,clone,1,4,0,JSON.parse(string)
12,clone,1,4,1,JSON.stringify(unknown): string
12,clone,1,4,2,deepClone(object)
12,clone,1,4,3,structuredClone(object)
12,clone,1,4,4,JSON.stringify(object): string
12,clone,1,4,5,Document.createElement(K): HTMLElementTagNameMap[K]
12,clone,1,4,6,clone(object)
12,clone,1,4,7,snapshot(unknown)
12,clone,1,4,8,"concat(unknown, unknown, unknown, unknown)"
12,clone,1,4,9,clone(unknown)
12,clone,1,6,0,JSON.parse(string)
12,clone,1,6,1,"ObjectConstructor.assign(T, U): T & U"
12,clone,1,6,2,cloneDeep(unknown)
12,clone,1,6,3,"extend(boolean, object, object)"
12,clone,1,6,4,JSON.stringify(object): string
12,clone,1,6,5,JSON.stringify(unknown): string
12,serve,0,0,0,static(string)
12,serve,0,0,1,use(unknown)
12,serve,0,0,2,"use(string, unknown)"
12,serve,0,3,0,"use(string, function)"
12,serve,0,3,1,use(function)
12,serve,0,4,0,"get(string, function)"
12,serve,0,4,1,"get(string, function, unknown)"
12,serve,0,4,2,use(unknown)
12,serve,0,4,3,express()
12,serve,0,4,4,()
12,serve,0,5,0,static(string)
12,serve,0,5,1,"use(string, unknown)"
12,serve,0,5,2,"join(unknown, string)"
12,serve,0,5,3,static(unknown)
12,serve,0,5,4,use(unknown)
12,serve,0,6,0,static(unknown)
12,serve,0,6,1,use(unknown)
12,serve,0,6,2,"join(unknown, string)"
12,serve,0,6,3,"join(unknown, string, string)"
12,serve,0,7,0,"get(string, unknown)"
12,serve,0,7,1,"get(string, function)"
12,serve,0,8,0,"join(unknown, string)"
12,serve,0,8,1,static(unknown)
12,serve,0,8,2,"use(string, unknown)"
12,serve,0,8,3,"get(string, unknown)"
13,sort,0,0,0,T[].sort(function): this
13,sort,0,0,1,sort(function)
13,sort,0,0,2,"sortBy(unknown, string)"
13,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
13,sort,0,0,4,"function.sort_by(string, boolean, function): function"
13,sort,0,0,5,sort(typeof mycomparator)
13,sort,0,0,6,function[].(): function[]
13,sort,0,0,7,"sortBy(any[], object): any[]"
13,sort,0,0,8,reverse()
13,sort,0,0,9,T[].sort(): this
13,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
13,sort,0,1,1,"function[].sortBy(object[], string): any[]"
13,sort,0,2,0,sort(function)
13,sort,0,2,1,T[].sort(function): this
13,sort,0,2,2,T[].push(T[]): number
13,sort,0,3,0,ObjectConstructor.keys(object): string[]
13,sort,0,3,1,T[].sort(function): this
13,sort,0,3,2,sort(typeof compare)
13,sort,0,4,0,T[].reverse(): T[]
13,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
13,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
13,sort,0,4,3,ObjectConstructor.keys(object): string[]
13,sort,0,4,4,T[].sort(): this
13,sort,0,4,5,T[].forEach(function): void
13,sort,0,5,0,sort(function)
13,sort,0,5,1,T[].sort(function): this
13,sort,0,5,2,"object[].sortBy(string, string)"
13,sort,0,5,3,sortBy(string)
13,sort,0,5,4,reverse(unknown)
13,sort,0,5,5,sort(typeof compare)
13,sort,0,5,6,dynamicSort(string): function
13,sort,0,5,7,"dynamicSortMultiple(string, string): function"
13,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
13,sort,0,5,9,"sortBy(object[], string)"
13,sort,0,6,0,T[].sort(function): this
13,sort,0,7,0,T[].sort(function): this
13,sort,0,8,0,T[].sort(function): this
13,sort,0,8,1,sort(function)
13,sort,0,9,0,sort(function)
13,sort,0,9,1,T[].sort(function): this
13,sort,0,9,2,dynamicSort(string): function
13,currency,0,0,0,Number.toFixed(number): string
13,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
13,currency,0,0,2,"String.replace(object, string): string"
13,currency,0,0,3,Number.toLocaleString(): string
13,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
13,currency,0,0,5,"number.formatMoney(number, string, string)"
13,currency,0,0,6,number.format(number)
13,currency,0,0,7,NumberConstructor.Number(unknown): number
13,currency,0,0,8,toFixed(number)
13,currency,0,0,9,StringConstructor.String(unknown): string
13,currency,0,1,0,formatMoney(number)
13,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
13,currency,0,3,0,formatTime(string)
13,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
13,currency,0,3,2,Document.getElementById(string): HTMLElement
13,currency,0,3,3,"moment(string, string)"
13,currency,0,3,4,format(string)
13,currency,0,3,5,T[].forEach(function): void
13,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
13,currency,0,4,1,unshift(unknown)
13,currency,0,4,2,"substr(unknown, number)"
13,currency,0,4,3,formatMoney(unknown)
13,currency,0,5,0,"replace(regex, string)"
13,currency,0,5,1,setInputValue(unknown)
13,currency,0,6,0,formatMoney(number)
13,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
13,currency,0,7,1,"String.replace(string | RegExp, string): string"
13,currency,0,7,2,toFixed(number)
13,currency,0,7,3,"String.replace(object, string): string"
13,currency,0,7,4,Math.abs(number): number
13,currency,0,7,5,Math.trunc(number): number
13,currency,0,7,6,Number.toFixed(): string
13,currency,0,7,7,Number.toFixed(number): string
13,currency,0,7,8,"number.replace(regex, string)"
13,currency,0,7,9,"replace(regex, string)"
13,currency,0,8,0,"format(string, string, number): string"
13,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
13,currency,0,8,2,"String.replace(string | RegExp, string): string"
13,currency,0,8,3,String.trim(): string
13,serve,0,0,0,"get(string, function)"
13,serve,0,1,0,express()
13,serve,0,1,1,Router()
13,serve,0,1,2,"post(string, unknown)"
13,serve,0,1,3,"get(string, unknown)"
13,serve,0,1,4,js()
13,serve,0,1,5,(unknown)
13,serve,0,1,6,"use(string, unknown)"
13,serve,0,1,7,"get(string, function)"
13,serve,0,1,8,"post(unknown, unknown)"
13,serve,0,1,9,route(string)
13,serve,0,2,0,"use(string, function)"
13,serve,0,2,1,"use(string, unknown)"
13,serve,0,3,0,"get(string, function)"
13,serve,0,3,1,T[].forEach(function): void
13,serve,0,3,2,use(unknown)
13,serve,0,3,3,()
13,serve,0,3,4,"join(unknown, string)"
13,serve,0,3,5,function.()
13,serve,0,3,6,express()
13,serve,0,3,7,"use(string, unknown)"
13,serve,0,3,8,"get(number, regex)"
13,serve,0,3,9,"parseInt(string, number): number"
13,serve,0,4,0,use(function)
13,serve,0,5,0,"use(string, unknown)"
13,serve,0,5,1,"post(string, function)"
13,serve,0,5,2,"get(string, function)"
13,serve,0,5,3,use(function)
13,serve,0,5,4,Router()
13,serve,0,5,5,"(unknown, object)"
13,serve,0,6,0,"get(string, function)"
13,serve,0,6,1,"use(string, unknown)"
13,serve,0,6,2,Router()
13,serve,0,6,3,express()
13,serve,0,6,4,"listen(number, function)"
13,serve,0,7,0,"get(string[], function)"
13,serve,0,7,1,"get(string, unknown)"
13,serve,0,7,2,"get(string[], unknown)"
13,serve,0,7,3,"use(function, function)"
13,serve,0,7,4,T[].forEach(function): void
13,serve,0,8,0,listen(number)
13,serve,0,8,1,"get(string, typeof fooRoute)"
13,serve,0,8,2,createServer()
13,serve,0,8,3,()
13,serve,0,8,4,"get(string, function)"
13,serve,0,8,5,"listen(number, function)"
13,serve,0,8,6,get(string[])
13,serve,0,9,0,"get(string, function)"
13,serve,0,9,1,filter(function)
13,serve,0,9,2,"typeof app.use(string, unknown)"
13,serve,0,9,3,typeof app.use(unknown)
13,serve,1,0,0,get(string)
13,serve,1,0,1,"get(string, function)"
13,serve,1,0,2,express()
13,serve,1,0,3,use(function)
13,serve,1,0,4,format(object)
13,serve,1,0,5,parse(unknown)
13,serve,1,0,6,format(unknown)
13,serve,1,0,7,"use(string, unknown)"
13,serve,1,0,8,use(unknown)
13,serve,1,0,9,"parse(unknown, boolean, boolean)"
13,serve,1,1,0,get(string)
13,serve,1,1,1,express()
13,serve,1,1,2,use(function)
13,serve,1,3,0,"get(string, function)"
13,serve,1,3,1,"param(string, function)"
13,serve,1,4,0,"get(string, function)"
13,serve,1,6,0,"get(string, function)"
13,serve,1,6,1,"get(string, function, unknown)"
13,serve,1,7,0,"use(string, function)"
13,serve,1,7,1,"use(regex, function)"
13,serve,2,0,0,resolve(string)
13,serve,2,0,1,forEach(function)
13,serve,2,0,2,readdirSync(string)
13,serve,2,0,3,dirname(unknown)
13,serve,2,0,4,"join(unknown, unknown)"
13,serve,2,0,5,getValidFileToUpload()
13,serve,2,0,6,"resolve(unknown, unknown)"
13,serve,2,2,0,addAliases(object)
13,serve,2,3,0,"get(string, unknown, function, unknown)"
13,serve,2,4,0,basename(string)
13,serve,2,4,1,extname(string)
13,serve,2,4,2,"basename(string, unknown)"
13,serve,2,4,3,parse(string)
13,serve,2,4,4,"basename(string, string)"
13,serve,2,4,5,T[].pop(): T
13,serve,2,4,6,String.split(string | RegExp): string[]
13,serve,2,5,0,"join(string, string, string)"
13,serve,2,6,0,any()
13,serve,2,6,1,"post(string, unknown, function)"
13,serve,2,6,2,multer(object)
13,serve,2,7,0,dirname(unknown)
13,serve,2,7,1,"resolve(unknown, string)"
13,serve,2,7,2,"readFile(unknown, string, unknown)"
13,serve,2,7,3,cwd()
13,serve,2,7,4,"readFile(string, function)"
13,serve,2,7,5,fileURLToPath(string)
13,serve,2,7,6,JSON.parse(string)
13,serve,2,7,7,"readFileSync(unknown, string)"
13,serve,2,7,8,basename(unknown)
13,serve,2,7,9,fileURLToPath(URL)
13,serve,2,8,0,"get(string, typeof getDirectoryContent, function)"
13,serve,2,8,1,"resolve(unknown, string)"
13,serve,2,8,2,"join(unknown, string)"
13,serve,2,8,3,Router()
13,serve,2,8,4,"get(string, function)"
13,serve,2,9,0,"listen(number, function)"
13,serve,2,9,1,"get(string, function)"
13,serve,2,9,2,express()
13,serve,2,9,3,normalize(string)
13,serve,3,0,0,Document.getElementById(string): HTMLElement
13,serve,3,0,1,readTextFile(string): void
13,serve,3,0,2,$(string)
13,serve,3,0,3,Promise<T>.then(function): Promise<TResult1 | TResult2>
13,serve,3,0,4,fetch(RequestInfo | URL): Promise<Response>
13,serve,3,0,5,"HTMLElement.addEventListener(K, function): void"
13,serve,3,0,6,function.logFileText(string): Promise<void>
13,serve,3,0,7,"open(string, unknown, boolean)"
13,serve,3,0,8,click(function)
13,serve,3,0,9,"open(string, string, boolean)"
13,serve,3,1,0,jQuery(string)
13,serve,3,1,1,val(unknown)
13,serve,3,1,2,read(File): Promise<void>
13,serve,3,1,3,"HTMLElement.addEventListener(K, function): void"
13,serve,3,1,4,Document.getElementById(string): HTMLElement
13,serve,3,2,0,array()
13,serve,3,2,1,foreach($filename)
13,serve,3,2,2,glob(string)
13,serve,3,2,3,readdirSync(string)
13,serve,3,2,4,json_encode(unknown)
13,serve,3,2,5,"readdir(unknown, unknown)"
13,serve,3,2,6,Document.write(string[]): void
13,serve,3,2,7,myFunction(typeof globalThis)
13,serve,3,2,8,then(function)
13,serve,3,2,9,get_file(unknown)
13,serve,3,4,0,ajax(object)
13,serve,3,4,1,"getScript(string, function)"
13,serve,3,4,2,void.(): void
13,serve,3,5,0,split(string)
13,serve,3,5,1,pop()
13,serve,3,5,2,lastIndexOf(string)
13,serve,3,5,3,"replace(regex, string)"
13,serve,3,5,4,regex.exec(string): RegExpExecArray
13,serve,3,5,5,slice(number)
13,serve,3,5,6,match(regex)
13,serve,3,5,7,String.split(string | RegExp): string[]
13,serve,3,5,8,"substring(unknown, unknown)"
13,serve,3,5,9,"Math.max(number[], unknown): number"
13,serve,3,6,0,fetch(RequestInfo | URL): Promise<Response>
13,serve,3,6,1,Promise<T>.then(function): Promise<TResult1 | TResult2>
13,serve,3,6,2,then(function)
13,serve,3,6,3,get(string)
13,serve,3,6,4,"fetch(RequestInfo | URL, RequestInit): Promise<Response>"
13,serve,3,6,5,object.createObjectURL(Blob | MediaSource): string
13,serve,3,6,6,String.split(string | RegExp): string[]
13,serve,3,6,7,FileReader.readAsDataURL(Blob): void
13,serve,3,7,0,lastIndexOf(string)
13,serve,3,7,1,split(string)
13,serve,3,7,2,"substr(unknown, unknown)"
13,serve,3,7,3,$(string)
13,serve,3,7,4,val()
13,serve,3,7,5,"replace(regex, string)"
13,serve,3,7,6,slice(unknown)
13,serve,3,7,7,"slice(number, unknown)"
13,serve,3,7,8,substring(unknown)
13,serve,3,7,9,"substring(number, unknown)"
13,serve,3,8,0,"HTMLElement.addEventListener(K, function): void"
13,serve,3,8,1,Document.getElementById(string): HTMLElement
13,serve,3,9,0,Document.getElementById(string): HTMLElement
13,serve,4,0,0,Document.getElementById(string): HTMLElement
13,serve,4,0,1,"load(string, function)"
13,serve,4,0,2,$(string)
13,serve,4,1,0,createServer(function)
13,serve,4,1,1,"listen(number, function)"
13,serve,4,1,2,"join(unknown, string)"
13,serve,4,1,3,static(unknown)
13,serve,4,1,4,use(unknown)
13,serve,4,1,5,express()
13,serve,4,1,6,js(unknown)
13,serve,4,2,0,listen(number)
13,serve,4,2,1,createServer(function)
13,serve,4,2,2,use(unknown)
13,serve,4,2,3,static(string)
13,serve,4,2,4,express()
13,serve,4,2,5,static(unknown)
13,serve,4,2,6,"on(string, function)"
13,serve,4,2,7,connect()
13,serve,4,2,8,"use(string, unknown)"
13,serve,4,2,9,"listen(number, function)"
13,serve,4,3,0,"get(string, function)"
13,serve,4,3,1,static(string)
13,serve,4,3,2,use(unknown)
13,serve,4,3,3,"listen(unknown, function)"
13,serve,4,3,4,express()
13,serve,4,6,0,static(unknown)
13,serve,4,6,1,"use(string, unknown)"
13,serve,4,6,2,"use(string, function)"
13,serve,4,6,3,express()
13,serve,4,6,4,"join(unknown, string)"
13,serve,4,6,5,"get(string, function)"
13,serve,4,6,6,listen(number)
13,serve,4,7,0,static(string)
13,serve,4,7,1,use(unknown)
13,serve,4,7,2,"use(string, unknown)"
13,serve,4,9,0,"join(unknown, string)"
13,serve,4,9,1,static(unknown)
13,serve,4,9,2,"use(string, unknown)"
13,serve,5,1,0,"addEventListener(string, function)"
13,serve,5,3,0,$(string)
13,serve,5,3,1,serialize()
13,serve,5,3,2,"post(string, unknown, function)"
13,serve,5,4,0,(unknown)
13,serve,5,4,1,Router()
13,serve,5,4,2,use(function)
13,serve,5,4,3,"get(string, function)"
13,serve,5,4,4,"use(string, unknown)"
13,serve,5,5,0,withBase(function)
13,serve,5,6,0,use(unknown)
13,serve,5,6,1,Router()
13,serve,5,6,2,static()
13,serve,5,6,3,"use(string, unknown)"
13,serve,5,7,0,config(function[])
13,serve,5,7,1,"module(string, undefined[])"
13,serve,5,7,2,"state(string, unknown)"
13,serve,5,8,0,"get(string, function)"
14,sort,0,0,0,T[].sort(function): this
14,sort,0,0,1,sort(function)
14,sort,0,0,2,"sortBy(unknown, string)"
14,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
14,sort,0,0,4,"function.sort_by(string, boolean, function): function"
14,sort,0,0,5,sort(typeof mycomparator)
14,sort,0,0,6,function[].(): function[]
14,sort,0,0,7,"sortBy(any[], object): any[]"
14,sort,0,0,8,reverse()
14,sort,0,0,9,T[].sort(): this
14,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
14,sort,0,1,1,"function[].sortBy(object[], string): any[]"
14,sort,0,2,0,sort(function)
14,sort,0,2,1,T[].sort(function): this
14,sort,0,2,2,T[].push(T[]): number
14,sort,0,3,0,ObjectConstructor.keys(object): string[]
14,sort,0,3,1,T[].sort(function): this
14,sort,0,3,2,sort(typeof compare)
14,sort,0,4,0,T[].reverse(): T[]
14,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
14,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
14,sort,0,4,3,ObjectConstructor.keys(object): string[]
14,sort,0,4,4,T[].sort(): this
14,sort,0,4,5,T[].forEach(function): void
14,sort,0,5,0,sort(function)
14,sort,0,5,1,T[].sort(function): this
14,sort,0,5,2,"object[].sortBy(string, string)"
14,sort,0,5,3,sortBy(string)
14,sort,0,5,4,reverse(unknown)
14,sort,0,5,5,sort(typeof compare)
14,sort,0,5,6,dynamicSort(string): function
14,sort,0,5,7,"dynamicSortMultiple(string, string): function"
14,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
14,sort,0,5,9,"sortBy(object[], string)"
14,sort,0,6,0,T[].sort(function): this
14,sort,0,7,0,T[].sort(function): this
14,sort,0,8,0,T[].sort(function): this
14,sort,0,8,1,sort(function)
14,sort,0,9,0,sort(function)
14,sort,0,9,1,T[].sort(function): this
14,sort,0,9,2,dynamicSort(string): function
14,clone,0,0,0,JSON.parse(string)
14,clone,0,0,1,JSON.stringify(unknown): string
14,clone,0,0,2,T[].slice(): T[]
14,clone,0,0,3,slice()
14,clone,0,0,4,slice(number)
14,clone,0,0,5,JSON.stringify(function): string
14,clone,0,0,6,map(function)
14,clone,0,0,7,T[].push(T[]): number
14,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
14,clone,0,0,9,clone(function[]): void
14,clone,0,1,0,JSON.stringify(function): string
14,clone,0,1,1,JSON.parse(string)
14,clone,0,1,2,T[].slice(number): T[]
14,clone,0,1,3,T[].map(function): U[]
14,clone,0,1,4,"extend(boolean, undefined[], function)"
14,clone,0,1,5,slice(number)
14,clone,0,1,6,T[].slice(): T[]
14,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
14,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
14,clone,0,1,9,T[].push(T[]): number
14,clone,0,2,0,T[].concat(function): T[]
14,clone,0,2,1,undefined[].add(string)
14,clone,0,2,2,add(string)
14,clone,0,2,3,T[].slice(): T[]
14,clone,0,2,4,T[].push(T[]): number
14,clone,0,3,0,T[].map(function): U[]
14,clone,0,3,1,T[].forEach(function): void
14,clone,0,3,2,map(function)
14,clone,0,3,3,forEach(function)
14,clone,0,3,4,slice()
14,clone,0,3,5,JSON.parse(string)
14,clone,0,3,6,JSON.stringify(unknown): string
14,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
14,clone,0,5,0,map(function)
14,clone,0,5,1,"getGenericItems(unknown, unknown)"
14,clone,0,5,2,T[].forEach(function): void
14,clone,0,5,3,cloneDeep(unknown)
14,clone,0,5,4,JSON.parse(string)
14,clone,0,5,5,JSON.stringify(unknown): string
14,clone,0,5,6,slice()
14,clone,0,5,7,T[].map(function): U[]
14,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
14,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
14,clone,0,6,0,bestCopyEver(object)
14,clone,0,6,1,iterationCopy(object): object
14,clone,0,6,2,JSON.stringify(unknown): string
14,clone,0,6,3,JSON.parse(string)
14,clone,0,7,0,T[].map(function): U[]
14,clone,0,8,0,JSON.stringify(unknown): string
14,clone,0,8,1,JSON.parse(string)
14,clone,0,8,2,map(function)
14,clone,0,8,3,structuredClone(unknown)
14,clone,0,8,4,slice(number)
14,clone,0,8,5,"map(unknown, function)"
14,clone,0,8,6,evalJSON(unknown)
14,clone,0,8,7,toJSON(unknown)
14,clone,0,8,8,JSON.stringify(object): string
14,clone,0,8,9,cloneDeep(function)
14,clone,0,9,0,JSON.stringify(number[][]): string
14,clone,0,9,1,JSON.parse(string)
14,serve,0,0,0,static(unknown)
14,serve,0,0,1,"use(string, unknown)"
14,serve,0,0,2,"use(string, function)"
14,serve,0,0,3,express()
14,serve,0,0,4,"join(unknown, string)"
14,serve,0,0,5,"get(string, function)"
14,serve,0,0,6,listen(number)
14,serve,0,1,0,"join(unknown, string)"
14,serve,0,1,1,static(unknown)
14,serve,0,1,2,use(unknown)
14,serve,0,3,0,static(string)
14,serve,0,3,1,use(unknown)
14,serve,0,4,0,static(string)
14,serve,0,4,1,use(unknown)
14,serve,0,5,0,"get(string, function)"
14,serve,0,5,1,"join(unknown, string)"
14,serve,0,5,2,static(unknown)
14,serve,0,5,3,"use(string, unknown)"
14,serve,0,5,4,express()
14,serve,0,5,5,use(unknown)
14,serve,0,5,6,static(string)
14,serve,0,5,7,"listen(number, function)"
14,serve,0,6,0,"get(string, function)"
14,serve,0,6,1,"use(string, unknown)"
14,serve,0,6,2,"join(unknown, string)"
14,serve,0,6,3,static(unknown)
14,serve,0,6,4,use(unknown)
14,serve,0,7,0,"join(unknown, string)"
14,serve,0,7,1,static(unknown)
14,serve,0,7,2,use(unknown)
14,serve,0,7,3,"use(string, unknown)"
14,serve,0,8,0,static(string)
14,serve,0,8,1,use(unknown)
14,serve,0,8,2,express()
14,serve,0,8,3,listen(number)
14,serve,0,8,4,static(unknown)
14,serve,0,8,5,"join(unknown, string)"
14,serve,0,8,6,"use(string, unknown)"
14,serve,0,8,7,"get(string, function)"
14,serve,0,8,8,configure(function)
14,serve,0,8,9,"listen(number, function)"
14,serve,0,9,0,static(string)
14,serve,0,9,1,use(unknown)
14,serve,0,9,2,"set(string, unknown)"
14,serve,0,9,3,express()
15,find,1,0,0,T[].filter(function): T[]
15,find,1,0,1,"search(string, object[])"
15,find,1,0,2,T[].find(function): T
15,find,1,0,3,find(function)
15,find,1,0,4,indexOf(unknown)
15,find,1,0,5,"fill(string, unknown, number)"
15,find,1,0,6,findIndex(function)
15,find,1,0,7,function.search(string): object
15,find,1,0,8,forEach(function)
15,find,1,0,9,map(function)
15,find,1,1,0,T[].indexOf(T): number
15,find,1,1,1,T[].includes(T): boolean
15,find,1,1,2,"inArray(string, string[])"
15,find,1,1,3,includes(string)
15,find,1,1,4,"inArray(string, unknown)"
15,find,1,1,5,T[].some(function): boolean
15,find,1,1,6,T[].find(function): T
15,find,1,2,0,T[].some(function): boolean
15,find,1,2,1,T[].filter(function): T[]
15,find,1,2,2,T[].findIndex(function): number
15,find,1,2,3,T[].find(function): T
15,find,1,2,4,find(function)
15,find,1,2,5,T[].forEach(function): void
15,find,1,3,0,T[].find(function): T
15,find,1,3,1,T[].filter(function): T[]
15,find,1,3,2,find(function)
15,find,1,3,3,"filterValue(object[], string, number)"
15,find,1,3,4,"filteredArray(object[], string, number): any[]"
15,find,1,3,5,"findWhere(unknown, object)"
15,find,1,3,6,T[].findIndex(function): number
15,find,1,3,7,some(function)
15,find,1,3,8,"select(unknown, function)"
15,find,1,3,9,"reduce(function, null)"
15,find,1,4,0,"T[].reduce(function, U): U"
15,find,1,4,1,filter(function)
15,find,1,4,2,"grep(unknown, function)"
15,find,1,4,3,T[].find(function): T
15,find,1,4,4,function.(): function
15,find,1,4,5,T[].map(function): U[]
15,find,1,4,6,ArrayConstructor.Array(number): any[]
15,find,1,4,7,map(function[])
15,find,1,4,8,"each(unknown, function)"
15,find,1,4,9,map(function)
15,find,1,5,0,T[].filter(function): T[]
15,find,1,5,1,filter(function)
15,clone,0,0,0,JSON.parse(string)
15,clone,0,0,1,JSON.stringify(unknown): string
15,clone,0,0,2,T[].slice(): T[]
15,clone,0,0,3,slice()
15,clone,0,0,4,slice(number)
15,clone,0,0,5,JSON.stringify(function): string
15,clone,0,0,6,map(function)
15,clone,0,0,7,T[].push(T[]): number
15,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
15,clone,0,0,9,clone(function[]): void
15,clone,0,1,0,JSON.stringify(function): string
15,clone,0,1,1,JSON.parse(string)
15,clone,0,1,2,T[].slice(number): T[]
15,clone,0,1,3,T[].map(function): U[]
15,clone,0,1,4,"extend(boolean, undefined[], function)"
15,clone,0,1,5,slice(number)
15,clone,0,1,6,T[].slice(): T[]
15,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
15,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
15,clone,0,1,9,T[].push(T[]): number
15,clone,0,2,0,T[].concat(function): T[]
15,clone,0,2,1,undefined[].add(string)
15,clone,0,2,2,add(string)
15,clone,0,2,3,T[].slice(): T[]
15,clone,0,2,4,T[].push(T[]): number
15,clone,0,3,0,T[].map(function): U[]
15,clone,0,3,1,T[].forEach(function): void
15,clone,0,3,2,map(function)
15,clone,0,3,3,forEach(function)
15,clone,0,3,4,slice()
15,clone,0,3,5,JSON.parse(string)
15,clone,0,3,6,JSON.stringify(unknown): string
15,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
15,clone,0,5,0,map(function)
15,clone,0,5,1,"getGenericItems(unknown, unknown)"
15,clone,0,5,2,T[].forEach(function): void
15,clone,0,5,3,cloneDeep(unknown)
15,clone,0,5,4,JSON.parse(string)
15,clone,0,5,5,JSON.stringify(unknown): string
15,clone,0,5,6,slice()
15,clone,0,5,7,T[].map(function): U[]
15,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
15,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
15,clone,0,6,0,bestCopyEver(object)
15,clone,0,6,1,iterationCopy(object): object
15,clone,0,6,2,JSON.stringify(unknown): string
15,clone,0,6,3,JSON.parse(string)
15,clone,0,7,0,T[].map(function): U[]
15,clone,0,8,0,JSON.stringify(unknown): string
15,clone,0,8,1,JSON.parse(string)
15,clone,0,8,2,map(function)
15,clone,0,8,3,structuredClone(unknown)
15,clone,0,8,4,slice(number)
15,clone,0,8,5,"map(unknown, function)"
15,clone,0,8,6,evalJSON(unknown)
15,clone,0,8,7,toJSON(unknown)
15,clone,0,8,8,JSON.stringify(object): string
15,clone,0,8,9,cloneDeep(function)
15,clone,0,9,0,JSON.stringify(number[][]): string
15,clone,0,9,1,JSON.parse(string)
15,recent,0,0,0,"diff(unknown, string)"
15,recent,0,0,1,diff(unknown)
15,recent,0,0,2,moment(string)
15,recent,0,1,0,"subtract(number, string)"
15,recent,0,1,1,format(string)
15,recent,0,1,2,moment()
15,recent,0,1,3,toDate()
15,recent,0,1,4,moment(Date)
15,recent,0,1,5,duration(object)
15,recent,0,1,6,subtract(unknown)
15,recent,0,1,7,"subtract(string, number)"
15,recent,0,1,8,format()
15,recent,0,1,9,"moment(string, string)"
15,recent,0,2,0,setDate(unknown): void
15,recent,0,2,1,now()
15,recent,0,2,2,moment(unknown)
15,recent,0,2,3,"add(number, string)"
15,recent,0,3,0,moment()
15,recent,0,3,1,"subtract(number, string)"
15,recent,0,3,2,format(string)
15,recent,0,3,3,moment(number)
15,recent,0,3,4,DateConstructor.now(): number
15,recent,0,3,5,toDate()
15,recent,0,3,6,endOf(string)
15,recent,0,3,7,day(number)
15,recent,0,3,8,startOf(string)
15,recent,0,4,0,format(string)
15,recent,0,4,1,"subtract(number, string)"
15,recent,0,4,2,"add(number, string)"
15,recent,0,4,3,moment(number)
15,recent,0,4,4,"subtract(string, number)"
15,recent,0,4,5,"add(string, number)"
15,recent,0,4,6,moment()
15,recent,0,4,7,Document.getElementById(string): HTMLElement
15,recent,0,4,8,Date.PrevDay(number)
15,recent,0,4,9,Date.Nextday(number)
15,recent,0,5,0,clone()
15,recent,0,5,1,"subtract(number, string)"
15,recent,0,5,2,format()
15,recent,0,5,3,moment(string)
15,recent,0,6,0,"subtract(string, number)"
15,recent,0,6,1,moment()
15,recent,0,6,2,"subtract(number, string)"
15,recent,0,6,3,format(string)
15,recent,0,7,0,"subtract(number, string)"
15,recent,0,8,0,Number.toString(): string
15,recent,0,8,1,moment(string)
15,recent,0,8,2,unix()
15,recent,0,8,3,toString()
15,recent,0,8,4,year()
15,recent,0,8,5,"subtract(number, string)"
15,recent,0,8,6,moment(unknown)
15,recent,0,8,7,asDays()
15,recent,0,8,8,diff(unknown)
15,recent,0,8,9,duration(unknown)
15,recent,0,9,0,last7(): void
15,recent,0,9,1,ParentNode.querySelectorAll(string): NodeListOf<E>
15,recent,0,9,2,getAttribute(string)
16,sort,0,0,0,T[].sort(function): this
16,sort,0,0,1,sort(function)
16,sort,0,0,2,"sortBy(unknown, string)"
16,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
16,sort,0,0,4,"function.sort_by(string, boolean, function): function"
16,sort,0,0,5,sort(typeof mycomparator)
16,sort,0,0,6,function[].(): function[]
16,sort,0,0,7,"sortBy(any[], object): any[]"
16,sort,0,0,8,reverse()
16,sort,0,0,9,T[].sort(): this
16,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
16,sort,0,1,1,"function[].sortBy(object[], string): any[]"
16,sort,0,2,0,sort(function)
16,sort,0,2,1,T[].sort(function): this
16,sort,0,2,2,T[].push(T[]): number
16,sort,0,3,0,ObjectConstructor.keys(object): string[]
16,sort,0,3,1,T[].sort(function): this
16,sort,0,3,2,sort(typeof compare)
16,sort,0,4,0,T[].reverse(): T[]
16,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
16,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
16,sort,0,4,3,ObjectConstructor.keys(object): string[]
16,sort,0,4,4,T[].sort(): this
16,sort,0,4,5,T[].forEach(function): void
16,sort,0,5,0,sort(function)
16,sort,0,5,1,T[].sort(function): this
16,sort,0,5,2,"object[].sortBy(string, string)"
16,sort,0,5,3,sortBy(string)
16,sort,0,5,4,reverse(unknown)
16,sort,0,5,5,sort(typeof compare)
16,sort,0,5,6,dynamicSort(string): function
16,sort,0,5,7,"dynamicSortMultiple(string, string): function"
16,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
16,sort,0,5,9,"sortBy(object[], string)"
16,sort,0,6,0,T[].sort(function): this
16,sort,0,7,0,T[].sort(function): this
16,sort,0,8,0,T[].sort(function): this
16,sort,0,8,1,sort(function)
16,sort,0,9,0,sort(function)
16,sort,0,9,1,T[].sort(function): this
16,sort,0,9,2,dynamicSort(string): function
16,clone,0,0,0,JSON.parse(string)
16,clone,0,0,1,JSON.stringify(unknown): string
16,clone,0,0,2,T[].slice(): T[]
16,clone,0,0,3,slice()
16,clone,0,0,4,slice(number)
16,clone,0,0,5,JSON.stringify(function): string
16,clone,0,0,6,map(function)
16,clone,0,0,7,T[].push(T[]): number
16,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
16,clone,0,0,9,clone(function[]): void
16,clone,0,1,0,JSON.stringify(function): string
16,clone,0,1,1,JSON.parse(string)
16,clone,0,1,2,T[].slice(number): T[]
16,clone,0,1,3,T[].map(function): U[]
16,clone,0,1,4,"extend(boolean, undefined[], function)"
16,clone,0,1,5,slice(number)
16,clone,0,1,6,T[].slice(): T[]
16,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
16,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
16,clone,0,1,9,T[].push(T[]): number
16,clone,0,2,0,T[].concat(function): T[]
16,clone,0,2,1,undefined[].add(string)
16,clone,0,2,2,add(string)
16,clone,0,2,3,T[].slice(): T[]
16,clone,0,2,4,T[].push(T[]): number
16,clone,0,3,0,T[].map(function): U[]
16,clone,0,3,1,T[].forEach(function): void
16,clone,0,3,2,map(function)
16,clone,0,3,3,forEach(function)
16,clone,0,3,4,slice()
16,clone,0,3,5,JSON.parse(string)
16,clone,0,3,6,JSON.stringify(unknown): string
16,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
16,clone,0,5,0,map(function)
16,clone,0,5,1,"getGenericItems(unknown, unknown)"
16,clone,0,5,2,T[].forEach(function): void
16,clone,0,5,3,cloneDeep(unknown)
16,clone,0,5,4,JSON.parse(string)
16,clone,0,5,5,JSON.stringify(unknown): string
16,clone,0,5,6,slice()
16,clone,0,5,7,T[].map(function): U[]
16,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
16,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
16,clone,0,6,0,bestCopyEver(object)
16,clone,0,6,1,iterationCopy(object): object
16,clone,0,6,2,JSON.stringify(unknown): string
16,clone,0,6,3,JSON.parse(string)
16,clone,0,7,0,T[].map(function): U[]
16,clone,0,8,0,JSON.stringify(unknown): string
16,clone,0,8,1,JSON.parse(string)
16,clone,0,8,2,map(function)
16,clone,0,8,3,structuredClone(unknown)
16,clone,0,8,4,slice(number)
16,clone,0,8,5,"map(unknown, function)"
16,clone,0,8,6,evalJSON(unknown)
16,clone,0,8,7,toJSON(unknown)
16,clone,0,8,8,JSON.stringify(object): string
16,clone,0,8,9,cloneDeep(function)
16,clone,0,9,0,JSON.stringify(number[][]): string
16,clone,0,9,1,JSON.parse(string)
16,serve,0,0,0,"join(unknown, string)"
16,serve,0,0,1,static(unknown)
16,serve,0,0,2,use(unknown)
16,serve,0,0,3,"set(string, string)"
16,serve,0,1,0,status(number)
16,serve,0,1,1,json(object)
16,serve,0,1,2,"render(string, object)"
16,serve,0,1,3,use(unknown)
16,serve,0,1,4,static(unknown)
16,serve,0,1,5,"join(unknown, string)"
16,serve,0,1,6,sendFile(string)
16,serve,0,1,7,"get(string, function)"
16,serve,0,2,0,listen(number)
16,serve,0,2,1,static(string)
16,serve,0,2,2,use(unknown)
16,serve,0,2,3,express()
16,serve,0,3,0,"post(string, function)"
16,serve,0,7,0,"get(string, function)"
16,serve,0,7,1,Router()
16,serve,0,7,2,"use(string, unknown)"
16,serve,0,7,3,use(unknown)
16,serve,1,0,0,static(unknown)
16,serve,1,0,1,"use(string, unknown)"
16,serve,1,0,2,"use(string, function)"
16,serve,1,0,3,express()
16,serve,1,0,4,"join(unknown, string)"
16,serve,1,0,5,"get(string, function)"
16,serve,1,0,6,listen(number)
16,serve,1,2,0,static(string)
16,serve,1,2,1,"use(string, unknown)"
16,serve,1,2,2,"join(unknown, string)"
16,serve,1,2,3,static(unknown)
16,serve,1,2,4,use(unknown)
16,serve,1,4,0,"join(unknown, string)"
16,serve,1,4,1,static(unknown)
16,serve,1,4,2,"use(string, unknown)"
16,serve,1,4,3,"get(string, unknown)"
16,serve,1,6,0,"use(string, unknown)"
16,serve,1,6,1,"use(string, function)"
16,serve,1,6,2,use(unknown)
16,serve,1,6,3,"join(unknown, string, string, string)"
16,serve,1,6,4,static(unknown)
16,serve,1,7,0,static(string)
16,serve,1,7,1,use(unknown)
16,serve,1,8,0,"get(string, function)"
16,serve,1,8,1,static(string)
16,serve,1,8,2,"use(string, unknown)"
16,serve,1,8,3,use(unknown)
16,serve,1,8,4,express()
16,serve,1,8,5,"use(string, function)"
16,serve,1,9,0,static(string)
16,serve,1,9,1,use(unknown)
16,serve,1,9,2,express()
16,serve,1,9,3,listen(number)
16,serve,1,9,4,static(unknown)
16,serve,1,9,5,"join(unknown, string)"
16,serve,1,9,6,"use(string, unknown)"
16,serve,1,9,7,"get(string, function)"
16,serve,1,9,8,configure(function)
16,serve,1,9,9,"listen(number, function)"
16,serve,2,0,0,static(unknown)
16,serve,2,0,1,"use(string, unknown)"
16,serve,2,0,2,"use(string, function)"
16,serve,2,0,3,express()
16,serve,2,0,4,"join(unknown, string)"
16,serve,2,0,5,"get(string, function)"
16,serve,2,0,6,listen(number)
16,serve,2,2,0,static(string)
16,serve,2,2,1,"use(string, unknown)"
16,serve,2,2,2,"join(unknown, string)"
16,serve,2,2,3,static(unknown)
16,serve,2,2,4,use(unknown)
16,serve,2,4,0,"join(unknown, string)"
16,serve,2,4,1,static(unknown)
16,serve,2,4,2,"use(string, unknown)"
16,serve,2,4,3,"get(string, unknown)"
16,serve,2,6,0,"use(string, unknown)"
16,serve,2,6,1,"use(string, function)"
16,serve,2,6,2,use(unknown)
16,serve,2,6,3,"join(unknown, string, string, string)"
16,serve,2,6,4,static(unknown)
16,serve,2,7,0,static(string)
16,serve,2,7,1,use(unknown)
16,serve,2,8,0,"get(string, function)"
16,serve,2,8,1,static(string)
16,serve,2,8,2,"use(string, unknown)"
16,serve,2,8,3,use(unknown)
16,serve,2,8,4,express()
16,serve,2,8,5,"use(string, function)"
16,serve,2,9,0,static(string)
16,serve,2,9,1,use(unknown)
16,serve,2,9,2,express()
16,serve,2,9,3,listen(number)
16,serve,2,9,4,static(unknown)
16,serve,2,9,5,"join(unknown, string)"
16,serve,2,9,6,"use(string, unknown)"
16,serve,2,9,7,"get(string, function)"
16,serve,2,9,8,configure(function)
16,serve,2,9,9,"listen(number, function)"
17,find,0,0,0,T[].filter(function): T[]
17,find,0,0,1,"search(string, object[])"
17,find,0,0,2,T[].find(function): T
17,find,0,0,3,find(function)
17,find,0,0,4,indexOf(unknown)
17,find,0,0,5,"fill(string, unknown, number)"
17,find,0,0,6,findIndex(function)
17,find,0,0,7,function.search(string): object
17,find,0,0,8,forEach(function)
17,find,0,0,9,map(function)
17,find,0,1,0,T[].indexOf(T): number
17,find,0,1,1,T[].includes(T): boolean
17,find,0,1,2,"inArray(string, string[])"
17,find,0,1,3,includes(string)
17,find,0,1,4,"inArray(string, unknown)"
17,find,0,1,5,T[].some(function): boolean
17,find,0,1,6,T[].find(function): T
17,find,0,2,0,T[].some(function): boolean
17,find,0,2,1,T[].filter(function): T[]
17,find,0,2,2,T[].findIndex(function): number
17,find,0,2,3,T[].find(function): T
17,find,0,2,4,find(function)
17,find,0,2,5,T[].forEach(function): void
17,find,0,3,0,T[].find(function): T
17,find,0,3,1,T[].filter(function): T[]
17,find,0,3,2,find(function)
17,find,0,3,3,"filterValue(object[], string, number)"
17,find,0,3,4,"filteredArray(object[], string, number): any[]"
17,find,0,3,5,"findWhere(unknown, object)"
17,find,0,3,6,T[].findIndex(function): number
17,find,0,3,7,some(function)
17,find,0,3,8,"select(unknown, function)"
17,find,0,3,9,"reduce(function, null)"
17,find,0,4,0,"T[].reduce(function, U): U"
17,find,0,4,1,filter(function)
17,find,0,4,2,"grep(unknown, function)"
17,find,0,4,3,T[].find(function): T
17,find,0,4,4,function.(): function
17,find,0,4,5,T[].map(function): U[]
17,find,0,4,6,ArrayConstructor.Array(number): any[]
17,find,0,4,7,map(function[])
17,find,0,4,8,"each(unknown, function)"
17,find,0,4,9,map(function)
17,find,0,5,0,T[].filter(function): T[]
17,find,0,5,1,filter(function)
17,find,0,6,0,T[].includes(T): boolean
17,find,0,6,1,T[].indexOf(T): number
17,find,0,6,2,T[].find(function): T
17,find,0,6,3,T[].some(function): boolean
17,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
17,find,0,6,5,T[].findIndex(function): number
17,find,0,6,6,number[].contains(number)
17,find,0,6,7,number[].contains(string)
17,find,0,6,8,indexOf(string)
17,find,0,6,9,indexOf(number)
17,clone,0,0,0,JSON.parse(string)
17,clone,0,0,1,JSON.stringify(unknown): string
17,clone,0,0,2,T[].slice(): T[]
17,clone,0,0,3,slice()
17,clone,0,0,4,slice(number)
17,clone,0,0,5,JSON.stringify(function): string
17,clone,0,0,6,map(function)
17,clone,0,0,7,T[].push(T[]): number
17,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
17,clone,0,0,9,clone(function[]): void
17,clone,0,1,0,JSON.stringify(function): string
17,clone,0,1,1,JSON.parse(string)
17,clone,0,1,2,T[].slice(number): T[]
17,clone,0,1,3,T[].map(function): U[]
17,clone,0,1,4,"extend(boolean, undefined[], function)"
17,clone,0,1,5,slice(number)
17,clone,0,1,6,T[].slice(): T[]
17,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
17,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
17,clone,0,1,9,T[].push(T[]): number
17,clone,0,2,0,T[].concat(function): T[]
17,clone,0,2,1,undefined[].add(string)
17,clone,0,2,2,add(string)
17,clone,0,2,3,T[].slice(): T[]
17,clone,0,2,4,T[].push(T[]): number
17,clone,0,3,0,T[].map(function): U[]
17,clone,0,3,1,T[].forEach(function): void
17,clone,0,3,2,map(function)
17,clone,0,3,3,forEach(function)
17,clone,0,3,4,slice()
17,clone,0,3,5,JSON.parse(string)
17,clone,0,3,6,JSON.stringify(unknown): string
17,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
17,clone,0,5,0,map(function)
17,clone,0,5,1,"getGenericItems(unknown, unknown)"
17,clone,0,5,2,T[].forEach(function): void
17,clone,0,5,3,cloneDeep(unknown)
17,clone,0,5,4,JSON.parse(string)
17,clone,0,5,5,JSON.stringify(unknown): string
17,clone,0,5,6,slice()
17,clone,0,5,7,T[].map(function): U[]
17,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
17,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
17,clone,0,6,0,bestCopyEver(object)
17,clone,0,6,1,iterationCopy(object): object
17,clone,0,6,2,JSON.stringify(unknown): string
17,clone,0,6,3,JSON.parse(string)
17,clone,0,7,0,T[].map(function): U[]
17,clone,0,8,0,JSON.stringify(unknown): string
17,clone,0,8,1,JSON.parse(string)
17,clone,0,8,2,map(function)
17,clone,0,8,3,structuredClone(unknown)
17,clone,0,8,4,slice(number)
17,clone,0,8,5,"map(unknown, function)"
17,clone,0,8,6,evalJSON(unknown)
17,clone,0,8,7,toJSON(unknown)
17,clone,0,8,8,JSON.stringify(object): string
17,clone,0,8,9,cloneDeep(function)
17,clone,0,9,0,JSON.stringify(number[][]): string
17,clone,0,9,1,JSON.parse(string)
17,recent,0,0,0,"diff(unknown, string)"
17,recent,0,0,1,diff(unknown)
17,recent,0,0,2,moment(string)
17,recent,0,1,0,"subtract(number, string)"
17,recent,0,1,1,format(string)
17,recent,0,1,2,moment()
17,recent,0,1,3,toDate()
17,recent,0,1,4,moment(Date)
17,recent,0,1,5,duration(object)
17,recent,0,1,6,subtract(unknown)
17,recent,0,1,7,"subtract(string, number)"
17,recent,0,1,8,format()
17,recent,0,1,9,"moment(string, string)"
17,recent,0,2,0,moment()
17,recent,0,2,1,"subtract(number, string)"
17,recent,0,2,2,format(string)
17,recent,0,2,3,moment(number)
17,recent,0,2,4,DateConstructor.now(): number
17,recent,0,2,5,toDate()
17,recent,0,2,6,endOf(string)
17,recent,0,2,7,day(number)
17,recent,0,2,8,startOf(string)
17,recent,0,3,0,format(string)
17,recent,0,3,1,"subtract(number, string)"
17,recent,0,3,2,"add(number, string)"
17,recent,0,3,3,moment(number)
17,recent,0,3,4,"subtract(string, number)"
17,recent,0,3,5,"add(string, number)"
17,recent,0,3,6,moment()
17,recent,0,3,7,Document.getElementById(string): HTMLElement
17,recent,0,3,8,Date.PrevDay(number)
17,recent,0,3,9,Date.Nextday(number)
17,recent,0,4,0,setDate(unknown): void
17,recent,0,4,1,now()
17,recent,0,4,2,moment(unknown)
17,recent,0,4,3,"add(number, string)"
17,recent,0,5,0,diff(unknown)
17,recent,0,5,1,"tz(Date, string, string)"
17,recent,0,5,2,local()
17,recent,0,5,3,duration(unknown)
17,recent,0,5,4,asHours()
17,recent,0,5,5,"tz(unknown, string, string)"
17,recent,0,5,6,"diff(unknown, string)"
17,recent,0,5,7,moment()
17,recent,0,5,8,moment(unknown)
17,recent,0,5,9,format(string)
17,recent,0,6,0,"subtract(number, string)"
17,recent,0,7,0,"subtract(string, number)"
17,recent,0,7,1,moment()
17,recent,0,7,2,"subtract(number, string)"
17,recent,0,7,3,format(string)
17,recent,0,8,0,checkDateIsValid(unknown)
17,recent,0,9,0,clone()
17,recent,0,9,1,"subtract(number, string)"
17,recent,0,9,2,format()
17,recent,0,9,3,moment(string)
18,sort,0,0,0,T[].sort(function): this
18,sort,0,0,1,sort(function)
18,sort,0,0,2,"sortBy(unknown, string)"
18,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
18,sort,0,0,4,"function.sort_by(string, boolean, function): function"
18,sort,0,0,5,sort(typeof mycomparator)
18,sort,0,0,6,function[].(): function[]
18,sort,0,0,7,"sortBy(any[], object): any[]"
18,sort,0,0,8,reverse()
18,sort,0,0,9,T[].sort(): this
18,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
18,sort,0,1,1,"function[].sortBy(object[], string): any[]"
18,sort,0,2,0,sort(function)
18,sort,0,2,1,T[].sort(function): this
18,sort,0,2,2,T[].push(T[]): number
18,sort,0,3,0,ObjectConstructor.keys(object): string[]
18,sort,0,3,1,T[].sort(function): this
18,sort,0,3,2,sort(typeof compare)
18,sort,0,4,0,T[].reverse(): T[]
18,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
18,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
18,sort,0,4,3,ObjectConstructor.keys(object): string[]
18,sort,0,4,4,T[].sort(): this
18,sort,0,4,5,T[].forEach(function): void
18,sort,0,5,0,sort(function)
18,sort,0,5,1,T[].sort(function): this
18,sort,0,5,2,"object[].sortBy(string, string)"
18,sort,0,5,3,sortBy(string)
18,sort,0,5,4,reverse(unknown)
18,sort,0,5,5,sort(typeof compare)
18,sort,0,5,6,dynamicSort(string): function
18,sort,0,5,7,"dynamicSortMultiple(string, string): function"
18,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
18,sort,0,5,9,"sortBy(object[], string)"
18,sort,0,6,0,T[].sort(function): this
18,sort,0,7,0,T[].sort(function): this
18,sort,0,8,0,T[].sort(function): this
18,sort,0,8,1,sort(function)
18,sort,0,9,0,sort(function)
18,sort,0,9,1,T[].sort(function): this
18,sort,0,9,2,dynamicSort(string): function
18,clone,0,0,0,JSON.parse(string)
18,clone,0,0,1,JSON.stringify(unknown): string
18,clone,0,0,2,T[].slice(): T[]
18,clone,0,0,3,slice()
18,clone,0,0,4,slice(number)
18,clone,0,0,5,JSON.stringify(function): string
18,clone,0,0,6,map(function)
18,clone,0,0,7,T[].push(T[]): number
18,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
18,clone,0,0,9,clone(function[]): void
18,clone,0,1,0,JSON.stringify(function): string
18,clone,0,1,1,JSON.parse(string)
18,clone,0,1,2,T[].slice(number): T[]
18,clone,0,1,3,T[].map(function): U[]
18,clone,0,1,4,"extend(boolean, undefined[], function)"
18,clone,0,1,5,slice(number)
18,clone,0,1,6,T[].slice(): T[]
18,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
18,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
18,clone,0,1,9,T[].push(T[]): number
18,clone,0,2,0,T[].concat(function): T[]
18,clone,0,2,1,undefined[].add(string)
18,clone,0,2,2,add(string)
18,clone,0,2,3,T[].slice(): T[]
18,clone,0,2,4,T[].push(T[]): number
18,clone,0,3,0,T[].map(function): U[]
18,clone,0,3,1,T[].forEach(function): void
18,clone,0,3,2,map(function)
18,clone,0,3,3,forEach(function)
18,clone,0,3,4,slice()
18,clone,0,3,5,JSON.parse(string)
18,clone,0,3,6,JSON.stringify(unknown): string
18,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
18,clone,0,5,0,map(function)
18,clone,0,5,1,"getGenericItems(unknown, unknown)"
18,clone,0,5,2,T[].forEach(function): void
18,clone,0,5,3,cloneDeep(unknown)
18,clone,0,5,4,JSON.parse(string)
18,clone,0,5,5,JSON.stringify(unknown): string
18,clone,0,5,6,slice()
18,clone,0,5,7,T[].map(function): U[]
18,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
18,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
18,clone,0,6,0,bestCopyEver(object)
18,clone,0,6,1,iterationCopy(object): object
18,clone,0,6,2,JSON.stringify(unknown): string
18,clone,0,6,3,JSON.parse(string)
18,clone,0,7,0,T[].map(function): U[]
18,clone,0,8,0,JSON.stringify(unknown): string
18,clone,0,8,1,JSON.parse(string)
18,clone,0,8,2,map(function)
18,clone,0,8,3,structuredClone(unknown)
18,clone,0,8,4,slice(number)
18,clone,0,8,5,"map(unknown, function)"
18,clone,0,8,6,evalJSON(unknown)
18,clone,0,8,7,toJSON(unknown)
18,clone,0,8,8,JSON.stringify(object): string
18,clone,0,8,9,cloneDeep(function)
18,clone,0,9,0,JSON.stringify(number[][]): string
18,clone,0,9,1,JSON.parse(string)
18,serve,0,0,0,static(string)
18,serve,0,0,1,use(unknown)
18,serve,0,0,2,"use(string, unknown)"
18,serve,0,2,0,"join(unknown, string)"
18,serve,0,2,1,static(unknown)
18,serve,0,2,2,"use(string, unknown)"
18,serve,0,2,3,"get(string, unknown)"
18,serve,0,4,0,"use(string, function)"
18,serve,0,4,1,use(function)
18,serve,0,5,0,static(unknown)
18,serve,0,5,1,use(unknown)
18,serve,0,5,2,"join(unknown, string)"
18,serve,0,5,3,"join(unknown, string, string)"
18,serve,0,6,0,"get(string, function)"
18,serve,0,8,0,static(string)
18,serve,0,8,1,"use(string, function, unknown)"
18,serve,0,8,2,"use(string, unknown)"
18,serve,0,8,3,"get(string, function)"
18,serve,0,9,0,static(string)
18,serve,0,9,1,"use(string, unknown)"
18,serve,0,9,2,"join(unknown, string)"
18,serve,0,9,3,static(unknown)
18,serve,0,9,4,use(unknown)
19,currency,0,0,0,Number.toFixed(number): string
19,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
19,currency,0,0,2,"String.replace(object, string): string"
19,currency,0,0,3,Number.toLocaleString(): string
19,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
19,currency,0,0,5,"number.formatMoney(number, string, string)"
19,currency,0,0,6,number.format(number)
19,currency,0,0,7,NumberConstructor.Number(unknown): number
19,currency,0,0,8,toFixed(number)
19,currency,0,0,9,StringConstructor.String(unknown): string
19,currency,0,1,0,formatMoney(number)
19,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
19,currency,0,3,0,formatTime(string)
19,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
19,currency,0,3,2,Document.getElementById(string): HTMLElement
19,currency,0,3,3,"moment(string, string)"
19,currency,0,3,4,format(string)
19,currency,0,3,5,T[].forEach(function): void
19,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
19,currency,0,4,1,unshift(unknown)
19,currency,0,4,2,"substr(unknown, number)"
19,currency,0,4,3,formatMoney(unknown)
19,currency,0,5,0,"replace(regex, string)"
19,currency,0,5,1,setInputValue(unknown)
19,currency,0,6,0,formatMoney(number)
19,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
19,currency,0,7,1,"String.replace(string | RegExp, string): string"
19,currency,0,7,2,toFixed(number)
19,currency,0,7,3,"String.replace(object, string): string"
19,currency,0,7,4,Math.abs(number): number
19,currency,0,7,5,Math.trunc(number): number
19,currency,0,7,6,Number.toFixed(): string
19,currency,0,7,7,Number.toFixed(number): string
19,currency,0,7,8,"number.replace(regex, string)"
19,currency,0,7,9,"replace(regex, string)"
19,currency,0,8,0,"format(string, string, number): string"
19,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
19,currency,0,8,2,"String.replace(string | RegExp, string): string"
19,currency,0,8,3,String.trim(): string
19,find,0,0,0,T[].filter(function): T[]
19,find,0,0,1,"search(string, object[])"
19,find,0,0,2,T[].find(function): T
19,find,0,0,3,find(function)
19,find,0,0,4,indexOf(unknown)
19,find,0,0,5,"fill(string, unknown, number)"
19,find,0,0,6,findIndex(function)
19,find,0,0,7,function.search(string): object
19,find,0,0,8,forEach(function)
19,find,0,0,9,map(function)
19,find,0,1,0,T[].indexOf(T): number
19,find,0,1,1,T[].includes(T): boolean
19,find,0,1,2,"inArray(string, string[])"
19,find,0,1,3,includes(string)
19,find,0,1,4,"inArray(string, unknown)"
19,find,0,1,5,T[].some(function): boolean
19,find,0,1,6,T[].find(function): T
19,find,0,2,0,T[].some(function): boolean
19,find,0,2,1,T[].filter(function): T[]
19,find,0,2,2,T[].findIndex(function): number
19,find,0,2,3,T[].find(function): T
19,find,0,2,4,find(function)
19,find,0,2,5,T[].forEach(function): void
19,find,0,3,0,T[].find(function): T
19,find,0,3,1,T[].filter(function): T[]
19,find,0,3,2,find(function)
19,find,0,3,3,"filterValue(object[], string, number)"
19,find,0,3,4,"filteredArray(object[], string, number): any[]"
19,find,0,3,5,"findWhere(unknown, object)"
19,find,0,3,6,T[].findIndex(function): number
19,find,0,3,7,some(function)
19,find,0,3,8,"select(unknown, function)"
19,find,0,3,9,"reduce(function, null)"
19,find,0,4,0,"T[].reduce(function, U): U"
19,find,0,4,1,filter(function)
19,find,0,4,2,"grep(unknown, function)"
19,find,0,4,3,T[].find(function): T
19,find,0,4,4,function.(): function
19,find,0,4,5,T[].map(function): U[]
19,find,0,4,6,ArrayConstructor.Array(number): any[]
19,find,0,4,7,map(function[])
19,find,0,4,8,"each(unknown, function)"
19,find,0,4,9,map(function)
19,find,0,5,0,T[].filter(function): T[]
19,find,0,5,1,filter(function)
19,find,0,6,0,T[].includes(T): boolean
19,find,0,6,1,T[].indexOf(T): number
19,find,0,6,2,T[].find(function): T
19,find,0,6,3,T[].some(function): boolean
19,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
19,find,0,6,5,T[].findIndex(function): number
19,find,0,6,6,number[].contains(number)
19,find,0,6,7,number[].contains(string)
19,find,0,6,8,indexOf(string)
19,find,0,6,9,indexOf(number)
19,recent,0,0,0,"subtract(number, string)"
19,recent,0,0,1,format(string)
19,recent,0,0,2,moment()
19,recent,0,0,3,toDate()
19,recent,0,0,4,moment(Date)
19,recent,0,0,5,duration(object)
19,recent,0,0,6,subtract(unknown)
19,recent,0,0,7,"subtract(string, number)"
19,recent,0,0,8,format()
19,recent,0,0,9,"moment(string, string)"
19,recent,0,1,0,"subtract(number, string)"
19,recent,0,1,1,"moment(string, string)"
19,recent,0,1,2,format()
19,recent,0,2,0,"subtract(string, number)"
19,recent,0,2,1,moment()
19,recent,0,2,2,"subtract(number, string)"
19,recent,0,2,3,format(string)
19,recent,0,3,0,diff(unknown)
19,recent,0,3,1,valueOf()
19,recent,0,3,2,"moment(string, string)"
19,recent,0,3,3,"moment(unknown, string)"
19,recent,0,4,0,Document.getElementById(string): HTMLElement
19,recent,0,4,1,"moment(string, string)"
19,recent,0,4,2,"subtract(string, string)"
19,recent,0,4,3,format(string)
19,recent,0,4,4,String.split(string | RegExp): string[]
19,recent,0,4,5,"subtract(unknown, number)"
19,recent,0,5,0,format(string)
19,recent,0,5,1,"subtract(number, string)"
19,recent,0,5,2,"add(number, string)"
19,recent,0,5,3,moment(number)
19,recent,0,5,4,"subtract(string, number)"
19,recent,0,5,5,"add(string, number)"
19,recent,0,5,6,moment()
19,recent,0,5,7,Document.getElementById(string): HTMLElement
19,recent,0,5,8,Date.PrevDay(number)
19,recent,0,5,9,Date.Nextday(number)
19,recent,0,6,0,moment()
19,recent,0,6,1,"subtract(number, string)"
19,recent,0,6,2,format(string)
19,recent,0,6,3,moment(number)
19,recent,0,6,4,DateConstructor.now(): number
19,recent,0,6,5,toDate()
19,recent,0,6,6,endOf(string)
19,recent,0,6,7,day(number)
19,recent,0,6,8,startOf(string)
19,recent,0,7,0,"subtract(number, string, unknown)"
19,recent,0,7,1,"subtract(unknown, string)"
19,recent,0,7,2,moment()
19,recent,0,7,3,"subtract(number, string)"
19,recent,0,7,4,function.date2timestamp(string): number | boolean
19,recent,0,7,5,"Document.write(string[], string, number | boolean): void"
19,recent,0,7,6,"moment(unknown, string)"
19,recent,0,7,7,diff(unknown)
19,recent,0,7,8,subtract(unknown)
19,recent,0,7,9,moment(unknown)
19,recent,0,8,0,setDate(unknown): void
19,recent,0,8,1,now()
19,recent,0,8,2,moment(unknown)
19,recent,0,8,3,"add(number, string)"
20,find,0,0,0,T[].filter(function): T[]
20,find,0,0,1,"search(string, object[])"
20,find,0,0,2,T[].find(function): T
20,find,0,0,3,find(function)
20,find,0,0,4,indexOf(unknown)
20,find,0,0,5,"fill(string, unknown, number)"
20,find,0,0,6,findIndex(function)
20,find,0,0,7,function.search(string): object
20,find,0,0,8,forEach(function)
20,find,0,0,9,map(function)
20,find,0,1,0,T[].indexOf(T): number
20,find,0,1,1,T[].includes(T): boolean
20,find,0,1,2,"inArray(string, string[])"
20,find,0,1,3,includes(string)
20,find,0,1,4,"inArray(string, unknown)"
20,find,0,1,5,T[].some(function): boolean
20,find,0,1,6,T[].find(function): T
20,find,0,2,0,T[].some(function): boolean
20,find,0,2,1,T[].filter(function): T[]
20,find,0,2,2,T[].findIndex(function): number
20,find,0,2,3,T[].find(function): T
20,find,0,2,4,find(function)
20,find,0,2,5,T[].forEach(function): void
20,find,0,3,0,T[].find(function): T
20,find,0,3,1,T[].filter(function): T[]
20,find,0,3,2,find(function)
20,find,0,3,3,"filterValue(object[], string, number)"
20,find,0,3,4,"filteredArray(object[], string, number): any[]"
20,find,0,3,5,"findWhere(unknown, object)"
20,find,0,3,6,T[].findIndex(function): number
20,find,0,3,7,some(function)
20,find,0,3,8,"select(unknown, function)"
20,find,0,3,9,"reduce(function, null)"
20,find,0,4,0,"T[].reduce(function, U): U"
20,find,0,4,1,filter(function)
20,find,0,4,2,"grep(unknown, function)"
20,find,0,4,3,T[].find(function): T
20,find,0,4,4,function.(): function
20,find,0,4,5,T[].map(function): U[]
20,find,0,4,6,ArrayConstructor.Array(number): any[]
20,find,0,4,7,map(function[])
20,find,0,4,8,"each(unknown, function)"
20,find,0,4,9,map(function)
20,find,0,5,0,T[].filter(function): T[]
20,find,0,5,1,filter(function)
20,find,0,6,0,T[].includes(T): boolean
20,find,0,6,1,T[].indexOf(T): number
20,find,0,6,2,T[].find(function): T
20,find,0,6,3,T[].some(function): boolean
20,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
20,find,0,6,5,T[].findIndex(function): number
20,find,0,6,6,number[].contains(number)
20,find,0,6,7,number[].contains(string)
20,find,0,6,8,indexOf(string)
20,find,0,6,9,indexOf(number)
20,find,0,7,0,T[].findIndex(function): number
20,find,0,7,1,T[].filter(function): T[]
20,find,0,7,2,T[].map(function): U[]
20,find,0,7,3,T[].forEach(function): void
20,find,0,7,4,map(function)
20,find,0,7,5,"T[].splice(number, number, T[]): T[]"
20,find,0,7,6,T[].find(function): T
20,find,0,7,7,findIndex(function)
20,find,0,7,8,forEach(function)
20,find,0,7,9,T[].pop(): T
20,clone,0,0,0,JSON.parse(string)
20,clone,0,0,1,JSON.stringify(unknown): string
20,clone,0,0,2,T[].slice(): T[]
20,clone,0,0,3,slice()
20,clone,0,0,4,slice(number)
20,clone,0,0,5,JSON.stringify(function): string
20,clone,0,0,6,map(function)
20,clone,0,0,7,T[].push(T[]): number
20,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
20,clone,0,0,9,clone(function[]): void
20,clone,0,1,0,JSON.stringify(function): string
20,clone,0,1,1,JSON.parse(string)
20,clone,0,1,2,T[].slice(number): T[]
20,clone,0,1,3,T[].map(function): U[]
20,clone,0,1,4,"extend(boolean, undefined[], function)"
20,clone,0,1,5,slice(number)
20,clone,0,1,6,T[].slice(): T[]
20,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
20,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
20,clone,0,1,9,T[].push(T[]): number
20,clone,0,2,0,T[].concat(function): T[]
20,clone,0,2,1,undefined[].add(string)
20,clone,0,2,2,add(string)
20,clone,0,2,3,T[].slice(): T[]
20,clone,0,2,4,T[].push(T[]): number
20,clone,0,3,0,T[].map(function): U[]
20,clone,0,3,1,T[].forEach(function): void
20,clone,0,3,2,map(function)
20,clone,0,3,3,forEach(function)
20,clone,0,3,4,slice()
20,clone,0,3,5,JSON.parse(string)
20,clone,0,3,6,JSON.stringify(unknown): string
20,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
20,clone,0,5,0,map(function)
20,clone,0,5,1,"getGenericItems(unknown, unknown)"
20,clone,0,5,2,T[].forEach(function): void
20,clone,0,5,3,cloneDeep(unknown)
20,clone,0,5,4,JSON.parse(string)
20,clone,0,5,5,JSON.stringify(unknown): string
20,clone,0,5,6,slice()
20,clone,0,5,7,T[].map(function): U[]
20,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
20,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
20,clone,0,6,0,bestCopyEver(object)
20,clone,0,6,1,iterationCopy(object): object
20,clone,0,6,2,JSON.stringify(unknown): string
20,clone,0,6,3,JSON.parse(string)
20,clone,0,7,0,T[].map(function): U[]
20,clone,0,8,0,JSON.stringify(unknown): string
20,clone,0,8,1,JSON.parse(string)
20,clone,0,8,2,map(function)
20,clone,0,8,3,structuredClone(unknown)
20,clone,0,8,4,slice(number)
20,clone,0,8,5,"map(unknown, function)"
20,clone,0,8,6,evalJSON(unknown)
20,clone,0,8,7,toJSON(unknown)
20,clone,0,8,8,JSON.stringify(object): string
20,clone,0,8,9,cloneDeep(function)
20,clone,0,9,0,JSON.stringify(number[][]): string
20,clone,0,9,1,JSON.parse(string)
20,recent,0,0,0,"subtract(string, number)"
20,recent,0,0,1,moment()
20,recent,0,0,2,"subtract(number, string)"
20,recent,0,0,3,format(string)
20,recent,0,1,0,setDate(unknown): void
20,recent,0,1,1,now()
20,recent,0,1,2,moment(unknown)
20,recent,0,1,3,"add(number, string)"
20,recent,0,2,0,"subtract(number, string)"
20,recent,0,2,1,format(string)
20,recent,0,2,2,moment()
20,recent,0,2,3,toDate()
20,recent,0,2,4,moment(Date)
20,recent,0,2,5,duration(object)
20,recent,0,2,6,subtract(unknown)
20,recent,0,2,7,"subtract(string, number)"
20,recent,0,2,8,format()
20,recent,0,2,9,"moment(string, string)"
20,recent,0,3,0,Date.getDate(): number
20,recent,0,3,1,Date.getTime(): number
20,recent,0,3,2,Date.setDate(number): number
20,recent,0,3,3,Date.setTime(number): number
20,recent,0,3,4,Date.toLocaleString(): string
20,recent,0,3,5,Document.write(string[]): void
20,recent,0,3,6,"addDays(Date, number): Date"
20,recent,0,3,7,Date.getMonth(): number
20,recent,0,3,8,Date.getFullYear(): number
20,recent,0,3,9,"AddOrSubractDays(Date, number, boolean): Date"
21,find,0,0,0,T[].filter(function): T[]
21,find,0,0,1,"search(string, object[])"
21,find,0,0,2,T[].find(function): T
21,find,0,0,3,find(function)
21,find,0,0,4,indexOf(unknown)
21,find,0,0,5,"fill(string, unknown, number)"
21,find,0,0,6,findIndex(function)
21,find,0,0,7,function.search(string): object
21,find,0,0,8,forEach(function)
21,find,0,0,9,map(function)
21,find,0,1,0,T[].indexOf(T): number
21,find,0,1,1,T[].includes(T): boolean
21,find,0,1,2,"inArray(string, string[])"
21,find,0,1,3,includes(string)
21,find,0,1,4,"inArray(string, unknown)"
21,find,0,1,5,T[].some(function): boolean
21,find,0,1,6,T[].find(function): T
21,find,0,2,0,T[].some(function): boolean
21,find,0,2,1,T[].filter(function): T[]
21,find,0,2,2,T[].findIndex(function): number
21,find,0,2,3,T[].find(function): T
21,find,0,2,4,find(function)
21,find,0,2,5,T[].forEach(function): void
21,find,0,3,0,T[].find(function): T
21,find,0,3,1,T[].filter(function): T[]
21,find,0,3,2,find(function)
21,find,0,3,3,"filterValue(object[], string, number)"
21,find,0,3,4,"filteredArray(object[], string, number): any[]"
21,find,0,3,5,"findWhere(unknown, object)"
21,find,0,3,6,T[].findIndex(function): number
21,find,0,3,7,some(function)
21,find,0,3,8,"select(unknown, function)"
21,find,0,3,9,"reduce(function, null)"
21,find,0,4,0,"T[].reduce(function, U): U"
21,find,0,4,1,filter(function)
21,find,0,4,2,"grep(unknown, function)"
21,find,0,4,3,T[].find(function): T
21,find,0,4,4,function.(): function
21,find,0,4,5,T[].map(function): U[]
21,find,0,4,6,ArrayConstructor.Array(number): any[]
21,find,0,4,7,map(function[])
21,find,0,4,8,"each(unknown, function)"
21,find,0,4,9,map(function)
21,find,0,5,0,T[].filter(function): T[]
21,find,0,5,1,filter(function)
21,find,0,6,0,T[].includes(T): boolean
21,find,0,6,1,T[].indexOf(T): number
21,find,0,6,2,T[].find(function): T
21,find,0,6,3,T[].some(function): boolean
21,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
21,find,0,6,5,T[].findIndex(function): number
21,find,0,6,6,number[].contains(number)
21,find,0,6,7,number[].contains(string)
21,find,0,6,8,indexOf(string)
21,find,0,6,9,indexOf(number)
21,clone,0,0,0,JSON.parse(string)
21,clone,0,0,1,JSON.stringify(unknown): string
21,clone,0,0,2,T[].slice(): T[]
21,clone,0,0,3,slice()
21,clone,0,0,4,slice(number)
21,clone,0,0,5,JSON.stringify(function): string
21,clone,0,0,6,map(function)
21,clone,0,0,7,T[].push(T[]): number
21,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
21,clone,0,0,9,clone(function[]): void
21,clone,0,1,0,JSON.stringify(function): string
21,clone,0,1,1,JSON.parse(string)
21,clone,0,1,2,T[].slice(number): T[]
21,clone,0,1,3,T[].map(function): U[]
21,clone,0,1,4,"extend(boolean, undefined[], function)"
21,clone,0,1,5,slice(number)
21,clone,0,1,6,T[].slice(): T[]
21,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
21,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
21,clone,0,1,9,T[].push(T[]): number
21,clone,0,2,0,T[].concat(function): T[]
21,clone,0,2,1,undefined[].add(string)
21,clone,0,2,2,add(string)
21,clone,0,2,3,T[].slice(): T[]
21,clone,0,2,4,T[].push(T[]): number
21,clone,0,3,0,T[].map(function): U[]
21,clone,0,3,1,T[].forEach(function): void
21,clone,0,3,2,map(function)
21,clone,0,3,3,forEach(function)
21,clone,0,3,4,slice()
21,clone,0,3,5,JSON.parse(string)
21,clone,0,3,6,JSON.stringify(unknown): string
21,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
21,clone,0,5,0,map(function)
21,clone,0,5,1,"getGenericItems(unknown, unknown)"
21,clone,0,5,2,T[].forEach(function): void
21,clone,0,5,3,cloneDeep(unknown)
21,clone,0,5,4,JSON.parse(string)
21,clone,0,5,5,JSON.stringify(unknown): string
21,clone,0,5,6,slice()
21,clone,0,5,7,T[].map(function): U[]
21,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
21,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
21,clone,0,6,0,bestCopyEver(object)
21,clone,0,6,1,iterationCopy(object): object
21,clone,0,6,2,JSON.stringify(unknown): string
21,clone,0,6,3,JSON.parse(string)
21,clone,0,7,0,T[].map(function): U[]
21,clone,0,8,0,JSON.stringify(unknown): string
21,clone,0,8,1,JSON.parse(string)
21,clone,0,8,2,map(function)
21,clone,0,8,3,structuredClone(unknown)
21,clone,0,8,4,slice(number)
21,clone,0,8,5,"map(unknown, function)"
21,clone,0,8,6,evalJSON(unknown)
21,clone,0,8,7,toJSON(unknown)
21,clone,0,8,8,JSON.stringify(object): string
21,clone,0,8,9,cloneDeep(function)
21,clone,0,9,0,JSON.stringify(number[][]): string
21,clone,0,9,1,JSON.parse(string)
21,recent,0,0,0,subtract(object)
21,recent,0,0,1,moment(string)
21,recent,0,0,2,String.split(string | RegExp): string[]
21,recent,0,0,3,subtract(unknown)
21,recent,0,0,4,moment(number)
21,recent,0,0,5,format(string)
21,recent,0,0,6,toString()
21,recent,0,0,7,subtract(ObjectConstructor)
21,recent,0,0,8,"subtract(StringConstructor, StringConstructor)"
21,recent,0,0,9,"subtract(NumberConstructor, StringConstructor)"
21,recent,0,1,0,"subtract(unknown, string)"
21,recent,0,1,1,input(string)
21,recent,0,1,2,moment()
21,recent,0,1,3,subtract(unknown)
21,recent,0,1,4,format(string)
21,recent,0,2,0,utc(number)
21,recent,0,2,1,format(string)
21,recent,0,2,2,"subtract(number, string)"
21,recent,0,2,3,diff(unknown)
21,recent,0,2,4,duration(unknown)
21,recent,0,2,5,"add(number, string)"
21,recent,0,2,6,isBefore(unknown)
21,recent,0,2,7,"utc(unknown, string)"
21,recent,0,3,0,subtract(unknown)
21,recent,0,3,1,format()
21,recent,0,3,2,duration(object)
21,recent,0,3,3,"moment(string, string)"
21,recent,0,3,4,"subtract(number, string)"
21,recent,0,4,0,diff(unknown)
21,recent,0,4,1,valueOf()
21,recent,0,4,2,"moment(string, string)"
21,recent,0,4,3,"moment(unknown, string)"
21,recent,0,5,0,moment(unknown)
21,recent,0,5,1,"add(number, string)"
21,recent,0,5,2,"subtract(StringConstructor, NumberConstructor)"
21,recent,0,5,3,moment()
21,recent,0,5,4,"subtract(NumberConstructor, StringConstructor)"
21,recent,0,5,5,"subtract(StringConstructor, StringConstructor)"
21,recent,0,5,6,subtract(unknown)
21,recent,0,5,7,subtract(ObjectConstructor)
21,recent,0,5,8,String.split(string | RegExp): string[]
21,recent,0,5,9,subtract(object)
21,recent,0,6,0,"subtract(number, string, unknown)"
21,recent,0,6,1,"subtract(unknown, string)"
21,recent,0,6,2,moment()
21,recent,0,6,3,"subtract(number, string)"
21,recent,0,6,4,function.date2timestamp(string): number | boolean
21,recent,0,6,5,"Document.write(string[], string, number | boolean): void"
21,recent,0,6,6,"moment(unknown, string)"
21,recent,0,6,7,diff(unknown)
21,recent,0,6,8,subtract(unknown)
21,recent,0,6,9,moment(unknown)
21,recent,0,8,0,Number.toString(): string
21,recent,0,8,1,moment(string)
21,recent,0,8,2,unix()
21,recent,0,8,3,toString()
21,recent,0,8,4,year()
21,recent,0,8,5,"subtract(number, string)"
21,recent,0,8,6,moment(unknown)
21,recent,0,8,7,asDays()
21,recent,0,8,8,diff(unknown)
21,recent,0,8,9,duration(unknown)
21,recent,0,9,0,"subtract(string, number)"
21,recent,0,9,1,moment()
21,recent,0,9,2,"subtract(number, string)"
21,recent,0,9,3,format(string)
22,sort,0,0,0,T[].sort(function): this
22,sort,0,0,1,sort(function)
22,sort,0,0,2,"sortBy(unknown, string)"
22,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
22,sort,0,0,4,"function.sort_by(string, boolean, function): function"
22,sort,0,0,5,sort(typeof mycomparator)
22,sort,0,0,6,function[].(): function[]
22,sort,0,0,7,"sortBy(any[], object): any[]"
22,sort,0,0,8,reverse()
22,sort,0,0,9,T[].sort(): this
22,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
22,sort,0,1,1,"function[].sortBy(object[], string): any[]"
22,sort,0,2,0,sort(function)
22,sort,0,2,1,T[].sort(function): this
22,sort,0,2,2,T[].push(T[]): number
22,sort,0,3,0,ObjectConstructor.keys(object): string[]
22,sort,0,3,1,T[].sort(function): this
22,sort,0,3,2,sort(typeof compare)
22,sort,0,4,0,T[].reverse(): T[]
22,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
22,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
22,sort,0,4,3,ObjectConstructor.keys(object): string[]
22,sort,0,4,4,T[].sort(): this
22,sort,0,4,5,T[].forEach(function): void
22,sort,0,5,0,sort(function)
22,sort,0,5,1,T[].sort(function): this
22,sort,0,5,2,"object[].sortBy(string, string)"
22,sort,0,5,3,sortBy(string)
22,sort,0,5,4,reverse(unknown)
22,sort,0,5,5,sort(typeof compare)
22,sort,0,5,6,dynamicSort(string): function
22,sort,0,5,7,"dynamicSortMultiple(string, string): function"
22,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
22,sort,0,5,9,"sortBy(object[], string)"
22,sort,0,6,0,T[].sort(function): this
22,sort,0,7,0,T[].sort(function): this
22,sort,0,8,0,T[].sort(function): this
22,sort,0,8,1,sort(function)
22,sort,0,9,0,sort(function)
22,sort,0,9,1,T[].sort(function): this
22,sort,0,9,2,dynamicSort(string): function
22,clone,0,0,0,JSON.parse(string)
22,clone,0,0,1,JSON.stringify(unknown): string
22,clone,0,0,2,T[].slice(): T[]
22,clone,0,0,3,slice()
22,clone,0,0,4,slice(number)
22,clone,0,0,5,JSON.stringify(function): string
22,clone,0,0,6,map(function)
22,clone,0,0,7,T[].push(T[]): number
22,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
22,clone,0,0,9,clone(function[]): void
22,clone,0,1,0,JSON.stringify(function): string
22,clone,0,1,1,JSON.parse(string)
22,clone,0,1,2,T[].slice(number): T[]
22,clone,0,1,3,T[].map(function): U[]
22,clone,0,1,4,"extend(boolean, undefined[], function)"
22,clone,0,1,5,slice(number)
22,clone,0,1,6,T[].slice(): T[]
22,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
22,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
22,clone,0,1,9,T[].push(T[]): number
22,clone,0,2,0,T[].concat(function): T[]
22,clone,0,2,1,undefined[].add(string)
22,clone,0,2,2,add(string)
22,clone,0,2,3,T[].slice(): T[]
22,clone,0,2,4,T[].push(T[]): number
22,clone,0,3,0,T[].map(function): U[]
22,clone,0,3,1,T[].forEach(function): void
22,clone,0,3,2,map(function)
22,clone,0,3,3,forEach(function)
22,clone,0,3,4,slice()
22,clone,0,3,5,JSON.parse(string)
22,clone,0,3,6,JSON.stringify(unknown): string
22,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
22,clone,0,5,0,map(function)
22,clone,0,5,1,"getGenericItems(unknown, unknown)"
22,clone,0,5,2,T[].forEach(function): void
22,clone,0,5,3,cloneDeep(unknown)
22,clone,0,5,4,JSON.parse(string)
22,clone,0,5,5,JSON.stringify(unknown): string
22,clone,0,5,6,slice()
22,clone,0,5,7,T[].map(function): U[]
22,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
22,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
22,clone,0,6,0,bestCopyEver(object)
22,clone,0,6,1,iterationCopy(object): object
22,clone,0,6,2,JSON.stringify(unknown): string
22,clone,0,6,3,JSON.parse(string)
22,clone,0,7,0,T[].map(function): U[]
22,clone,0,8,0,JSON.stringify(unknown): string
22,clone,0,8,1,JSON.parse(string)
22,clone,0,8,2,map(function)
22,clone,0,8,3,structuredClone(unknown)
22,clone,0,8,4,slice(number)
22,clone,0,8,5,"map(unknown, function)"
22,clone,0,8,6,evalJSON(unknown)
22,clone,0,8,7,toJSON(unknown)
22,clone,0,8,8,JSON.stringify(object): string
22,clone,0,8,9,cloneDeep(function)
22,clone,0,9,0,JSON.stringify(number[][]): string
22,clone,0,9,1,JSON.parse(string)
22,serve,0,0,0,static(unknown)
22,serve,0,0,1,use(unknown)
22,serve,0,0,2,"join(unknown, string)"
22,serve,0,0,3,"join(unknown, string, string)"
22,serve,0,2,0,static(string)
22,serve,0,2,1,"use(string, unknown)"
22,serve,0,2,2,"join(unknown, string)"
22,serve,0,2,3,static(unknown)
22,serve,0,2,4,use(unknown)
22,serve,0,4,0,"join(unknown, string)"
22,serve,0,4,1,static(unknown)
22,serve,0,4,2,"use(string, unknown)"
22,serve,0,4,3,"get(string, unknown)"
22,serve,0,5,0,static(string)
22,serve,0,5,1,"use(string, function, unknown)"
22,serve,0,5,2,"use(string, unknown)"
22,serve,0,5,3,"get(string, function)"
22,serve,0,6,0,"get(string, function)"
22,serve,0,6,1,"get(string, function, unknown)"
22,serve,0,6,2,use(unknown)
22,serve,0,6,3,express()
22,serve,0,6,4,()
22,serve,0,7,0,use(function)
22,serve,0,7,1,static(string)
22,serve,0,7,2,use(unknown)
22,serve,0,8,0,cwd()
22,serve,0,8,1,static(string)
22,serve,0,8,2,use(unknown)
23,sort,0,0,0,T[].sort(function): this
23,sort,0,0,1,sort(function)
23,sort,0,0,2,"sortBy(unknown, string)"
23,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
23,sort,0,0,4,"function.sort_by(string, boolean, function): function"
23,sort,0,0,5,sort(typeof mycomparator)
23,sort,0,0,6,function[].(): function[]
23,sort,0,0,7,"sortBy(any[], object): any[]"
23,sort,0,0,8,reverse()
23,sort,0,0,9,T[].sort(): this
23,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
23,sort,0,1,1,"function[].sortBy(object[], string): any[]"
23,sort,0,2,0,sort(function)
23,sort,0,2,1,T[].sort(function): this
23,sort,0,2,2,T[].push(T[]): number
23,sort,0,3,0,ObjectConstructor.keys(object): string[]
23,sort,0,3,1,T[].sort(function): this
23,sort,0,3,2,sort(typeof compare)
23,sort,0,4,0,T[].reverse(): T[]
23,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
23,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
23,sort,0,4,3,ObjectConstructor.keys(object): string[]
23,sort,0,4,4,T[].sort(): this
23,sort,0,4,5,T[].forEach(function): void
23,sort,0,5,0,sort(function)
23,sort,0,5,1,T[].sort(function): this
23,sort,0,5,2,"object[].sortBy(string, string)"
23,sort,0,5,3,sortBy(string)
23,sort,0,5,4,reverse(unknown)
23,sort,0,5,5,sort(typeof compare)
23,sort,0,5,6,dynamicSort(string): function
23,sort,0,5,7,"dynamicSortMultiple(string, string): function"
23,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
23,sort,0,5,9,"sortBy(object[], string)"
23,sort,0,6,0,T[].sort(function): this
23,sort,0,7,0,T[].sort(function): this
23,sort,0,8,0,T[].sort(function): this
23,sort,0,8,1,sort(function)
23,sort,0,9,0,sort(function)
23,sort,0,9,1,T[].sort(function): this
23,sort,0,9,2,dynamicSort(string): function
23,clone,0,0,0,JSON.parse(string)
23,clone,0,0,1,JSON.stringify(unknown): string
23,clone,0,0,2,T[].slice(): T[]
23,clone,0,0,3,slice()
23,clone,0,0,4,slice(number)
23,clone,0,0,5,JSON.stringify(function): string
23,clone,0,0,6,map(function)
23,clone,0,0,7,T[].push(T[]): number
23,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
23,clone,0,0,9,clone(function[]): void
23,clone,0,1,0,JSON.stringify(function): string
23,clone,0,1,1,JSON.parse(string)
23,clone,0,1,2,T[].slice(number): T[]
23,clone,0,1,3,T[].map(function): U[]
23,clone,0,1,4,"extend(boolean, undefined[], function)"
23,clone,0,1,5,slice(number)
23,clone,0,1,6,T[].slice(): T[]
23,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
23,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
23,clone,0,1,9,T[].push(T[]): number
23,clone,0,2,0,T[].concat(function): T[]
23,clone,0,2,1,undefined[].add(string)
23,clone,0,2,2,add(string)
23,clone,0,2,3,T[].slice(): T[]
23,clone,0,2,4,T[].push(T[]): number
23,clone,0,3,0,T[].map(function): U[]
23,clone,0,3,1,T[].forEach(function): void
23,clone,0,3,2,map(function)
23,clone,0,3,3,forEach(function)
23,clone,0,3,4,slice()
23,clone,0,3,5,JSON.parse(string)
23,clone,0,3,6,JSON.stringify(unknown): string
23,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
23,clone,0,5,0,map(function)
23,clone,0,5,1,"getGenericItems(unknown, unknown)"
23,clone,0,5,2,T[].forEach(function): void
23,clone,0,5,3,cloneDeep(unknown)
23,clone,0,5,4,JSON.parse(string)
23,clone,0,5,5,JSON.stringify(unknown): string
23,clone,0,5,6,slice()
23,clone,0,5,7,T[].map(function): U[]
23,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
23,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
23,clone,0,6,0,bestCopyEver(object)
23,clone,0,6,1,iterationCopy(object): object
23,clone,0,6,2,JSON.stringify(unknown): string
23,clone,0,6,3,JSON.parse(string)
23,clone,0,7,0,T[].map(function): U[]
23,clone,0,8,0,JSON.stringify(unknown): string
23,clone,0,8,1,JSON.parse(string)
23,clone,0,8,2,map(function)
23,clone,0,8,3,structuredClone(unknown)
23,clone,0,8,4,slice(number)
23,clone,0,8,5,"map(unknown, function)"
23,clone,0,8,6,evalJSON(unknown)
23,clone,0,8,7,toJSON(unknown)
23,clone,0,8,8,JSON.stringify(object): string
23,clone,0,8,9,cloneDeep(function)
23,clone,0,9,0,JSON.stringify(number[][]): string
23,clone,0,9,1,JSON.parse(string)
23,clone,1,0,0,JSON.parse(string)
23,clone,1,0,1,JSON.stringify(unknown): string
23,clone,1,0,2,T[].slice(): T[]
23,clone,1,0,3,slice()
23,clone,1,0,4,slice(number)
23,clone,1,0,5,JSON.stringify(function): string
23,clone,1,0,6,map(function)
23,clone,1,0,7,T[].push(T[]): number
23,clone,1,0,8,ArrayConstructor.Array(T[]): T[]
23,clone,1,0,9,clone(function[]): void
23,clone,1,1,0,T[].map(function): U[]
23,clone,1,1,1,format(object)
23,clone,1,1,2,fill(object)
23,clone,1,1,3,ArrayConstructor.Array(number): any[]
23,clone,1,1,4,"function.cloneSquareAndChangeColumn(any[][], number, number)"
23,clone,1,2,0,T[].slice(number): T[]
23,clone,1,2,1,JSON.parse(string)
23,clone,1,2,2,JSON.stringify(number[]): string
23,clone,1,3,0,T[].shift(): T
23,clone,1,3,1,JSON.stringify(number[][]): string
23,clone,1,3,2,"ArrayConstructor.from(Iterable<T> | ArrayLike<T>, function): U[]"
23,clone,1,7,0,slice()
23,clone,1,8,0,forEach(function)
23,clone,1,8,1,T[].flatMap(function[]): U[]
23,clone,1,9,0,Function.call(Function)
23,clone,1,9,1,T[].map(function): U[]
23,serve,0,0,0,"use(string, function)"
23,serve,0,0,1,use(function)
23,serve,0,2,0,"join(unknown, string)"
23,serve,0,2,1,static(unknown)
23,serve,0,2,2,"use(string, unknown)"
23,serve,0,2,3,"get(string, unknown)"
23,serve,0,3,0,"get(string, function)"
23,serve,0,3,1,"get(string, function, unknown)"
23,serve,0,3,2,use(unknown)
23,serve,0,3,3,express()
23,serve,0,3,4,()
23,serve,0,4,0,static(string)
23,serve,0,4,1,"use(string, function)"
23,serve,0,4,2,"get(string, function)"
23,serve,0,4,3,createServer(unknown)
23,serve,0,4,4,"listen(unknown, function)"
23,serve,0,4,5,"use(string, unknown)"
23,serve,0,4,6,express()
23,serve,0,4,7,"use(string, function, unknown)"
23,serve,0,6,0,"get(string, unknown)"
23,serve,0,6,1,"get(string, function)"
23,serve,0,7,0,static(string)
23,serve,0,7,1,"use(string, function, unknown)"
23,serve,0,7,2,"use(string, unknown)"
23,serve,0,7,3,"get(string, function)"
23,serve,0,8,0,use(function)
23,serve,0,8,1,static(string)
23,serve,0,8,2,use(unknown)
23,serve,0,9,0,static(unknown)
23,serve,0,9,1,use(unknown)
23,serve,0,9,2,"join(unknown, string)"
23,serve,0,9,3,"join(unknown, string, string)"
23,serve,1,0,0,static(string)
23,serve,1,0,1,"use(string, unknown)"
23,serve,1,0,2,"join(unknown, string)"
23,serve,1,0,3,static(unknown)
23,serve,1,0,4,use(unknown)
23,serve,1,1,0,static(string)
23,serve,1,1,1,"use(string, function)"
23,serve,1,1,2,"get(string, function)"
23,serve,1,1,3,createServer(unknown)
23,serve,1,1,4,"listen(unknown, function)"
23,serve,1,1,5,"use(string, unknown)"
23,serve,1,1,6,express()
23,serve,1,1,7,"use(string, function, unknown)"
23,serve,1,4,0,static(string)
23,serve,1,4,1,use(unknown)
23,serve,1,4,2,"use(string, unknown)"
23,serve,1,5,0,static(string)
23,serve,1,5,1,"use(string, function, unknown)"
23,serve,1,5,2,"use(string, unknown)"
23,serve,1,5,3,"get(string, function)"
23,serve,1,6,0,"join(unknown, string)"
23,serve,1,6,1,static(unknown)
23,serve,1,6,2,"use(string, unknown)"
23,serve,1,6,3,"get(string, unknown)"
23,serve,1,7,0,"sendfile(unknown, object)"
23,serve,1,7,1,static(unknown)
23,serve,1,7,2,static(string)
23,serve,1,7,3,use(unknown)
23,serve,1,7,4,resolve(string)
23,serve,1,7,5,sendFile(unknown)
23,serve,1,7,6,sendFile(string)
23,serve,1,8,0,"use(string, function)"
23,serve,1,8,1,use(function)
24,find,0,0,0,T[].filter(function): T[]
24,find,0,0,1,"search(string, object[])"
24,find,0,0,2,T[].find(function): T
24,find,0,0,3,find(function)
24,find,0,0,4,indexOf(unknown)
24,find,0,0,5,"fill(string, unknown, number)"
24,find,0,0,6,findIndex(function)
24,find,0,0,7,function.search(string): object
24,find,0,0,8,forEach(function)
24,find,0,0,9,map(function)
24,find,0,1,0,T[].indexOf(T): number
24,find,0,1,1,T[].includes(T): boolean
24,find,0,1,2,"inArray(string, string[])"
24,find,0,1,3,includes(string)
24,find,0,1,4,"inArray(string, unknown)"
24,find,0,1,5,T[].some(function): boolean
24,find,0,1,6,T[].find(function): T
24,find,0,2,0,T[].some(function): boolean
24,find,0,2,1,T[].filter(function): T[]
24,find,0,2,2,T[].findIndex(function): number
24,find,0,2,3,T[].find(function): T
24,find,0,2,4,find(function)
24,find,0,2,5,T[].forEach(function): void
24,find,0,3,0,T[].find(function): T
24,find,0,3,1,T[].filter(function): T[]
24,find,0,3,2,find(function)
24,find,0,3,3,"filterValue(object[], string, number)"
24,find,0,3,4,"filteredArray(object[], string, number): any[]"
24,find,0,3,5,"findWhere(unknown, object)"
24,find,0,3,6,T[].findIndex(function): number
24,find,0,3,7,some(function)
24,find,0,3,8,"select(unknown, function)"
24,find,0,3,9,"reduce(function, null)"
24,find,0,4,0,"T[].reduce(function, U): U"
24,find,0,4,1,filter(function)
24,find,0,4,2,"grep(unknown, function)"
24,find,0,4,3,T[].find(function): T
24,find,0,4,4,function.(): function
24,find,0,4,5,T[].map(function): U[]
24,find,0,4,6,ArrayConstructor.Array(number): any[]
24,find,0,4,7,map(function[])
24,find,0,4,8,"each(unknown, function)"
24,find,0,4,9,map(function)
24,find,0,5,0,T[].filter(function): T[]
24,find,0,5,1,filter(function)
24,find,0,6,0,T[].includes(T): boolean
24,find,0,6,1,T[].indexOf(T): number
24,find,0,6,2,T[].find(function): T
24,find,0,6,3,T[].some(function): boolean
24,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
24,find,0,6,5,T[].findIndex(function): number
24,find,0,6,6,number[].contains(number)
24,find,0,6,7,number[].contains(string)
24,find,0,6,8,indexOf(string)
24,find,0,6,9,indexOf(number)
24,clone,0,0,0,JSON.parse(string)
24,clone,0,0,1,JSON.stringify(unknown): string
24,clone,0,0,2,T[].slice(): T[]
24,clone,0,0,3,slice()
24,clone,0,0,4,slice(number)
24,clone,0,0,5,JSON.stringify(function): string
24,clone,0,0,6,map(function)
24,clone,0,0,7,T[].push(T[]): number
24,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
24,clone,0,0,9,clone(function[]): void
24,clone,0,1,0,JSON.stringify(function): string
24,clone,0,1,1,JSON.parse(string)
24,clone,0,1,2,T[].slice(number): T[]
24,clone,0,1,3,T[].map(function): U[]
24,clone,0,1,4,"extend(boolean, undefined[], function)"
24,clone,0,1,5,slice(number)
24,clone,0,1,6,T[].slice(): T[]
24,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
24,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
24,clone,0,1,9,T[].push(T[]): number
24,clone,0,2,0,T[].concat(function): T[]
24,clone,0,2,1,undefined[].add(string)
24,clone,0,2,2,add(string)
24,clone,0,2,3,T[].slice(): T[]
24,clone,0,2,4,T[].push(T[]): number
24,clone,0,3,0,T[].map(function): U[]
24,clone,0,3,1,T[].forEach(function): void
24,clone,0,3,2,map(function)
24,clone,0,3,3,forEach(function)
24,clone,0,3,4,slice()
24,clone,0,3,5,JSON.parse(string)
24,clone,0,3,6,JSON.stringify(unknown): string
24,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
24,clone,0,5,0,map(function)
24,clone,0,5,1,"getGenericItems(unknown, unknown)"
24,clone,0,5,2,T[].forEach(function): void
24,clone,0,5,3,cloneDeep(unknown)
24,clone,0,5,4,JSON.parse(string)
24,clone,0,5,5,JSON.stringify(unknown): string
24,clone,0,5,6,slice()
24,clone,0,5,7,T[].map(function): U[]
24,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
24,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
24,clone,0,6,0,bestCopyEver(object)
24,clone,0,6,1,iterationCopy(object): object
24,clone,0,6,2,JSON.stringify(unknown): string
24,clone,0,6,3,JSON.parse(string)
24,clone,0,7,0,T[].map(function): U[]
24,clone,0,8,0,JSON.stringify(unknown): string
24,clone,0,8,1,JSON.parse(string)
24,clone,0,8,2,map(function)
24,clone,0,8,3,structuredClone(unknown)
24,clone,0,8,4,slice(number)
24,clone,0,8,5,"map(unknown, function)"
24,clone,0,8,6,evalJSON(unknown)
24,clone,0,8,7,toJSON(unknown)
24,clone,0,8,8,JSON.stringify(object): string
24,clone,0,8,9,cloneDeep(function)
24,clone,0,9,0,JSON.stringify(number[][]): string
24,clone,0,9,1,JSON.parse(string)
24,recent,0,0,0,subtract(object)
24,recent,0,0,1,moment(string)
24,recent,0,0,2,String.split(string | RegExp): string[]
24,recent,0,0,3,subtract(unknown)
24,recent,0,0,4,moment(number)
24,recent,0,0,5,format(string)
24,recent,0,0,6,toString()
24,recent,0,0,7,subtract(ObjectConstructor)
24,recent,0,0,8,"subtract(StringConstructor, StringConstructor)"
24,recent,0,0,9,"subtract(NumberConstructor, StringConstructor)"
24,recent,0,1,0,format(string)
24,recent,0,1,1,"subtract(number, string)"
24,recent,0,1,2,"add(number, string)"
24,recent,0,1,3,moment(number)
24,recent,0,1,4,"subtract(string, number)"
24,recent,0,1,5,"add(string, number)"
24,recent,0,1,6,moment()
24,recent,0,1,7,Document.getElementById(string): HTMLElement
24,recent,0,1,8,Date.PrevDay(number)
24,recent,0,1,9,Date.Nextday(number)
24,recent,0,2,0,diff(unknown)
24,recent,0,2,1,duration(unknown)
24,recent,0,2,2,moment(string)
24,recent,0,2,3,"diff(unknown, string)"
24,recent,0,2,4,asHours()
24,recent,0,2,5,format(string)
24,recent,0,2,6,moment()
24,recent,0,2,7,moment(unknown)
24,recent,0,2,8,"moment(string, string)"
24,recent,0,2,9,moment(Date)
24,recent,0,3,0,Date.setMinutes(number): number
24,recent,0,3,1,Date.getMinutes(): number
24,recent,0,3,2,getMinutes()
24,recent,0,3,3,DateConstructor.now(): number
24,recent,0,3,4,getTime()
24,recent,0,3,5,toDate()
24,recent,0,3,6,"subtract(number, string)"
24,recent,0,3,7,moment(Date)
24,recent,0,3,8,now()
24,recent,0,3,9,minus(object)
24,recent,0,4,0,format(string)
24,recent,0,4,1,moment()
24,recent,0,4,2,format(unknown)
24,recent,0,4,3,startOf(string)
24,recent,0,4,4,moment(string)
24,recent,0,4,5,moment(unknown)
24,recent,0,4,6,moment(object)
24,recent,0,4,7,format()
24,recent,0,4,8,locale()
24,recent,0,4,9,Moment()
24,recent,0,5,0,"diff(unknown, string)"
24,recent,0,5,1,$(string)
24,recent,0,5,2,click(function)
24,recent,0,5,3,moment(number[])
24,recent,0,5,4,moment(string)
24,recent,0,6,0,moment()
24,recent,0,6,1,"moment(string, string)"
24,recent,0,6,2,contains(Date)
24,recent,0,6,3,"range(Date, Date)"
24,recent,0,6,4,"isBetween(unknown, unknown, string, string)"
24,recent,0,6,5,"isBetween(unknown, unknown)"
24,recent,0,6,6,isSameOrBefore(number)
24,recent,0,6,7,isSameOrAfter(number)
24,recent,0,6,8,"isBetween(number, number)"
24,recent,0,6,9,"isBetween(unknown, unknown, string, boolean)"
24,recent,0,7,0,endOf(string)
24,recent,0,7,1,moment()
24,recent,0,7,2,"subtract(number, string)"
24,recent,0,7,3,startOf(string)
24,recent,0,7,4,format(string)
24,recent,0,7,5,"updateLocale(string, object)"
24,recent,0,8,0,"add(number, string)"
24,recent,0,8,1,format(string)
24,recent,0,8,2,"moment(unknown, string)"
24,recent,0,8,3,moment()
24,recent,0,8,4,"add(string, number)"
24,recent,0,8,5,moment(unknown)
24,recent,0,8,6,moment(string)
24,recent,0,8,7,add(object)
24,recent,0,8,8,clone()
24,recent,0,8,9,"moment(string, string)"
25,currency,0,0,0,Number.toFixed(number): string
25,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
25,currency,0,0,2,"String.replace(object, string): string"
25,currency,0,0,3,Number.toLocaleString(): string
25,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
25,currency,0,0,5,"number.formatMoney(number, string, string)"
25,currency,0,0,6,number.format(number)
25,currency,0,0,7,NumberConstructor.Number(unknown): number
25,currency,0,0,8,toFixed(number)
25,currency,0,0,9,StringConstructor.String(unknown): string
25,currency,0,1,0,formatMoney(number)
25,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
25,currency,0,3,0,formatTime(string)
25,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
25,currency,0,3,2,Document.getElementById(string): HTMLElement
25,currency,0,3,3,"moment(string, string)"
25,currency,0,3,4,format(string)
25,currency,0,3,5,T[].forEach(function): void
25,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
25,currency,0,4,1,unshift(unknown)
25,currency,0,4,2,"substr(unknown, number)"
25,currency,0,4,3,formatMoney(unknown)
25,currency,0,5,0,"replace(regex, string)"
25,currency,0,5,1,setInputValue(unknown)
25,currency,0,6,0,formatMoney(number)
25,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
25,currency,0,7,1,"String.replace(string | RegExp, string): string"
25,currency,0,7,2,toFixed(number)
25,currency,0,7,3,"String.replace(object, string): string"
25,currency,0,7,4,Math.abs(number): number
25,currency,0,7,5,Math.trunc(number): number
25,currency,0,7,6,Number.toFixed(): string
25,currency,0,7,7,Number.toFixed(number): string
25,currency,0,7,8,"number.replace(regex, string)"
25,currency,0,7,9,"replace(regex, string)"
25,currency,0,8,0,"format(string, string, number): string"
25,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
25,currency,0,8,2,"String.replace(string | RegExp, string): string"
25,currency,0,8,3,String.trim(): string
25,find,0,0,0,T[].filter(function): T[]
25,find,0,0,1,"search(string, object[])"
25,find,0,0,2,T[].find(function): T
25,find,0,0,3,find(function)
25,find,0,0,4,indexOf(unknown)
25,find,0,0,5,"fill(string, unknown, number)"
25,find,0,0,6,findIndex(function)
25,find,0,0,7,function.search(string): object
25,find,0,0,8,forEach(function)
25,find,0,0,9,map(function)
25,find,0,1,0,T[].indexOf(T): number
25,find,0,1,1,T[].includes(T): boolean
25,find,0,1,2,"inArray(string, string[])"
25,find,0,1,3,includes(string)
25,find,0,1,4,"inArray(string, unknown)"
25,find,0,1,5,T[].some(function): boolean
25,find,0,1,6,T[].find(function): T
25,find,0,2,0,T[].some(function): boolean
25,find,0,2,1,T[].filter(function): T[]
25,find,0,2,2,T[].findIndex(function): number
25,find,0,2,3,T[].find(function): T
25,find,0,2,4,find(function)
25,find,0,2,5,T[].forEach(function): void
25,find,0,3,0,T[].find(function): T
25,find,0,3,1,T[].filter(function): T[]
25,find,0,3,2,find(function)
25,find,0,3,3,"filterValue(object[], string, number)"
25,find,0,3,4,"filteredArray(object[], string, number): any[]"
25,find,0,3,5,"findWhere(unknown, object)"
25,find,0,3,6,T[].findIndex(function): number
25,find,0,3,7,some(function)
25,find,0,3,8,"select(unknown, function)"
25,find,0,3,9,"reduce(function, null)"
25,find,0,4,0,"T[].reduce(function, U): U"
25,find,0,4,1,filter(function)
25,find,0,4,2,"grep(unknown, function)"
25,find,0,4,3,T[].find(function): T
25,find,0,4,4,function.(): function
25,find,0,4,5,T[].map(function): U[]
25,find,0,4,6,ArrayConstructor.Array(number): any[]
25,find,0,4,7,map(function[])
25,find,0,4,8,"each(unknown, function)"
25,find,0,4,9,map(function)
25,find,0,5,0,T[].filter(function): T[]
25,find,0,5,1,filter(function)
25,find,0,6,0,T[].includes(T): boolean
25,find,0,6,1,T[].indexOf(T): number
25,find,0,6,2,T[].find(function): T
25,find,0,6,3,T[].some(function): boolean
25,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
25,find,0,6,5,T[].findIndex(function): number
25,find,0,6,6,number[].contains(number)
25,find,0,6,7,number[].contains(string)
25,find,0,6,8,indexOf(string)
25,find,0,6,9,indexOf(number)
25,recent,0,0,0,"between(unknown, unknown)"
25,recent,0,0,1,atZone(unknown)
25,recent,0,0,2,of(string)
25,recent,0,0,3,ofPattern(string)
25,recent,0,0,4,println(unknown)
25,recent,0,0,5,toHours()
25,recent,0,0,6,"parse(string, unknown)"
25,recent,0,0,7,"of(number, number, number, number, number, number, number, unknown)"
25,recent,0,0,8,println(string)
25,recent,0,0,9,"parse(unknown, unknown)"
25,recent,0,1,0,Test()
25,recent,0,1,1,"$(number, string)"
25,recent,0,1,2,$(number)
25,recent,0,2,0,parse(string)
25,recent,0,3,0,ToString(string)
25,recent,0,3,1,AddMinutes(number)
25,recent,0,3,2,Parse(string)
25,recent,0,3,3,Subtract(unknown)
25,recent,0,4,0,"cast(unknown, unknown, unknown, unknown)"
25,recent,0,4,1,"to_date(unknown, string)"
25,recent,0,5,0,println(string)
25,recent,0,5,1,"main(unknown, unknown)"
25,recent,0,5,2,getTime()
25,recent,0,5,3,getStandardMinutes()
25,recent,0,5,4,getStandardHours()
25,recent,0,5,5,"printf(string, unknown, unknown)"
25,recent,0,5,6,parseDateTime(string)
25,recent,0,5,7,forPattern(string)
25,recent,0,6,0,getTime()
25,recent,0,6,1,toHours(unknown)
25,recent,0,6,2,toMinutes(unknown)
25,recent,0,6,3,toSeconds(unknown)
25,recent,0,6,4,Math.abs(number): number
25,recent,0,6,5,parse(string)
25,recent,0,6,6,(number)
25,recent,0,6,7,println(string)
25,recent,0,6,8,format(Date)
25,recent,0,6,9,"formatPeriod(unknown, unknown)"
25,recent,0,7,0,subtract(object)
25,recent,0,7,1,moment(string)
25,recent,0,7,2,String.split(string | RegExp): string[]
25,recent,0,7,3,subtract(unknown)
25,recent,0,7,4,moment(number)
25,recent,0,7,5,format(string)
25,recent,0,7,6,toString()
25,recent,0,7,7,subtract(ObjectConstructor)
25,recent,0,7,8,"subtract(StringConstructor, StringConstructor)"
25,recent,0,7,9,"subtract(NumberConstructor, StringConstructor)"
25,recent,0,9,0,difference(unknown)
25,recent,0,9,1,DateFormat(string)
25,recent,0,9,2,parse(string)
25,recent,0,9,3,main()
25,recent,0,9,4,toString()
25,recent,0,9,5,print(unknown): void
25,recent,0,9,6,"_calcTimeOfDay(unknown, unknown, unknown, unknown)"
25,recent,0,9,7,print(string): void
25,recent,1,0,0,"TIMESTAMP_SUB(unknown, unknown, number, unknown)"
25,recent,1,0,1,"TIMESTAMP_SUB(unknown, string, unknown, number, unknown)"
25,recent,1,1,0,Date.toLocaleString(): string
25,recent,1,1,1,Document.getElementById(string): HTMLElement
25,recent,1,1,2,Date.getHours(): number
25,recent,1,1,3,Date.setHours(number): number
25,recent,1,1,4,format()
25,recent,1,1,5,"subtract(number, string)"
25,recent,1,1,6,moment(unknown)
25,recent,1,2,0,"sub(Date, object)"
25,recent,1,2,1,"subtract(number, string)"
25,recent,1,2,2,format()
25,recent,1,2,3,dayjs()
25,recent,1,3,0,"TimeSerial(number, number, number)"
25,recent,1,3,1,Now()
25,recent,1,3,2,substractDates()
25,recent,1,3,3,test()
25,recent,1,3,4,steps(number)
25,recent,1,3,5,"Text(unknown, string)"
25,recent,1,3,6,"DateAdd(string, number, unknown)"
25,recent,1,4,0,hours(number)
25,recent,1,4,1,print(unknown): void
25,recent,1,4,2,"c(string, string, string, string)"
25,recent,1,4,3,ymd_hms(unknown)
25,recent,1,4,4,frame(unknown)
25,recent,1,4,5,library(unknown)
25,recent,1,5,0,Date.getTime(): number
25,recent,1,5,1,"substring(number, number)"
25,recent,1,6,0,"between(unknown, unknown)"
25,recent,1,6,1,atZone(unknown)
25,recent,1,6,2,of(string)
25,recent,1,6,3,ofPattern(string)
25,recent,1,6,4,println(unknown)
25,recent,1,6,5,toHours()
25,recent,1,6,6,"parse(string, unknown)"
25,recent,1,6,7,"of(number, number, number, number, number, number, number, unknown)"
25,recent,1,6,8,println(string)
25,recent,1,6,9,"parse(unknown, unknown)"
25,recent,1,7,0,subtract(object)
25,recent,1,7,1,moment(string)
25,recent,1,7,2,String.split(string | RegExp): string[]
25,recent,1,7,3,subtract(unknown)
25,recent,1,7,4,moment(number)
25,recent,1,7,5,format(string)
25,recent,1,7,6,toString()
25,recent,1,7,7,subtract(ObjectConstructor)
25,recent,1,7,8,"subtract(StringConstructor, StringConstructor)"
25,recent,1,7,9,"subtract(NumberConstructor, StringConstructor)"
25,recent,1,8,0,astype(unknown)
25,recent,1,8,1,normalize()
25,recent,1,8,2,add(function)
25,recent,1,8,3,sub(unknown)
25,recent,1,8,4,add(unknown)
25,recent,1,8,5,"DateOffset(number, number, number)"
25,recent,1,8,6,floor(string)
25,recent,1,8,7,to_timedelta(unknown)
25,recent,1,8,8,DataFrame(object)
25,recent,1,8,9,to_datetime(unknown)
25,recent,2,0,0,endOf(string)
25,recent,2,0,1,moment(string)
25,recent,2,0,2,format()
25,recent,2,0,3,moment(Date)
25,recent,2,0,4,toString()
25,recent,2,0,5,milliseconds(number)
25,recent,2,0,6,second(number)
25,recent,2,0,7,minute(number)
25,recent,2,0,8,hour(number)
25,recent,2,2,0,date(number)
25,recent,2,2,1,"subtract(number, string)"
25,recent,2,2,2,moment()
25,recent,2,2,3,"Date.setMonth(number, number): number"
25,recent,2,2,4,Date.getMonth(): number
25,recent,2,2,5,Date.toString(): string
25,recent,2,3,0,forEach(function)
25,recent,2,3,1,moment()
25,recent,2,3,2,format()
25,recent,2,3,3,invalid()
25,recent,2,3,4,isValid()
25,recent,2,4,0,utc(unknown)
25,recent,2,4,1,format(string)
25,recent,2,4,2,Date.toISOString(): string
25,recent,2,4,3,"Date.toLocaleString(Intl.LocalesArgument, Intl.DateTimeFormatOptions): string"
25,recent,2,5,0,moment()
25,recent,2,5,1,utc(Date)
25,recent,2,6,0,moment()
25,recent,2,6,1,startOf(string)
25,recent,2,6,2,day(number)
25,recent,2,6,3,"add(number, string)"
25,recent,2,7,0,moment()
25,recent,2,7,1,startOf(string)
25,recent,2,7,2,toString()
25,recent,2,8,0,"moment(string, string)"
25,recent,2,8,1,format(string)
25,recent,2,9,0,"add(number, string)"
25,recent,2,9,1,format(string)
25,recent,2,9,2,Date.toString(): string
25,recent,2,9,3,Date.setFullYear(number): number
25,recent,2,9,4,Date.getFullYear(): number
25,recent,2,9,5,clone()
25,recent,2,9,6,"moment(string, string)"
25,recent,3,0,0,subtract(object)
25,recent,3,0,1,moment(string)
25,recent,3,0,2,String.split(string | RegExp): string[]
25,recent,3,0,3,subtract(unknown)
25,recent,3,0,4,moment(number)
25,recent,3,0,5,format(string)
25,recent,3,0,6,toString()
25,recent,3,0,7,subtract(ObjectConstructor)
25,recent,3,0,8,"subtract(StringConstructor, StringConstructor)"
25,recent,3,0,9,"subtract(NumberConstructor, StringConstructor)"
25,recent,3,1,0,"subtract(unknown, string)"
25,recent,3,1,1,input(string)
25,recent,3,1,2,moment()
25,recent,3,1,3,subtract(unknown)
25,recent,3,1,4,format(string)
25,recent,3,2,0,utc(number)
25,recent,3,2,1,format(string)
25,recent,3,2,2,"subtract(number, string)"
25,recent,3,2,3,diff(unknown)
25,recent,3,2,4,duration(unknown)
25,recent,3,2,5,"add(number, string)"
25,recent,3,2,6,isBefore(unknown)
25,recent,3,2,7,"utc(unknown, string)"
25,recent,3,4,0,format(string)
25,recent,3,4,1,"moment(string, string)"
25,recent,3,4,2,moment(unknown)
25,recent,3,4,3,subtract(unknown)
25,recent,3,4,4,"diff(unknown, string)"
25,recent,3,4,5,"add(unknown, string)"
25,recent,3,4,6,"moment(any[], string)"
25,recent,3,4,7,diff(unknown)
25,recent,3,5,0,moment(unknown)
25,recent,3,5,1,"add(number, string)"
25,recent,3,5,2,"subtract(StringConstructor, NumberConstructor)"
25,recent,3,5,3,moment()
25,recent,3,5,4,"subtract(NumberConstructor, StringConstructor)"
25,recent,3,5,5,"subtract(StringConstructor, StringConstructor)"
25,recent,3,5,6,subtract(unknown)
25,recent,3,5,7,subtract(ObjectConstructor)
25,recent,3,5,8,String.split(string | RegExp): string[]
25,recent,3,5,9,subtract(object)
25,recent,3,6,0,subtract(unknown)
25,recent,3,6,1,format()
25,recent,3,6,2,duration(object)
25,recent,3,6,3,"moment(string, string)"
25,recent,3,6,4,"subtract(number, string)"
25,recent,3,7,0,diff(unknown)
25,recent,3,7,1,valueOf()
25,recent,3,7,2,"moment(string, string)"
25,recent,3,7,3,"moment(unknown, string)"
25,recent,3,8,0,Date.getTime(): number
25,recent,3,9,0,Number.toString(): string
25,recent,3,9,1,moment(string)
25,recent,3,9,2,unix()
25,recent,3,9,3,toString()
25,recent,3,9,4,year()
25,recent,3,9,5,"subtract(number, string)"
25,recent,3,9,6,moment(unknown)
25,recent,3,9,7,asDays()
25,recent,3,9,8,diff(unknown)
25,recent,3,9,9,duration(unknown)
26,sort,0,0,0,T[].sort(function): this
26,sort,0,0,1,sort(function)
26,sort,0,0,2,"sortBy(unknown, string)"
26,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
26,sort,0,0,4,"function.sort_by(string, boolean, function): function"
26,sort,0,0,5,sort(typeof mycomparator)
26,sort,0,0,6,function[].(): function[]
26,sort,0,0,7,"sortBy(any[], object): any[]"
26,sort,0,0,8,reverse()
26,sort,0,0,9,T[].sort(): this
26,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
26,sort,0,1,1,"function[].sortBy(object[], string): any[]"
26,sort,0,2,0,sort(function)
26,sort,0,2,1,T[].sort(function): this
26,sort,0,2,2,T[].push(T[]): number
26,sort,0,3,0,ObjectConstructor.keys(object): string[]
26,sort,0,3,1,T[].sort(function): this
26,sort,0,3,2,sort(typeof compare)
26,sort,0,4,0,T[].reverse(): T[]
26,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
26,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
26,sort,0,4,3,ObjectConstructor.keys(object): string[]
26,sort,0,4,4,T[].sort(): this
26,sort,0,4,5,T[].forEach(function): void
26,sort,0,5,0,sort(function)
26,sort,0,5,1,T[].sort(function): this
26,sort,0,5,2,"object[].sortBy(string, string)"
26,sort,0,5,3,sortBy(string)
26,sort,0,5,4,reverse(unknown)
26,sort,0,5,5,sort(typeof compare)
26,sort,0,5,6,dynamicSort(string): function
26,sort,0,5,7,"dynamicSortMultiple(string, string): function"
26,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
26,sort,0,5,9,"sortBy(object[], string)"
26,sort,0,6,0,T[].sort(function): this
26,sort,0,7,0,T[].sort(function): this
26,sort,0,8,0,T[].sort(function): this
26,sort,0,8,1,sort(function)
26,sort,0,9,0,sort(function)
26,sort,0,9,1,T[].sort(function): this
26,sort,0,9,2,dynamicSort(string): function
26,clone,0,0,0,JSON.parse(string)
26,clone,0,0,1,JSON.stringify(unknown): string
26,clone,0,0,2,T[].slice(): T[]
26,clone,0,0,3,slice()
26,clone,0,0,4,slice(number)
26,clone,0,0,5,JSON.stringify(function): string
26,clone,0,0,6,map(function)
26,clone,0,0,7,T[].push(T[]): number
26,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
26,clone,0,0,9,clone(function[]): void
26,clone,0,1,0,JSON.stringify(function): string
26,clone,0,1,1,JSON.parse(string)
26,clone,0,1,2,T[].slice(number): T[]
26,clone,0,1,3,T[].map(function): U[]
26,clone,0,1,4,"extend(boolean, undefined[], function)"
26,clone,0,1,5,slice(number)
26,clone,0,1,6,T[].slice(): T[]
26,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
26,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
26,clone,0,1,9,T[].push(T[]): number
26,clone,0,2,0,T[].concat(function): T[]
26,clone,0,2,1,undefined[].add(string)
26,clone,0,2,2,add(string)
26,clone,0,2,3,T[].slice(): T[]
26,clone,0,2,4,T[].push(T[]): number
26,clone,0,3,0,T[].map(function): U[]
26,clone,0,3,1,T[].forEach(function): void
26,clone,0,3,2,map(function)
26,clone,0,3,3,forEach(function)
26,clone,0,3,4,slice()
26,clone,0,3,5,JSON.parse(string)
26,clone,0,3,6,JSON.stringify(unknown): string
26,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
26,clone,0,5,0,map(function)
26,clone,0,5,1,"getGenericItems(unknown, unknown)"
26,clone,0,5,2,T[].forEach(function): void
26,clone,0,5,3,cloneDeep(unknown)
26,clone,0,5,4,JSON.parse(string)
26,clone,0,5,5,JSON.stringify(unknown): string
26,clone,0,5,6,slice()
26,clone,0,5,7,T[].map(function): U[]
26,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
26,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
26,clone,0,6,0,bestCopyEver(object)
26,clone,0,6,1,iterationCopy(object): object
26,clone,0,6,2,JSON.stringify(unknown): string
26,clone,0,6,3,JSON.parse(string)
26,clone,0,7,0,T[].map(function): U[]
26,clone,0,8,0,JSON.stringify(unknown): string
26,clone,0,8,1,JSON.parse(string)
26,clone,0,8,2,map(function)
26,clone,0,8,3,structuredClone(unknown)
26,clone,0,8,4,slice(number)
26,clone,0,8,5,"map(unknown, function)"
26,clone,0,8,6,evalJSON(unknown)
26,clone,0,8,7,toJSON(unknown)
26,clone,0,8,8,JSON.stringify(object): string
26,clone,0,8,9,cloneDeep(function)
26,clone,0,9,0,JSON.stringify(number[][]): string
26,clone,0,9,1,JSON.parse(string)
26,clone,1,0,0,JSON.stringify(number[][]): string
26,clone,1,0,1,JSON.parse(string)
26,clone,1,1,0,JSON.stringify(unknown): string
26,clone,1,1,1,JSON.parse(string)
26,clone,1,1,2,map(function)
26,clone,1,1,3,structuredClone(unknown)
26,clone,1,1,4,slice(number)
26,clone,1,1,5,"map(unknown, function)"
26,clone,1,1,6,evalJSON(unknown)
26,clone,1,1,7,toJSON(unknown)
26,clone,1,1,8,JSON.stringify(object): string
26,clone,1,1,9,cloneDeep(function)
26,clone,1,2,0,JSON.stringify(unknown): string
26,clone,1,2,1,JSON.parse(string)
26,clone,1,2,2,map(function)
26,clone,1,2,3,structuredClone(unknown)
26,clone,1,2,4,slice(number)
26,clone,1,2,5,"map(unknown, function)"
26,clone,1,2,6,evalJSON(unknown)
26,clone,1,2,7,toJSON(unknown)
26,clone,1,2,8,JSON.stringify(object): string
26,clone,1,2,9,cloneDeep(function)
26,clone,1,3,0,JSON.stringify(object[]): string
26,clone,1,3,1,JSON.parse(string)
26,clone,1,3,2,T[].map(function): U[]
26,clone,1,4,0,JSON.stringify(object[]): string
26,clone,1,4,1,JSON.parse(string)
26,clone,1,4,2,T[].map(function): U[]
26,clone,1,5,0,JSON.stringify(function): string
26,clone,1,5,1,JSON.parse(string)
26,clone,1,5,2,T[].slice(number): T[]
26,clone,1,5,3,T[].map(function): U[]
26,clone,1,5,4,"extend(boolean, undefined[], function)"
26,clone,1,5,5,slice(number)
26,clone,1,5,6,T[].slice(): T[]
26,clone,1,5,7,T[].concat(ConcatArray<T>[]): T[]
26,clone,1,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
26,clone,1,5,9,T[].push(T[]): number
26,clone,1,6,0,JSON.stringify(function): string
26,clone,1,6,1,JSON.parse(string)
26,clone,1,6,2,T[].slice(number): T[]
26,clone,1,6,3,T[].map(function): U[]
26,clone,1,6,4,"extend(boolean, undefined[], function)"
26,clone,1,6,5,slice(number)
26,clone,1,6,6,T[].slice(): T[]
26,clone,1,6,7,T[].concat(ConcatArray<T>[]): T[]
26,clone,1,6,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
26,clone,1,6,9,T[].push(T[]): number
26,clone,1,7,0,bestCopyEver(object)
26,clone,1,7,1,iterationCopy(object): object
26,clone,1,7,2,JSON.stringify(unknown): string
26,clone,1,7,3,JSON.parse(string)
26,clone,1,8,0,bestCopyEver(object)
26,clone,1,8,1,iterationCopy(object): object
26,clone,1,8,2,JSON.stringify(unknown): string
26,clone,1,8,3,JSON.parse(string)
26,clone,1,9,0,cloneDeep(object[])
26,clone,1,9,1,JSON.parse(string)
26,clone,1,9,2,JSON.stringify(object[]): string
26,serve,0,0,0,static(string)
26,serve,0,0,1,use(unknown)
26,serve,0,0,2,express()
26,serve,0,0,3,listen(number)
26,serve,0,0,4,static(unknown)
26,serve,0,0,5,"join(unknown, string)"
26,serve,0,0,6,"use(string, unknown)"
26,serve,0,0,7,"get(string, function)"
26,serve,0,0,8,configure(function)
26,serve,0,0,9,"listen(number, function)"
26,serve,0,1,0,"get(string, function)"
26,serve,0,1,1,use(unknown)
26,serve,0,1,2,static(unknown)
26,serve,0,1,3,"join(unknown, string)"
26,serve,0,2,0,static(unknown)
26,serve,0,2,1,"use(string, unknown)"
26,serve,0,2,2,"use(string, function)"
26,serve,0,2,3,express()
26,serve,0,2,4,"join(unknown, string)"
26,serve,0,2,5,"get(string, function)"
26,serve,0,2,6,listen(number)
26,serve,0,3,0,static(string)
26,serve,0,3,1,use(unknown)
26,serve,0,5,0,static(string)
26,serve,0,5,1,use(unknown)
26,serve,0,5,2,"use(string, unknown)"
26,serve,0,5,3,static(unknown)
26,serve,0,5,4,"join(unknown, string)"
26,serve,0,5,5,express()
26,serve,0,5,6,"resolve(unknown, string)"
26,serve,0,5,7,cwd()
26,serve,0,5,8,"get(string, function)"
26,serve,0,5,9,"link(string, string)"
26,serve,0,7,0,"join(unknown, string)"
26,serve,0,7,1,static(unknown)
26,serve,0,7,2,use(unknown)
26,serve,0,7,3,"use(string, unknown)"
26,serve,0,8,0,"use(string, unknown)"
26,serve,0,8,1,"use(string, function)"
26,serve,0,8,2,use(unknown)
26,serve,0,8,3,"join(unknown, string, string, string)"
26,serve,0,8,4,static(unknown)
26,serve,0,9,0,static(string)
26,serve,0,9,1,use(unknown)
26,serve,0,9,2,"use(string, unknown)"
26,serve,1,0,0,static(string)
26,serve,1,0,1,use(unknown)
26,serve,1,0,2,express()
26,serve,1,0,3,listen(number)
26,serve,1,0,4,static(unknown)
26,serve,1,0,5,"join(unknown, string)"
26,serve,1,0,6,"use(string, unknown)"
26,serve,1,0,7,"get(string, function)"
26,serve,1,0,8,configure(function)
26,serve,1,0,9,"listen(number, function)"
26,serve,1,1,0,"get(string, function)"
26,serve,1,1,1,use(unknown)
26,serve,1,1,2,static(unknown)
26,serve,1,1,3,"join(unknown, string)"
26,serve,1,2,0,static(unknown)
26,serve,1,2,1,"use(string, unknown)"
26,serve,1,2,2,"use(string, function)"
26,serve,1,2,3,express()
26,serve,1,2,4,"join(unknown, string)"
26,serve,1,2,5,"get(string, function)"
26,serve,1,2,6,listen(number)
26,serve,1,3,0,static(string)
26,serve,1,3,1,use(unknown)
26,serve,1,5,0,static(string)
26,serve,1,5,1,use(unknown)
26,serve,1,5,2,"use(string, unknown)"
26,serve,1,5,3,static(unknown)
26,serve,1,5,4,"join(unknown, string)"
26,serve,1,5,5,express()
26,serve,1,5,6,"resolve(unknown, string)"
26,serve,1,5,7,cwd()
26,serve,1,5,8,"get(string, function)"
26,serve,1,5,9,"link(string, string)"
26,serve,1,7,0,"join(unknown, string)"
26,serve,1,7,1,static(unknown)
26,serve,1,7,2,use(unknown)
26,serve,1,7,3,"use(string, unknown)"
26,serve,1,8,0,"use(string, unknown)"
26,serve,1,8,1,"use(string, function)"
26,serve,1,8,2,use(unknown)
26,serve,1,8,3,"join(unknown, string, string, string)"
26,serve,1,8,4,static(unknown)
26,serve,1,9,0,static(string)
26,serve,1,9,1,use(unknown)
26,serve,1,9,2,"use(string, unknown)"
26,serve,2,0,0,static(string)
26,serve,2,0,1,use(unknown)
26,serve,2,0,2,express()
26,serve,2,0,3,listen(number)
26,serve,2,0,4,static(unknown)
26,serve,2,0,5,"join(unknown, string)"
26,serve,2,0,6,"use(string, unknown)"
26,serve,2,0,7,"get(string, function)"
26,serve,2,0,8,configure(function)
26,serve,2,0,9,"listen(number, function)"
26,serve,2,1,0,static(string)
26,serve,2,1,1,use(unknown)
26,serve,2,1,2,"use(string, unknown)"
26,serve,2,1,3,static(unknown)
26,serve,2,1,4,"join(unknown, string)"
26,serve,2,1,5,express()
26,serve,2,1,6,"resolve(unknown, string)"
26,serve,2,1,7,cwd()
26,serve,2,1,8,"get(string, function)"
26,serve,2,1,9,"link(string, string)"
26,serve,2,2,0,"join(unknown, string)"
26,serve,2,2,1,static(unknown)
26,serve,2,2,2,use(unknown)
26,serve,2,2,3,"use(string, unknown)"
26,serve,2,3,0,"get(string, function)"
26,serve,2,4,0,static(string)
26,serve,2,4,1,"use(string, unknown)"
26,serve,2,4,2,"join(unknown, string)"
26,serve,2,4,3,static(unknown)
26,serve,2,4,4,use(unknown)
26,serve,2,5,0,"use(string, unknown)"
26,serve,2,5,1,static(string)
26,serve,2,5,2,"static(unknown, object)"
26,serve,2,5,3,express()
26,serve,2,5,4,"staticFile(string, object)"
26,serve,2,5,5,"listen(number, function)"
26,serve,2,5,6,pipe(unknown)
26,serve,2,5,7,createReadStream(unknown)
26,serve,2,6,0,"get(string, function)"
26,serve,2,6,1,static(string)
26,serve,2,6,2,"use(string, unknown)"
26,serve,2,6,3,use(unknown)
26,serve,2,6,4,express()
26,serve,2,6,5,"use(string, function)"
26,serve,2,8,0,"post(string, function)"
26,serve,2,8,1,"join(unknown, string)"
26,serve,2,8,2,"resolve(unknown, string)"
26,serve,2,8,3,express()
26,serve,2,8,4,use(unknown)
26,serve,2,8,5,static(string)
26,serve,2,8,6,"all(string, function)"
26,serve,2,9,0,existsSync(unknown)
26,serve,2,9,1,"post(string, function)"
26,serve,2,9,2,use(unknown)
26,serve,2,9,3,static(string)
26,serve,2,9,4,"sendfile(string, object)"
26,serve,2,9,5,dirname(unknown)
26,serve,2,9,6,"use(string, function)"
27,currency,0,0,0,Number.toFixed(number): string
27,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
27,currency,0,0,2,"String.replace(object, string): string"
27,currency,0,0,3,Number.toLocaleString(): string
27,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
27,currency,0,0,5,"number.formatMoney(number, string, string)"
27,currency,0,0,6,number.format(number)
27,currency,0,0,7,NumberConstructor.Number(unknown): number
27,currency,0,0,8,toFixed(number)
27,currency,0,0,9,StringConstructor.String(unknown): string
27,currency,0,1,0,formatMoney(number)
27,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
27,currency,0,3,0,formatTime(string)
27,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
27,currency,0,3,2,Document.getElementById(string): HTMLElement
27,currency,0,3,3,"moment(string, string)"
27,currency,0,3,4,format(string)
27,currency,0,3,5,T[].forEach(function): void
27,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
27,currency,0,4,1,unshift(unknown)
27,currency,0,4,2,"substr(unknown, number)"
27,currency,0,4,3,formatMoney(unknown)
27,currency,0,5,0,"replace(regex, string)"
27,currency,0,5,1,setInputValue(unknown)
27,currency,0,6,0,formatMoney(number)
27,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
27,currency,0,7,1,"String.replace(string | RegExp, string): string"
27,currency,0,7,2,toFixed(number)
27,currency,0,7,3,"String.replace(object, string): string"
27,currency,0,7,4,Math.abs(number): number
27,currency,0,7,5,Math.trunc(number): number
27,currency,0,7,6,Number.toFixed(): string
27,currency,0,7,7,Number.toFixed(number): string
27,currency,0,7,8,"number.replace(regex, string)"
27,currency,0,7,9,"replace(regex, string)"
27,currency,0,8,0,"format(string, string, number): string"
27,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
27,currency,0,8,2,"String.replace(string | RegExp, string): string"
27,currency,0,8,3,String.trim(): string
27,find,0,0,0,T[].filter(function): T[]
27,find,0,0,1,"search(string, object[])"
27,find,0,0,2,T[].find(function): T
27,find,0,0,3,find(function)
27,find,0,0,4,indexOf(unknown)
27,find,0,0,5,"fill(string, unknown, number)"
27,find,0,0,6,findIndex(function)
27,find,0,0,7,function.search(string): object
27,find,0,0,8,forEach(function)
27,find,0,0,9,map(function)
27,find,0,1,0,T[].indexOf(T): number
27,find,0,1,1,T[].includes(T): boolean
27,find,0,1,2,"inArray(string, string[])"
27,find,0,1,3,includes(string)
27,find,0,1,4,"inArray(string, unknown)"
27,find,0,1,5,T[].some(function): boolean
27,find,0,1,6,T[].find(function): T
27,find,0,2,0,T[].some(function): boolean
27,find,0,2,1,T[].filter(function): T[]
27,find,0,2,2,T[].findIndex(function): number
27,find,0,2,3,T[].find(function): T
27,find,0,2,4,find(function)
27,find,0,2,5,T[].forEach(function): void
27,find,0,3,0,T[].find(function): T
27,find,0,3,1,T[].filter(function): T[]
27,find,0,3,2,find(function)
27,find,0,3,3,"filterValue(object[], string, number)"
27,find,0,3,4,"filteredArray(object[], string, number): any[]"
27,find,0,3,5,"findWhere(unknown, object)"
27,find,0,3,6,T[].findIndex(function): number
27,find,0,3,7,some(function)
27,find,0,3,8,"select(unknown, function)"
27,find,0,3,9,"reduce(function, null)"
27,find,0,4,0,"T[].reduce(function, U): U"
27,find,0,4,1,filter(function)
27,find,0,4,2,"grep(unknown, function)"
27,find,0,4,3,T[].find(function): T
27,find,0,4,4,function.(): function
27,find,0,4,5,T[].map(function): U[]
27,find,0,4,6,ArrayConstructor.Array(number): any[]
27,find,0,4,7,map(function[])
27,find,0,4,8,"each(unknown, function)"
27,find,0,4,9,map(function)
27,find,0,5,0,T[].filter(function): T[]
27,find,0,5,1,filter(function)
27,find,0,6,0,T[].includes(T): boolean
27,find,0,6,1,T[].indexOf(T): number
27,find,0,6,2,T[].find(function): T
27,find,0,6,3,T[].some(function): boolean
27,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
27,find,0,6,5,T[].findIndex(function): number
27,find,0,6,6,number[].contains(number)
27,find,0,6,7,number[].contains(string)
27,find,0,6,8,indexOf(string)
27,find,0,6,9,indexOf(number)
27,recent,0,0,0,"duration(number, string)"
27,recent,0,0,1,JSON.stringify(object): string
27,recent,0,0,2,duration()
27,recent,0,0,3,toJSON()
27,recent,0,1,0,utc(unknown)
27,recent,0,1,1,typeof $ctrl.getData()
27,recent,0,1,2,expect(unknown)
27,recent,0,1,3,toEqual(object[])
27,recent,0,1,4,unix()
27,recent,0,1,5,utc(string)
27,recent,0,2,0,format(string)
27,recent,0,2,1,utc(unknown)
27,recent,0,2,2,"duration(number, string)"
27,recent,0,2,3,asMilliseconds()
27,recent,0,2,4,moment(unknown)
27,recent,0,2,5,minutes()
27,recent,0,2,6,seconds()
27,recent,0,2,7,asHours()
27,recent,0,2,8,Math.floor(number): number
27,recent,0,2,9,"duration(unknown, string)"
27,recent,0,3,0,locale(string)
27,recent,0,3,1,format(string)
27,recent,0,3,2,moment(object)
27,recent,0,3,3,"updateLocale(string, object)"
27,recent,0,4,0,T[].forEach(function): void
27,recent,0,5,0,diff(unknown)
27,recent,0,5,1,duration(unknown)
27,recent,0,5,2,moment(string)
27,recent,0,5,3,"diff(unknown, string)"
27,recent,0,5,4,asHours()
27,recent,0,5,5,format(string)
27,recent,0,5,6,moment()
27,recent,0,5,7,moment(unknown)
27,recent,0,5,8,"moment(string, string)"
27,recent,0,5,9,moment(Date)
27,recent,0,6,0,"describe(string, function)"
27,recent,0,7,0,expect(unknown)
27,recent,0,7,1,equal(Date)
27,recent,0,7,2,freeze(Date)
27,recent,0,8,0,"mock(string, function)"
27,recent,0,8,1,"describe(string, function)"
27,recent,0,8,2,"test(string, function)"
27,recent,0,8,3,moment()
27,recent,0,8,4,format()
27,recent,0,8,5,"correctly(number, unknown)"
27,recent,0,8,6,mock(string)
27,recent,0,8,7,"it(string, function)"
27,recent,0,9,0,"object.NumberFormat(string | string[], Intl.NumberFormatOptions): Intl.NumberFormat"
27,recent,0,9,1,Intl.NumberFormat.format(number | bigint): string
27,recent,1,0,0,subtract(object)
27,recent,1,0,1,moment(string)
27,recent,1,0,2,String.split(string | RegExp): string[]
27,recent,1,0,3,subtract(unknown)
27,recent,1,0,4,moment(number)
27,recent,1,0,5,format(string)
27,recent,1,0,6,toString()
27,recent,1,0,7,subtract(ObjectConstructor)
27,recent,1,0,8,"subtract(StringConstructor, StringConstructor)"
27,recent,1,0,9,"subtract(NumberConstructor, StringConstructor)"
27,recent,1,1,0,format(string)
27,recent,1,1,1,"subtract(number, string)"
27,recent,1,1,2,"add(number, string)"
27,recent,1,1,3,moment(number)
27,recent,1,1,4,"subtract(string, number)"
27,recent,1,1,5,"add(string, number)"
27,recent,1,1,6,moment()
27,recent,1,1,7,Document.getElementById(string): HTMLElement
27,recent,1,1,8,Date.PrevDay(number)
27,recent,1,1,9,Date.Nextday(number)
27,recent,1,2,0,Number.toString(): string
27,recent,1,2,1,moment(string)
27,recent,1,2,2,unix()
27,recent,1,2,3,toString()
27,recent,1,2,4,year()
27,recent,1,2,5,"subtract(number, string)"
27,recent,1,2,6,moment(unknown)
27,recent,1,2,7,asDays()
27,recent,1,2,8,diff(unknown)
27,recent,1,2,9,duration(unknown)
27,recent,1,3,0,setDate(unknown): void
27,recent,1,3,1,now()
27,recent,1,3,2,moment(unknown)
27,recent,1,3,3,"add(number, string)"
27,recent,1,4,0,"subtract(string, number)"
27,recent,1,4,1,moment()
27,recent,1,4,2,"subtract(number, string)"
27,recent,1,4,3,format(string)
27,recent,1,5,0,utc(number)
27,recent,1,5,1,format(string)
27,recent,1,5,2,"subtract(number, string)"
27,recent,1,5,3,diff(unknown)
27,recent,1,5,4,duration(unknown)
27,recent,1,5,5,"add(number, string)"
27,recent,1,5,6,isBefore(unknown)
27,recent,1,5,7,"utc(unknown, string)"
27,recent,1,6,0,"subtract(number, string)"
27,recent,1,7,0,"subtract(unknown, string)"
27,recent,1,7,1,input(string)
27,recent,1,7,2,moment()
27,recent,1,7,3,subtract(unknown)
27,recent,1,7,4,format(string)
27,recent,1,8,0,"subtract(number, string)"
27,recent,1,8,1,format(string)
27,recent,1,8,2,moment()
27,recent,1,8,3,toDate()
27,recent,1,8,4,moment(Date)
27,recent,1,8,5,duration(object)
27,recent,1,8,6,subtract(unknown)
27,recent,1,8,7,"subtract(string, number)"
27,recent,1,8,8,format()
27,recent,1,8,9,"moment(string, string)"
27,recent,1,9,0,diff(unknown)
27,recent,1,9,1,valueOf()
27,recent,1,9,2,"moment(string, string)"
27,recent,1,9,3,"moment(unknown, string)"
28,sort,0,0,0,T[].sort(function): this
28,sort,0,0,1,sort(function)
28,sort,0,0,2,"sortBy(unknown, string)"
28,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
28,sort,0,0,4,"function.sort_by(string, boolean, function): function"
28,sort,0,0,5,sort(typeof mycomparator)
28,sort,0,0,6,function[].(): function[]
28,sort,0,0,7,"sortBy(any[], object): any[]"
28,sort,0,0,8,reverse()
28,sort,0,0,9,T[].sort(): this
28,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
28,sort,0,1,1,"function[].sortBy(object[], string): any[]"
28,sort,0,2,0,sort(function)
28,sort,0,2,1,T[].sort(function): this
28,sort,0,2,2,T[].push(T[]): number
28,sort,0,3,0,ObjectConstructor.keys(object): string[]
28,sort,0,3,1,T[].sort(function): this
28,sort,0,3,2,sort(typeof compare)
28,sort,0,4,0,T[].reverse(): T[]
28,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
28,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
28,sort,0,4,3,ObjectConstructor.keys(object): string[]
28,sort,0,4,4,T[].sort(): this
28,sort,0,4,5,T[].forEach(function): void
28,sort,0,5,0,sort(function)
28,sort,0,5,1,T[].sort(function): this
28,sort,0,5,2,"object[].sortBy(string, string)"
28,sort,0,5,3,sortBy(string)
28,sort,0,5,4,reverse(unknown)
28,sort,0,5,5,sort(typeof compare)
28,sort,0,5,6,dynamicSort(string): function
28,sort,0,5,7,"dynamicSortMultiple(string, string): function"
28,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
28,sort,0,5,9,"sortBy(object[], string)"
28,sort,0,6,0,T[].sort(function): this
28,sort,0,7,0,T[].sort(function): this
28,sort,0,8,0,T[].sort(function): this
28,sort,0,8,1,sort(function)
28,sort,0,9,0,sort(function)
28,sort,0,9,1,T[].sort(function): this
28,sort,0,9,2,dynamicSort(string): function
28,sort,1,0,0,T[].sort(function): this
28,sort,1,0,1,sort(function)
28,sort,1,0,2,T[].sort(): this
28,sort,1,0,3,Float64Array.sort(): this
28,sort,1,0,4,sort(typeof compareNumbers)
28,sort,1,0,5,String.charCodeAt(number): number
28,sort,1,0,6,"(unknown, unknown, unknown, unknown, unknown, unknown, number)"
28,sort,1,0,7,reverse()
28,sort,1,0,8,sort(typeof sortNumber)
28,sort,1,0,9,sort(typeof numerically)
28,sort,1,1,0,T[].sort(function): this
28,sort,1,1,1,sort(function)
28,sort,1,1,2,"sortBy(unknown, string)"
28,sort,1,1,3,"function.sort_by(string, boolean, typeof parseInt): function"
28,sort,1,1,4,"function.sort_by(string, boolean, function): function"
28,sort,1,1,5,sort(typeof mycomparator)
28,sort,1,1,6,function[].(): function[]
28,sort,1,1,7,"sortBy(any[], object): any[]"
28,sort,1,1,8,reverse()
28,sort,1,1,9,T[].sort(): this
28,sort,1,2,0,sort(function)
28,sort,1,2,1,T[].sort(function): this
28,sort,1,2,2,T[].push(T[]): number
28,sort,1,3,0,sort(function)
28,sort,1,3,1,T[].sort(function): this
28,sort,1,3,2,"object[].sortBy(string, string)"
28,sort,1,3,3,sortBy(string)
28,sort,1,3,4,reverse(unknown)
28,sort,1,3,5,sort(typeof compare)
28,sort,1,3,6,dynamicSort(string): function
28,sort,1,3,7,"dynamicSortMultiple(string, string): function"
28,sort,1,3,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
28,sort,1,3,9,"sortBy(object[], string)"
28,sort,1,4,0,T[].sort(function): this
28,sort,1,5,0,T[].sort(function): this
28,sort,1,6,0,T[].sort(function): this
28,sort,1,6,1,sort(function)
28,sort,1,7,0,"function[].sortBy(object[], string, number): any[]"
28,sort,1,7,1,"function[].sortBy(object[], string): any[]"
28,currency,0,0,0,Number.toFixed(number): string
28,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
28,currency,0,0,2,"String.replace(object, string): string"
28,currency,0,0,3,Number.toLocaleString(): string
28,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
28,currency,0,0,5,"number.formatMoney(number, string, string)"
28,currency,0,0,6,number.format(number)
28,currency,0,0,7,NumberConstructor.Number(unknown): number
28,currency,0,0,8,toFixed(number)
28,currency,0,0,9,StringConstructor.String(unknown): string
28,currency,0,1,0,formatMoney(number)
28,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
28,currency,0,3,0,formatTime(string)
28,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
28,currency,0,3,2,Document.getElementById(string): HTMLElement
28,currency,0,3,3,"moment(string, string)"
28,currency,0,3,4,format(string)
28,currency,0,3,5,T[].forEach(function): void
28,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
28,currency,0,4,1,unshift(unknown)
28,currency,0,4,2,"substr(unknown, number)"
28,currency,0,4,3,formatMoney(unknown)
28,currency,0,5,0,"replace(regex, string)"
28,currency,0,5,1,setInputValue(unknown)
28,currency,0,6,0,formatMoney(number)
28,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
28,currency,0,7,1,"String.replace(string | RegExp, string): string"
28,currency,0,7,2,toFixed(number)
28,currency,0,7,3,"String.replace(object, string): string"
28,currency,0,7,4,Math.abs(number): number
28,currency,0,7,5,Math.trunc(number): number
28,currency,0,7,6,Number.toFixed(): string
28,currency,0,7,7,Number.toFixed(number): string
28,currency,0,7,8,"number.replace(regex, string)"
28,currency,0,7,9,"replace(regex, string)"
28,currency,0,8,0,"format(string, string, number): string"
28,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
28,currency,0,8,2,"String.replace(string | RegExp, string): string"
28,currency,0,8,3,String.trim(): string
28,serve,0,1,0,static(unknown)
28,serve,0,1,1,"use(string, unknown)"
28,serve,0,1,2,"use(string, function)"
28,serve,0,1,3,express()
28,serve,0,1,4,"join(unknown, string)"
28,serve,0,1,5,"get(string, function)"
28,serve,0,1,6,listen(number)
28,serve,0,2,0,static(string)
28,serve,0,2,1,use(unknown)
28,serve,0,2,2,"use(string, unknown)"
28,serve,0,4,0,"join(unknown, string)"
28,serve,0,4,1,static(unknown)
28,serve,0,4,2,"use(string, unknown)"
28,serve,0,4,3,"get(string, unknown)"
28,serve,0,5,0,static(string)
28,serve,0,5,1,"use(string, function)"
28,serve,0,5,2,"get(string, function)"
28,serve,0,5,3,createServer(unknown)
28,serve,0,5,4,"listen(unknown, function)"
28,serve,0,5,5,"use(string, unknown)"
28,serve,0,5,6,express()
28,serve,0,5,7,"use(string, function, unknown)"
28,serve,0,6,0,static(string)
28,serve,0,6,1,"use(string, function, unknown)"
28,serve,0,6,2,"use(string, unknown)"
28,serve,0,6,3,"get(string, function)"
28,serve,0,7,0,static(unknown)
28,serve,0,7,1,use(unknown)
28,serve,0,7,2,"join(unknown, string)"
28,serve,0,7,3,"join(unknown, string, string)"
28,serve,0,8,0,"listen(number, function)"
28,serve,0,8,1,"join(unknown, string)"
28,serve,0,8,2,static(unknown)
28,serve,0,8,3,use(unknown)
28,serve,0,8,4,express()
28,serve,0,8,5,"use(string, function)"
28,serve,0,8,6,use(function)
28,serve,0,9,0,static(string)
28,serve,0,9,1,"use(string, unknown)"
28,serve,0,9,2,"join(unknown, string)"
28,serve,0,9,3,static(unknown)
28,serve,0,9,4,use(unknown)
28,serve,1,1,0,"join(unknown, string)"
28,serve,1,1,1,static(unknown)
28,serve,1,1,2,"use(string, unknown)"
28,serve,1,1,3,"get(string, unknown)"
28,serve,1,2,0,static(string)
28,serve,1,2,1,use(unknown)
28,serve,1,2,2,"use(string, unknown)"
28,serve,1,3,0,static(string)
28,serve,1,3,1,"use(string, function, unknown)"
28,serve,1,3,2,"use(string, unknown)"
28,serve,1,3,3,"get(string, function)"
28,serve,1,5,0,"T[].reduce(function, U): U"
28,serve,1,5,1,"get(string, function)"
28,serve,1,5,2,use(function)
28,serve,1,5,3,use(unknown)
28,serve,1,5,4,static(unknown)
28,serve,1,5,5,"join(unknown, string)"
28,serve,1,6,0,static(unknown)
28,serve,1,6,1,use(unknown)
28,serve,1,6,2,"join(unknown, string)"
28,serve,1,6,3,"join(unknown, string, string)"
28,serve,1,7,0,express()
28,serve,1,7,1,static(string)
28,serve,1,7,2,"listen(number, function)"
28,serve,1,7,3,"use(string, unknown)"
28,serve,1,7,4,use(unknown)
28,serve,1,7,5,"get(string, function)"
28,serve,1,7,6,"use(string, function)"
28,serve,1,7,7,compression()
28,serve,1,7,8,urlencoded(object)
28,serve,1,7,9,json()
28,serve,1,8,0,static(string)
28,serve,1,8,1,"use(string, function)"
28,serve,1,8,2,"get(string, function)"
28,serve,1,8,3,createServer(unknown)
28,serve,1,8,4,"listen(unknown, function)"
28,serve,1,8,5,"use(string, unknown)"
28,serve,1,8,6,express()
28,serve,1,8,7,"use(string, function, unknown)"
28,serve,1,9,0,"use(string, unknown)"
28,serve,1,9,1,static(unknown)
28,serve,1,9,2,cookieParser()
28,serve,1,9,3,urlencoded(object)
28,serve,1,9,4,json()
28,serve,1,9,5,use(unknown)
28,serve,1,9,6,"set(string, string)"
28,serve,1,9,7,"join(unknown, string)"
28,serve,1,9,8,"set(string, unknown)"
28,serve,1,9,9,express()
28,serve,2,1,0,static(string)
28,serve,2,1,1,"use(string, function)"
28,serve,2,1,2,"get(string, function)"
28,serve,2,1,3,createServer(unknown)
28,serve,2,1,4,"listen(unknown, function)"
28,serve,2,1,5,"use(string, unknown)"
28,serve,2,1,6,express()
28,serve,2,1,7,"use(string, function, unknown)"
28,serve,2,2,0,static(string)
28,serve,2,2,1,"use(string, unknown)"
28,serve,2,2,2,"join(unknown, string)"
28,serve,2,2,3,static(unknown)
28,serve,2,2,4,use(unknown)
28,serve,2,3,0,"join(unknown, string)"
28,serve,2,3,1,static(unknown)
28,serve,2,3,2,"use(string, unknown)"
28,serve,2,3,3,"get(string, unknown)"
28,serve,2,5,0,static(unknown)
28,serve,2,5,1,use(unknown)
28,serve,2,5,2,"join(unknown, string)"
28,serve,2,5,3,"join(unknown, string, string)"
28,serve,2,6,0,"get(string, function)"
28,serve,2,6,1,"get(string, function, unknown)"
28,serve,2,6,2,use(unknown)
28,serve,2,6,3,express()
28,serve,2,6,4,()
28,serve,2,7,0,static(string)
28,serve,2,7,1,"use(string, function, unknown)"
28,serve,2,7,2,"use(string, unknown)"
28,serve,2,7,3,"get(string, function)"
28,serve,2,8,0,use(function)
28,serve,2,8,1,static(string)
28,serve,2,8,2,use(unknown)
28,serve,2,9,0,"get(string, function)"
29,sort,0,0,0,T[].sort(function): this
29,sort,0,0,1,sort(function)
29,sort,0,0,2,"sortBy(unknown, string)"
29,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
29,sort,0,0,4,"function.sort_by(string, boolean, function): function"
29,sort,0,0,5,sort(typeof mycomparator)
29,sort,0,0,6,function[].(): function[]
29,sort,0,0,7,"sortBy(any[], object): any[]"
29,sort,0,0,8,reverse()
29,sort,0,0,9,T[].sort(): this
29,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
29,sort,0,1,1,"function[].sortBy(object[], string): any[]"
29,sort,0,2,0,sort(function)
29,sort,0,2,1,T[].sort(function): this
29,sort,0,2,2,T[].push(T[]): number
29,sort,0,3,0,ObjectConstructor.keys(object): string[]
29,sort,0,3,1,T[].sort(function): this
29,sort,0,3,2,sort(typeof compare)
29,sort,0,4,0,T[].reverse(): T[]
29,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
29,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
29,sort,0,4,3,ObjectConstructor.keys(object): string[]
29,sort,0,4,4,T[].sort(): this
29,sort,0,4,5,T[].forEach(function): void
29,sort,0,5,0,sort(function)
29,sort,0,5,1,T[].sort(function): this
29,sort,0,5,2,"object[].sortBy(string, string)"
29,sort,0,5,3,sortBy(string)
29,sort,0,5,4,reverse(unknown)
29,sort,0,5,5,sort(typeof compare)
29,sort,0,5,6,dynamicSort(string): function
29,sort,0,5,7,"dynamicSortMultiple(string, string): function"
29,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
29,sort,0,5,9,"sortBy(object[], string)"
29,sort,0,6,0,T[].sort(function): this
29,sort,0,7,0,T[].sort(function): this
29,sort,0,8,0,T[].sort(function): this
29,sort,0,8,1,sort(function)
29,sort,0,9,0,sort(function)
29,sort,0,9,1,T[].sort(function): this
29,sort,0,9,2,dynamicSort(string): function
29,currency,0,0,0,Number.toFixed(number): string
29,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
29,currency,0,0,2,"String.replace(object, string): string"
29,currency,0,0,3,Number.toLocaleString(): string
29,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
29,currency,0,0,5,"number.formatMoney(number, string, string)"
29,currency,0,0,6,number.format(number)
29,currency,0,0,7,NumberConstructor.Number(unknown): number
29,currency,0,0,8,toFixed(number)
29,currency,0,0,9,StringConstructor.String(unknown): string
29,currency,0,1,0,formatMoney(number)
29,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
29,currency,0,3,0,formatTime(string)
29,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
29,currency,0,3,2,Document.getElementById(string): HTMLElement
29,currency,0,3,3,"moment(string, string)"
29,currency,0,3,4,format(string)
29,currency,0,3,5,T[].forEach(function): void
29,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
29,currency,0,4,1,unshift(unknown)
29,currency,0,4,2,"substr(unknown, number)"
29,currency,0,4,3,formatMoney(unknown)
29,currency,0,5,0,"replace(regex, string)"
29,currency,0,5,1,setInputValue(unknown)
29,currency,0,6,0,formatMoney(number)
29,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
29,currency,0,7,1,"String.replace(string | RegExp, string): string"
29,currency,0,7,2,toFixed(number)
29,currency,0,7,3,"String.replace(object, string): string"
29,currency,0,7,4,Math.abs(number): number
29,currency,0,7,5,Math.trunc(number): number
29,currency,0,7,6,Number.toFixed(): string
29,currency,0,7,7,Number.toFixed(number): string
29,currency,0,7,8,"number.replace(regex, string)"
29,currency,0,7,9,"replace(regex, string)"
29,currency,0,8,0,"format(string, string, number): string"
29,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
29,currency,0,8,2,"String.replace(string | RegExp, string): string"
29,currency,0,8,3,String.trim(): string
29,serve,0,0,0,"use(string, unknown)"
29,serve,0,0,1,Router()
29,serve,0,0,2,put(function)
29,serve,0,0,3,post(function)
29,serve,0,0,4,get(function)
29,serve,0,0,5,route(string)
29,serve,0,1,0,Router()
29,serve,0,1,1,"get(string, function, unknown)"
29,serve,0,1,2,"use(string, unknown)"
29,serve,0,1,3,express()
29,serve,0,1,4,use(unknown)
29,serve,0,1,5,json()
29,serve,0,1,6,urlencoded(object)
29,serve,0,1,7,"get(string, function)"
29,serve,0,1,8,function.feature(string): function
29,serve,0,1,9,"use(string, function)"
29,serve,0,2,0,use(function)
29,serve,0,3,0,"get(string, function)"
29,serve,0,4,0,"get(string, function)"
29,serve,0,4,1,T[].forEach(function): void
29,serve,0,4,2,use(unknown)
29,serve,0,4,3,()
29,serve,0,4,4,"join(unknown, string)"
29,serve,0,4,5,function.()
29,serve,0,4,6,express()
29,serve,0,4,7,"use(string, unknown)"
29,serve,0,4,8,"get(number, regex)"
29,serve,0,4,9,"parseInt(string, number): number"
29,serve,0,5,0,"join(unknown, string, string)"
29,serve,0,5,1,"set(string, unknown)"
29,serve,0,5,2,join(unknown)
29,serve,0,5,3,"set(string, unknown, string, string)"
29,serve,0,5,4,"join(unknown, string)"
29,serve,0,6,0,"use(string, function)"
29,serve,0,6,1,"use(string, unknown)"
29,serve,0,7,0,"static(string, object)"
29,serve,0,7,1,static(string)
29,serve,0,7,2,use(unknown)
29,serve,1,0,0,static(unknown)
29,serve,1,0,1,use(unknown)
29,serve,1,0,2,"join(unknown, string)"
29,serve,1,0,3,"join(unknown, string, string)"
29,serve,1,2,0,"join(unknown, string)"
29,serve,1,2,1,static(unknown)
29,serve,1,2,2,"use(string, unknown)"
29,serve,1,2,3,"get(string, unknown)"
29,serve,1,4,0,use(function)
29,serve,1,4,1,static(string)
29,serve,1,4,2,use(unknown)
29,serve,1,5,0,cwd()
29,serve,1,5,1,static(string)
29,serve,1,5,2,use(unknown)
29,serve,1,6,0,static(string)
29,serve,1,6,1,"use(string, unknown)"
29,serve,1,6,2,"join(unknown, string)"
29,serve,1,6,3,static(unknown)
29,serve,1,6,4,use(unknown)
29,serve,1,7,0,"use(string, function)"
29,serve,1,7,1,use(function)
29,serve,1,8,0,static(string)
29,serve,1,8,1,use(unknown)
29,serve,1,9,0,"use(string, unknown)"
29,serve,1,9,1,"use(string, function)"
29,serve,1,9,2,use(unknown)
29,serve,1,9,3,"join(unknown, string, string, string)"
29,serve,1,9,4,static(unknown)
30,currency,0,0,0,Number.toFixed(number): string
30,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
30,currency,0,0,2,"String.replace(object, string): string"
30,currency,0,0,3,Number.toLocaleString(): string
30,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
30,currency,0,0,5,"number.formatMoney(number, string, string)"
30,currency,0,0,6,number.format(number)
30,currency,0,0,7,NumberConstructor.Number(unknown): number
30,currency,0,0,8,toFixed(number)
30,currency,0,0,9,StringConstructor.String(unknown): string
30,currency,0,1,0,formatMoney(number)
30,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
30,currency,0,3,0,formatTime(string)
30,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
30,currency,0,3,2,Document.getElementById(string): HTMLElement
30,currency,0,3,3,"moment(string, string)"
30,currency,0,3,4,format(string)
30,currency,0,3,5,T[].forEach(function): void
30,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
30,currency,0,4,1,unshift(unknown)
30,currency,0,4,2,"substr(unknown, number)"
30,currency,0,4,3,formatMoney(unknown)
30,currency,0,5,0,"replace(regex, string)"
30,currency,0,5,1,setInputValue(unknown)
30,currency,0,6,0,formatMoney(number)
30,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
30,currency,0,7,1,"String.replace(string | RegExp, string): string"
30,currency,0,7,2,toFixed(number)
30,currency,0,7,3,"String.replace(object, string): string"
30,currency,0,7,4,Math.abs(number): number
30,currency,0,7,5,Math.trunc(number): number
30,currency,0,7,6,Number.toFixed(): string
30,currency,0,7,7,Number.toFixed(number): string
30,currency,0,7,8,"number.replace(regex, string)"
30,currency,0,7,9,"replace(regex, string)"
30,currency,0,8,0,"format(string, string, number): string"
30,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
30,currency,0,8,2,"String.replace(string | RegExp, string): string"
30,currency,0,8,3,String.trim(): string
30,find,0,0,0,T[].filter(function): T[]
30,find,0,0,1,"search(string, object[])"
30,find,0,0,2,T[].find(function): T
30,find,0,0,3,find(function)
30,find,0,0,4,indexOf(unknown)
30,find,0,0,5,"fill(string, unknown, number)"
30,find,0,0,6,findIndex(function)
30,find,0,0,7,function.search(string): object
30,find,0,0,8,forEach(function)
30,find,0,0,9,map(function)
30,find,0,1,0,T[].indexOf(T): number
30,find,0,1,1,T[].includes(T): boolean
30,find,0,1,2,"inArray(string, string[])"
30,find,0,1,3,includes(string)
30,find,0,1,4,"inArray(string, unknown)"
30,find,0,1,5,T[].some(function): boolean
30,find,0,1,6,T[].find(function): T
30,find,0,2,0,T[].some(function): boolean
30,find,0,2,1,T[].filter(function): T[]
30,find,0,2,2,T[].findIndex(function): number
30,find,0,2,3,T[].find(function): T
30,find,0,2,4,find(function)
30,find,0,2,5,T[].forEach(function): void
30,find,0,3,0,T[].find(function): T
30,find,0,3,1,T[].filter(function): T[]
30,find,0,3,2,find(function)
30,find,0,3,3,"filterValue(object[], string, number)"
30,find,0,3,4,"filteredArray(object[], string, number): any[]"
30,find,0,3,5,"findWhere(unknown, object)"
30,find,0,3,6,T[].findIndex(function): number
30,find,0,3,7,some(function)
30,find,0,3,8,"select(unknown, function)"
30,find,0,3,9,"reduce(function, null)"
30,find,0,4,0,"T[].reduce(function, U): U"
30,find,0,4,1,filter(function)
30,find,0,4,2,"grep(unknown, function)"
30,find,0,4,3,T[].find(function): T
30,find,0,4,4,function.(): function
30,find,0,4,5,T[].map(function): U[]
30,find,0,4,6,ArrayConstructor.Array(number): any[]
30,find,0,4,7,map(function[])
30,find,0,4,8,"each(unknown, function)"
30,find,0,4,9,map(function)
30,find,0,5,0,T[].filter(function): T[]
30,find,0,5,1,filter(function)
30,recent,0,0,0,subtract(object)
30,recent,0,0,1,moment(string)
30,recent,0,0,2,String.split(string | RegExp): string[]
30,recent,0,0,3,subtract(unknown)
30,recent,0,0,4,moment(number)
30,recent,0,0,5,format(string)
30,recent,0,0,6,toString()
30,recent,0,0,7,subtract(ObjectConstructor)
30,recent,0,0,8,"subtract(StringConstructor, StringConstructor)"
30,recent,0,0,9,"subtract(NumberConstructor, StringConstructor)"
30,recent,0,1,0,utc(number)
30,recent,0,1,1,format(string)
30,recent,0,1,2,"subtract(number, string)"
30,recent,0,1,3,diff(unknown)
30,recent,0,1,4,duration(unknown)
30,recent,0,1,5,"add(number, string)"
30,recent,0,1,6,isBefore(unknown)
30,recent,0,1,7,"utc(unknown, string)"
30,recent,0,2,0,"subtract(unknown, string)"
30,recent,0,2,1,input(string)
30,recent,0,2,2,moment()
30,recent,0,2,3,subtract(unknown)
30,recent,0,2,4,format(string)
30,recent,0,3,0,subtract(unknown)
30,recent,0,3,1,format()
30,recent,0,3,2,duration(object)
30,recent,0,3,3,"moment(string, string)"
30,recent,0,3,4,"subtract(number, string)"
30,recent,0,4,0,moment(unknown)
30,recent,0,4,1,"add(number, string)"
30,recent,0,4,2,"subtract(StringConstructor, NumberConstructor)"
30,recent,0,4,3,moment()
30,recent,0,4,4,"subtract(NumberConstructor, StringConstructor)"
30,recent,0,4,5,"subtract(StringConstructor, StringConstructor)"
30,recent,0,4,6,subtract(unknown)
30,recent,0,4,7,subtract(ObjectConstructor)
30,recent,0,4,8,String.split(string | RegExp): string[]
30,recent,0,4,9,subtract(object)
30,recent,0,5,0,diff(unknown)
30,recent,0,5,1,valueOf()
30,recent,0,5,2,"moment(string, string)"
30,recent,0,5,3,"moment(unknown, string)"
30,recent,0,6,0,Number.toString(): string
30,recent,0,6,1,moment(string)
30,recent,0,6,2,unix()
30,recent,0,6,3,toString()
30,recent,0,6,4,year()
30,recent,0,6,5,"subtract(number, string)"
30,recent,0,6,6,moment(unknown)
30,recent,0,6,7,asDays()
30,recent,0,6,8,diff(unknown)
30,recent,0,6,9,duration(unknown)
30,recent,0,7,0,"subtract(string, number)"
30,recent,0,7,1,moment()
30,recent,0,7,2,"subtract(number, string)"
30,recent,0,7,3,format(string)
30,recent,0,8,0,diff(unknown)
30,recent,0,8,1,"tz(Date, string, string)"
30,recent,0,8,2,local()
30,recent,0,8,3,duration(unknown)
30,recent,0,8,4,asHours()
30,recent,0,8,5,"tz(unknown, string, string)"
30,recent,0,8,6,"diff(unknown, string)"
30,recent,0,8,7,moment()
30,recent,0,8,8,moment(unknown)
30,recent,0,8,9,format(string)
30,recent,0,9,0,"subtract(number, string, unknown)"
30,recent,0,9,1,"subtract(unknown, string)"
30,recent,0,9,2,moment()
30,recent,0,9,3,"subtract(number, string)"
30,recent,0,9,4,function.date2timestamp(string): number | boolean
30,recent,0,9,5,"Document.write(string[], string, number | boolean): void"
30,recent,0,9,6,"moment(unknown, string)"
30,recent,0,9,7,diff(unknown)
30,recent,0,9,8,subtract(unknown)
30,recent,0,9,9,moment(unknown)
31,currency,0,0,0,Number.toFixed(number): string
31,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
31,currency,0,0,2,"String.replace(object, string): string"
31,currency,0,0,3,Number.toLocaleString(): string
31,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
31,currency,0,0,5,"number.formatMoney(number, string, string)"
31,currency,0,0,6,number.format(number)
31,currency,0,0,7,NumberConstructor.Number(unknown): number
31,currency,0,0,8,toFixed(number)
31,currency,0,0,9,StringConstructor.String(unknown): string
31,currency,0,1,0,formatMoney(number)
31,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
31,currency,0,3,0,formatTime(string)
31,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
31,currency,0,3,2,Document.getElementById(string): HTMLElement
31,currency,0,3,3,"moment(string, string)"
31,currency,0,3,4,format(string)
31,currency,0,3,5,T[].forEach(function): void
31,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
31,currency,0,4,1,unshift(unknown)
31,currency,0,4,2,"substr(unknown, number)"
31,currency,0,4,3,formatMoney(unknown)
31,currency,0,5,0,"replace(regex, string)"
31,currency,0,5,1,setInputValue(unknown)
31,currency,0,6,0,formatMoney(number)
31,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
31,currency,0,7,1,"String.replace(string | RegExp, string): string"
31,currency,0,7,2,toFixed(number)
31,currency,0,7,3,"String.replace(object, string): string"
31,currency,0,7,4,Math.abs(number): number
31,currency,0,7,5,Math.trunc(number): number
31,currency,0,7,6,Number.toFixed(): string
31,currency,0,7,7,Number.toFixed(number): string
31,currency,0,7,8,"number.replace(regex, string)"
31,currency,0,7,9,"replace(regex, string)"
31,currency,0,8,0,"format(string, string, number): string"
31,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
31,currency,0,8,2,"String.replace(string | RegExp, string): string"
31,currency,0,8,3,String.trim(): string
31,find,0,0,0,T[].filter(function): T[]
31,find,0,0,1,"search(string, object[])"
31,find,0,0,2,T[].find(function): T
31,find,0,0,3,find(function)
31,find,0,0,4,indexOf(unknown)
31,find,0,0,5,"fill(string, unknown, number)"
31,find,0,0,6,findIndex(function)
31,find,0,0,7,function.search(string): object
31,find,0,0,8,forEach(function)
31,find,0,0,9,map(function)
31,find,0,1,0,T[].indexOf(T): number
31,find,0,1,1,T[].includes(T): boolean
31,find,0,1,2,"inArray(string, string[])"
31,find,0,1,3,includes(string)
31,find,0,1,4,"inArray(string, unknown)"
31,find,0,1,5,T[].some(function): boolean
31,find,0,1,6,T[].find(function): T
31,find,0,2,0,T[].some(function): boolean
31,find,0,2,1,T[].filter(function): T[]
31,find,0,2,2,T[].findIndex(function): number
31,find,0,2,3,T[].find(function): T
31,find,0,2,4,find(function)
31,find,0,2,5,T[].forEach(function): void
31,find,0,3,0,T[].find(function): T
31,find,0,3,1,T[].filter(function): T[]
31,find,0,3,2,find(function)
31,find,0,3,3,"filterValue(object[], string, number)"
31,find,0,3,4,"filteredArray(object[], string, number): any[]"
31,find,0,3,5,"findWhere(unknown, object)"
31,find,0,3,6,T[].findIndex(function): number
31,find,0,3,7,some(function)
31,find,0,3,8,"select(unknown, function)"
31,find,0,3,9,"reduce(function, null)"
31,find,0,4,0,"T[].reduce(function, U): U"
31,find,0,4,1,filter(function)
31,find,0,4,2,"grep(unknown, function)"
31,find,0,4,3,T[].find(function): T
31,find,0,4,4,function.(): function
31,find,0,4,5,T[].map(function): U[]
31,find,0,4,6,ArrayConstructor.Array(number): any[]
31,find,0,4,7,map(function[])
31,find,0,4,8,"each(unknown, function)"
31,find,0,4,9,map(function)
31,find,0,5,0,T[].filter(function): T[]
31,find,0,5,1,filter(function)
31,find,0,6,0,T[].includes(T): boolean
31,find,0,6,1,T[].indexOf(T): number
31,find,0,6,2,T[].find(function): T
31,find,0,6,3,T[].some(function): boolean
31,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
31,find,0,6,5,T[].findIndex(function): number
31,find,0,6,6,number[].contains(number)
31,find,0,6,7,number[].contains(string)
31,find,0,6,8,indexOf(string)
31,find,0,6,9,indexOf(number)
31,find,0,7,0,T[].findIndex(function): number
31,find,0,7,1,T[].filter(function): T[]
31,find,0,7,2,T[].map(function): U[]
31,find,0,7,3,T[].forEach(function): void
31,find,0,7,4,map(function)
31,find,0,7,5,"T[].splice(number, number, T[]): T[]"
31,find,0,7,6,T[].find(function): T
31,find,0,7,7,findIndex(function)
31,find,0,7,8,forEach(function)
31,find,0,7,9,T[].pop(): T
31,find,0,8,0,T[].filter(function): T[]
31,find,0,8,1,filter(function)
31,find,0,9,0,includes(unknown)
31,find,0,9,1,"inArray(number, string[])"
31,find,0,9,2,"has(unknown, boolean)"
31,find,0,9,3,has(object)
31,find,0,9,4,"has(object, number)"
31,find,0,9,5,has(string)
31,find,0,9,6,has(number)
31,find,0,9,7,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
31,find,0,9,8,indexOf(unknown)
31,find,0,9,9,"customSlowerSearch(unknown, unknown)"
31,recent,0,0,0,"diff(unknown, string)"
31,recent,0,0,1,diff(unknown)
31,recent,0,0,2,moment(string)
31,recent,0,1,0,"subtract(number, string)"
31,recent,0,1,1,format(string)
31,recent,0,1,2,moment()
31,recent,0,1,3,toDate()
31,recent,0,1,4,moment(Date)
31,recent,0,1,5,duration(object)
31,recent,0,1,6,subtract(unknown)
31,recent,0,1,7,"subtract(string, number)"
31,recent,0,1,8,format()
31,recent,0,1,9,"moment(string, string)"
31,recent,0,2,0,moment()
31,recent,0,2,1,"subtract(number, string)"
31,recent,0,2,2,format(string)
31,recent,0,2,3,moment(number)
31,recent,0,2,4,DateConstructor.now(): number
31,recent,0,2,5,toDate()
31,recent,0,2,6,endOf(string)
31,recent,0,2,7,day(number)
31,recent,0,2,8,startOf(string)
31,recent,0,3,0,format(string)
31,recent,0,3,1,"subtract(number, string)"
31,recent,0,3,2,"add(number, string)"
31,recent,0,3,3,moment(number)
31,recent,0,3,4,"subtract(string, number)"
31,recent,0,3,5,"add(string, number)"
31,recent,0,3,6,moment()
31,recent,0,3,7,Document.getElementById(string): HTMLElement
31,recent,0,3,8,Date.PrevDay(number)
31,recent,0,3,9,Date.Nextday(number)
31,recent,0,4,0,setDate(unknown): void
31,recent,0,4,1,now()
31,recent,0,4,2,moment(unknown)
31,recent,0,4,3,"add(number, string)"
31,recent,0,5,0,diff(unknown)
31,recent,0,5,1,"tz(Date, string, string)"
31,recent,0,5,2,local()
31,recent,0,5,3,duration(unknown)
31,recent,0,5,4,asHours()
31,recent,0,5,5,"tz(unknown, string, string)"
31,recent,0,5,6,"diff(unknown, string)"
31,recent,0,5,7,moment()
31,recent,0,5,8,moment(unknown)
31,recent,0,5,9,format(string)
31,recent,0,6,0,clone()
31,recent,0,6,1,"subtract(number, string)"
31,recent,0,6,2,format()
31,recent,0,6,3,moment(string)
31,recent,0,7,0,"subtract(number, string)"
31,recent,0,8,0,"subtract(string, number)"
31,recent,0,8,1,moment()
31,recent,0,8,2,"subtract(number, string)"
31,recent,0,8,3,format(string)
31,recent,0,9,0,isAfter(unknown)
31,recent,0,9,1,isBefore(unknown)
31,recent,0,9,2,toISOString()
31,recent,0,9,3,moment(string)
31,recent,0,9,4,"subtract(number, string)"
31,recent,0,9,5,startOf(string)
32,sort,0,0,0,T[].sort(function): this
32,sort,0,0,1,sort(function)
32,sort,0,0,2,"sortBy(unknown, string)"
32,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
32,sort,0,0,4,"function.sort_by(string, boolean, function): function"
32,sort,0,0,5,sort(typeof mycomparator)
32,sort,0,0,6,function[].(): function[]
32,sort,0,0,7,"sortBy(any[], object): any[]"
32,sort,0,0,8,reverse()
32,sort,0,0,9,T[].sort(): this
32,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
32,sort,0,1,1,"function[].sortBy(object[], string): any[]"
32,sort,0,2,0,sort(function)
32,sort,0,2,1,T[].sort(function): this
32,sort,0,2,2,T[].push(T[]): number
32,sort,0,3,0,ObjectConstructor.keys(object): string[]
32,sort,0,3,1,T[].sort(function): this
32,sort,0,3,2,sort(typeof compare)
32,sort,0,4,0,T[].reverse(): T[]
32,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
32,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
32,sort,0,4,3,ObjectConstructor.keys(object): string[]
32,sort,0,4,4,T[].sort(): this
32,sort,0,4,5,T[].forEach(function): void
32,sort,0,5,0,sort(function)
32,sort,0,5,1,T[].sort(function): this
32,sort,0,5,2,"object[].sortBy(string, string)"
32,sort,0,5,3,sortBy(string)
32,sort,0,5,4,reverse(unknown)
32,sort,0,5,5,sort(typeof compare)
32,sort,0,5,6,dynamicSort(string): function
32,sort,0,5,7,"dynamicSortMultiple(string, string): function"
32,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
32,sort,0,5,9,"sortBy(object[], string)"
32,sort,0,6,0,T[].sort(function): this
32,sort,0,7,0,T[].sort(function): this
32,sort,0,8,0,T[].sort(function): this
32,sort,0,8,1,sort(function)
32,sort,0,9,0,sort(function)
32,sort,0,9,1,T[].sort(function): this
32,sort,0,9,2,dynamicSort(string): function
32,clone,0,0,0,JSON.parse(string)
32,clone,0,0,1,JSON.stringify(unknown): string
32,clone,0,0,2,T[].slice(): T[]
32,clone,0,0,3,slice()
32,clone,0,0,4,slice(number)
32,clone,0,0,5,JSON.stringify(function): string
32,clone,0,0,6,map(function)
32,clone,0,0,7,T[].push(T[]): number
32,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
32,clone,0,0,9,clone(function[]): void
32,clone,0,1,0,JSON.stringify(function): string
32,clone,0,1,1,JSON.parse(string)
32,clone,0,1,2,T[].slice(number): T[]
32,clone,0,1,3,T[].map(function): U[]
32,clone,0,1,4,"extend(boolean, undefined[], function)"
32,clone,0,1,5,slice(number)
32,clone,0,1,6,T[].slice(): T[]
32,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
32,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
32,clone,0,1,9,T[].push(T[]): number
32,clone,0,2,0,T[].concat(function): T[]
32,clone,0,2,1,undefined[].add(string)
32,clone,0,2,2,add(string)
32,clone,0,2,3,T[].slice(): T[]
32,clone,0,2,4,T[].push(T[]): number
32,clone,0,3,0,T[].map(function): U[]
32,clone,0,3,1,T[].forEach(function): void
32,clone,0,3,2,map(function)
32,clone,0,3,3,forEach(function)
32,clone,0,3,4,slice()
32,clone,0,3,5,JSON.parse(string)
32,clone,0,3,6,JSON.stringify(unknown): string
32,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
32,clone,0,5,0,map(function)
32,clone,0,5,1,"getGenericItems(unknown, unknown)"
32,clone,0,5,2,T[].forEach(function): void
32,clone,0,5,3,cloneDeep(unknown)
32,clone,0,5,4,JSON.parse(string)
32,clone,0,5,5,JSON.stringify(unknown): string
32,clone,0,5,6,slice()
32,clone,0,5,7,T[].map(function): U[]
32,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
32,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
32,clone,0,6,0,bestCopyEver(object)
32,clone,0,6,1,iterationCopy(object): object
32,clone,0,6,2,JSON.stringify(unknown): string
32,clone,0,6,3,JSON.parse(string)
32,clone,0,7,0,T[].map(function): U[]
32,clone,0,8,0,JSON.stringify(unknown): string
32,clone,0,8,1,JSON.parse(string)
32,clone,0,8,2,map(function)
32,clone,0,8,3,structuredClone(unknown)
32,clone,0,8,4,slice(number)
32,clone,0,8,5,"map(unknown, function)"
32,clone,0,8,6,evalJSON(unknown)
32,clone,0,8,7,toJSON(unknown)
32,clone,0,8,8,JSON.stringify(object): string
32,clone,0,8,9,cloneDeep(function)
32,clone,0,9,0,JSON.stringify(number[][]): string
32,clone,0,9,1,JSON.parse(string)
32,serve,0,1,0,static(unknown)
32,serve,0,1,1,"use(string, unknown)"
32,serve,0,1,2,"use(string, function)"
32,serve,0,1,3,express()
32,serve,0,1,4,"join(unknown, string)"
32,serve,0,1,5,"get(string, function)"
32,serve,0,1,6,listen(number)
32,serve,0,2,0,static(string)
32,serve,0,2,1,use(unknown)
32,serve,0,3,0,static(string)
32,serve,0,3,1,use(unknown)
32,serve,0,4,0,"use(string, unknown)"
32,serve,0,4,1,"use(string, function)"
32,serve,0,4,2,use(unknown)
32,serve,0,4,3,"join(unknown, string, string, string)"
32,serve,0,4,4,static(unknown)
32,serve,0,5,0,static(string)
32,serve,0,5,1,use(unknown)
32,serve,0,6,0,"join(unknown, string)"
32,serve,0,6,1,static(unknown)
32,serve,0,6,2,use(unknown)
32,serve,0,7,0,static(string)
32,serve,0,7,1,use(unknown)
32,serve,0,7,2,"set(string, unknown)"
32,serve,0,7,3,express()
32,serve,0,8,0,"join(unknown, string)"
32,serve,0,8,1,static(unknown)
32,serve,0,8,2,"use(string, unknown)"
32,serve,0,9,0,"join(unknown, string)"
32,serve,0,9,1,"static(unknown, object)"
32,serve,0,9,2,use(unknown)
32,serve,0,9,3,"use(string, unknown)"
32,serve,0,9,4,static(string)
33,sort,0,0,0,T[].sort(function): this
33,sort,0,0,1,sort(function)
33,sort,0,0,2,"sortBy(unknown, string)"
33,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
33,sort,0,0,4,"function.sort_by(string, boolean, function): function"
33,sort,0,0,5,sort(typeof mycomparator)
33,sort,0,0,6,function[].(): function[]
33,sort,0,0,7,"sortBy(any[], object): any[]"
33,sort,0,0,8,reverse()
33,sort,0,0,9,T[].sort(): this
33,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
33,sort,0,1,1,"function[].sortBy(object[], string): any[]"
33,sort,0,2,0,sort(function)
33,sort,0,2,1,T[].sort(function): this
33,sort,0,2,2,T[].push(T[]): number
33,sort,0,3,0,ObjectConstructor.keys(object): string[]
33,sort,0,3,1,T[].sort(function): this
33,sort,0,3,2,sort(typeof compare)
33,sort,0,4,0,T[].reverse(): T[]
33,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
33,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
33,sort,0,4,3,ObjectConstructor.keys(object): string[]
33,sort,0,4,4,T[].sort(): this
33,sort,0,4,5,T[].forEach(function): void
33,sort,0,5,0,sort(function)
33,sort,0,5,1,T[].sort(function): this
33,sort,0,5,2,"object[].sortBy(string, string)"
33,sort,0,5,3,sortBy(string)
33,sort,0,5,4,reverse(unknown)
33,sort,0,5,5,sort(typeof compare)
33,sort,0,5,6,dynamicSort(string): function
33,sort,0,5,7,"dynamicSortMultiple(string, string): function"
33,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
33,sort,0,5,9,"sortBy(object[], string)"
33,sort,0,6,0,T[].sort(function): this
33,sort,0,7,0,T[].sort(function): this
33,sort,0,8,0,T[].sort(function): this
33,sort,0,8,1,sort(function)
33,sort,0,9,0,sort(function)
33,sort,0,9,1,T[].sort(function): this
33,sort,0,9,2,dynamicSort(string): function
33,currency,0,0,0,Number.toFixed(number): string
33,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
33,currency,0,0,2,"String.replace(object, string): string"
33,currency,0,0,3,Number.toLocaleString(): string
33,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
33,currency,0,0,5,"number.formatMoney(number, string, string)"
33,currency,0,0,6,number.format(number)
33,currency,0,0,7,NumberConstructor.Number(unknown): number
33,currency,0,0,8,toFixed(number)
33,currency,0,0,9,StringConstructor.String(unknown): string
33,currency,0,1,0,formatMoney(number)
33,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
33,currency,0,3,0,formatTime(string)
33,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
33,currency,0,3,2,Document.getElementById(string): HTMLElement
33,currency,0,3,3,"moment(string, string)"
33,currency,0,3,4,format(string)
33,currency,0,3,5,T[].forEach(function): void
33,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
33,currency,0,4,1,unshift(unknown)
33,currency,0,4,2,"substr(unknown, number)"
33,currency,0,4,3,formatMoney(unknown)
33,currency,0,5,0,"replace(regex, string)"
33,currency,0,5,1,setInputValue(unknown)
33,currency,0,6,0,formatMoney(number)
33,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
33,currency,0,7,1,"String.replace(string | RegExp, string): string"
33,currency,0,7,2,toFixed(number)
33,currency,0,7,3,"String.replace(object, string): string"
33,currency,0,7,4,Math.abs(number): number
33,currency,0,7,5,Math.trunc(number): number
33,currency,0,7,6,Number.toFixed(): string
33,currency,0,7,7,Number.toFixed(number): string
33,currency,0,7,8,"number.replace(regex, string)"
33,currency,0,7,9,"replace(regex, string)"
33,currency,0,8,0,"format(string, string, number): string"
33,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
33,currency,0,8,2,"String.replace(string | RegExp, string): string"
33,currency,0,8,3,String.trim(): string
33,serve,0,0,0,static(string)
33,serve,0,0,1,use(unknown)
33,serve,0,0,2,"use(string, unknown)"
33,serve,0,2,0,"join(unknown, string)"
33,serve,0,2,1,static(unknown)
33,serve,0,2,2,"use(string, unknown)"
33,serve,0,2,3,"get(string, unknown)"
33,serve,0,4,0,"use(string, function)"
33,serve,0,4,1,use(function)
33,serve,0,5,0,static(string)
33,serve,0,5,1,"use(string, function)"
33,serve,0,5,2,"get(string, function)"
33,serve,0,5,3,createServer(unknown)
33,serve,0,5,4,"listen(unknown, function)"
33,serve,0,5,5,"use(string, unknown)"
33,serve,0,5,6,express()
33,serve,0,5,7,"use(string, function, unknown)"
33,serve,0,6,0,static(unknown)
33,serve,0,6,1,use(unknown)
33,serve,0,6,2,"join(unknown, string)"
33,serve,0,6,3,"join(unknown, string, string)"
33,serve,0,7,0,static(string)
33,serve,0,7,1,"use(string, function, unknown)"
33,serve,0,7,2,"use(string, unknown)"
33,serve,0,7,3,"get(string, function)"
33,serve,0,8,0,use(function)
33,serve,0,8,1,static(string)
33,serve,0,8,2,use(unknown)
33,serve,0,9,0,"get(string, function)"
34,sort,0,0,0,T[].sort(function): this
34,sort,0,0,1,sort(function)
34,sort,0,0,2,"sortBy(unknown, string)"
34,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
34,sort,0,0,4,"function.sort_by(string, boolean, function): function"
34,sort,0,0,5,sort(typeof mycomparator)
34,sort,0,0,6,function[].(): function[]
34,sort,0,0,7,"sortBy(any[], object): any[]"
34,sort,0,0,8,reverse()
34,sort,0,0,9,T[].sort(): this
34,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
34,sort,0,1,1,"function[].sortBy(object[], string): any[]"
34,sort,0,2,0,sort(function)
34,sort,0,2,1,T[].sort(function): this
34,sort,0,2,2,T[].push(T[]): number
34,sort,0,3,0,ObjectConstructor.keys(object): string[]
34,sort,0,3,1,T[].sort(function): this
34,sort,0,3,2,sort(typeof compare)
34,sort,0,4,0,T[].reverse(): T[]
34,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
34,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
34,sort,0,4,3,ObjectConstructor.keys(object): string[]
34,sort,0,4,4,T[].sort(): this
34,sort,0,4,5,T[].forEach(function): void
34,sort,0,5,0,sort(function)
34,sort,0,5,1,T[].sort(function): this
34,sort,0,5,2,"object[].sortBy(string, string)"
34,sort,0,5,3,sortBy(string)
34,sort,0,5,4,reverse(unknown)
34,sort,0,5,5,sort(typeof compare)
34,sort,0,5,6,dynamicSort(string): function
34,sort,0,5,7,"dynamicSortMultiple(string, string): function"
34,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
34,sort,0,5,9,"sortBy(object[], string)"
34,sort,0,6,0,T[].sort(function): this
34,sort,0,7,0,T[].sort(function): this
34,sort,0,8,0,T[].sort(function): this
34,sort,0,8,1,sort(function)
34,sort,0,9,0,sort(function)
34,sort,0,9,1,T[].sort(function): this
34,sort,0,9,2,dynamicSort(string): function
34,clone,0,0,0,JSON.parse(string)
34,clone,0,0,1,JSON.stringify(unknown): string
34,clone,0,0,2,T[].slice(): T[]
34,clone,0,0,3,slice()
34,clone,0,0,4,slice(number)
34,clone,0,0,5,JSON.stringify(function): string
34,clone,0,0,6,map(function)
34,clone,0,0,7,T[].push(T[]): number
34,clone,0,0,8,ArrayConstructor.Array(T[]): T[]
34,clone,0,0,9,clone(function[]): void
34,clone,0,1,0,JSON.stringify(function): string
34,clone,0,1,1,JSON.parse(string)
34,clone,0,1,2,T[].slice(number): T[]
34,clone,0,1,3,T[].map(function): U[]
34,clone,0,1,4,"extend(boolean, undefined[], function)"
34,clone,0,1,5,slice(number)
34,clone,0,1,6,T[].slice(): T[]
34,clone,0,1,7,T[].concat(ConcatArray<T>[]): T[]
34,clone,0,1,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
34,clone,0,1,9,T[].push(T[]): number
34,clone,0,2,0,T[].concat(function): T[]
34,clone,0,2,1,undefined[].add(string)
34,clone,0,2,2,add(string)
34,clone,0,2,3,T[].slice(): T[]
34,clone,0,2,4,T[].push(T[]): number
34,clone,0,3,0,T[].map(function): U[]
34,clone,0,3,1,T[].forEach(function): void
34,clone,0,3,2,map(function)
34,clone,0,3,3,forEach(function)
34,clone,0,3,4,slice()
34,clone,0,3,5,JSON.parse(string)
34,clone,0,3,6,JSON.stringify(unknown): string
34,clone,0,4,0,"T[].splice(number, number, T[]): T[]"
34,clone,0,5,0,map(function)
34,clone,0,5,1,"getGenericItems(unknown, unknown)"
34,clone,0,5,2,T[].forEach(function): void
34,clone,0,5,3,cloneDeep(unknown)
34,clone,0,5,4,JSON.parse(string)
34,clone,0,5,5,JSON.stringify(unknown): string
34,clone,0,5,6,slice()
34,clone,0,5,7,T[].map(function): U[]
34,clone,0,5,8,"deepArrayCopy(unknown, unknown)"
34,clone,0,5,9,typeof globalThis.deepArrayCopy(unknown)
34,clone,0,6,0,bestCopyEver(object)
34,clone,0,6,1,iterationCopy(object): object
34,clone,0,6,2,JSON.stringify(unknown): string
34,clone,0,6,3,JSON.parse(string)
34,clone,0,7,0,T[].map(function): U[]
34,clone,0,8,0,JSON.stringify(unknown): string
34,clone,0,8,1,JSON.parse(string)
34,clone,0,8,2,map(function)
34,clone,0,8,3,structuredClone(unknown)
34,clone,0,8,4,slice(number)
34,clone,0,8,5,"map(unknown, function)"
34,clone,0,8,6,evalJSON(unknown)
34,clone,0,8,7,toJSON(unknown)
34,clone,0,8,8,JSON.stringify(object): string
34,clone,0,8,9,cloneDeep(function)
34,clone,0,9,0,JSON.stringify(number[][]): string
34,clone,0,9,1,JSON.parse(string)
34,serve,0,0,0,"post(string, function)"
34,serve,0,0,1,"join(unknown, string)"
34,serve,0,0,2,static(unknown)
34,serve,0,0,3,use(unknown)
34,serve,0,1,0,"get(string, function)"
34,serve,0,3,0,route(string)
34,serve,0,3,1,get(function)
34,serve,0,3,2,Router()
34,serve,0,3,3,"use(string, unknown)"
34,serve,0,4,0,"get(string, function)"
34,serve,0,4,1,T[].forEach(function): void
34,serve,0,4,2,use(unknown)
34,serve,0,4,3,()
34,serve,0,4,4,"join(unknown, string)"
34,serve,0,4,5,function.()
34,serve,0,4,6,express()
34,serve,0,4,7,"use(string, unknown)"
34,serve,0,4,8,"get(number, regex)"
34,serve,0,4,9,"parseInt(string, number): number"
34,serve,0,5,0,create(object)
34,serve,0,6,0,"get(string, function, unknown)"
34,serve,0,7,0,listen(number)
34,serve,0,7,1,"put(string, function)"
34,serve,0,7,2,"get(string, function)"
34,serve,0,7,3,()
34,serve,0,7,4,methodOverride(string)
34,serve,0,7,5,use(unknown)
34,serve,0,7,6,send(string)
34,serve,0,8,0,listen(number)
34,serve,0,8,1,"use(string, unknown)"
34,serve,0,8,2,express()
34,serve,0,8,3,"get(string, unknown)"
34,serve,0,8,4,Router()
34,serve,1,0,0,static(string)
34,serve,1,0,1,use(unknown)
34,serve,1,0,2,express()
34,serve,1,0,3,listen(number)
34,serve,1,0,4,static(unknown)
34,serve,1,0,5,"join(unknown, string)"
34,serve,1,0,6,"use(string, unknown)"
34,serve,1,0,7,"get(string, function)"
34,serve,1,0,8,configure(function)
34,serve,1,0,9,"listen(number, function)"
34,serve,1,2,0,"join(unknown, string)"
34,serve,1,2,1,"listen(number, function)"
34,serve,1,2,2,"get(string, function)"
34,serve,1,2,3,express()
34,serve,1,2,4,static(unknown)
34,serve,1,2,5,use(unknown)
34,serve,1,3,0,static(string)
34,serve,1,3,1,use(unknown)
34,serve,1,3,2,"use(string, unknown)"
34,serve,1,3,3,static(unknown)
34,serve,1,3,4,"join(unknown, string)"
34,serve,1,3,5,express()
34,serve,1,3,6,"resolve(unknown, string)"
34,serve,1,3,7,cwd()
34,serve,1,3,8,"get(string, function)"
34,serve,1,3,9,"link(string, string)"
34,serve,1,4,0,static(string)
34,serve,1,4,1,use(unknown)
34,serve,1,7,0,listen(number)
34,serve,1,7,1,createServer(function)
34,serve,1,7,2,use(unknown)
34,serve,1,7,3,static(string)
34,serve,1,7,4,express()
34,serve,1,7,5,static(unknown)
34,serve,1,7,6,"on(string, function)"
34,serve,1,7,7,connect()
34,serve,1,7,8,"use(string, unknown)"
34,serve,1,7,9,"listen(number, function)"
35,sort,0,0,0,T[].sort(function): this
35,sort,0,0,1,sort(function)
35,sort,0,0,2,"sortBy(unknown, string)"
35,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
35,sort,0,0,4,"function.sort_by(string, boolean, function): function"
35,sort,0,0,5,sort(typeof mycomparator)
35,sort,0,0,6,function[].(): function[]
35,sort,0,0,7,"sortBy(any[], object): any[]"
35,sort,0,0,8,reverse()
35,sort,0,0,9,T[].sort(): this
35,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
35,sort,0,1,1,"function[].sortBy(object[], string): any[]"
35,sort,0,2,0,sort(function)
35,sort,0,2,1,T[].sort(function): this
35,sort,0,2,2,T[].push(T[]): number
35,sort,0,3,0,ObjectConstructor.keys(object): string[]
35,sort,0,3,1,T[].sort(function): this
35,sort,0,3,2,sort(typeof compare)
35,sort,0,4,0,T[].reverse(): T[]
35,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
35,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
35,sort,0,4,3,ObjectConstructor.keys(object): string[]
35,sort,0,4,4,T[].sort(): this
35,sort,0,4,5,T[].forEach(function): void
35,sort,0,5,0,sort(function)
35,sort,0,5,1,T[].sort(function): this
35,sort,0,5,2,"object[].sortBy(string, string)"
35,sort,0,5,3,sortBy(string)
35,sort,0,5,4,reverse(unknown)
35,sort,0,5,5,sort(typeof compare)
35,sort,0,5,6,dynamicSort(string): function
35,sort,0,5,7,"dynamicSortMultiple(string, string): function"
35,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
35,sort,0,5,9,"sortBy(object[], string)"
35,sort,0,6,0,T[].sort(function): this
35,sort,0,7,0,T[].sort(function): this
35,sort,0,8,0,T[].sort(function): this
35,sort,0,8,1,sort(function)
35,currency,0,0,0,Number.toFixed(number): string
35,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
35,currency,0,0,2,"String.replace(object, string): string"
35,currency,0,0,3,Number.toLocaleString(): string
35,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
35,currency,0,0,5,"number.formatMoney(number, string, string)"
35,currency,0,0,6,number.format(number)
35,currency,0,0,7,NumberConstructor.Number(unknown): number
35,currency,0,0,8,toFixed(number)
35,currency,0,0,9,StringConstructor.String(unknown): string
35,currency,0,1,0,formatMoney(number)
35,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
35,currency,0,3,0,formatTime(string)
35,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
35,currency,0,3,2,Document.getElementById(string): HTMLElement
35,currency,0,3,3,"moment(string, string)"
35,currency,0,3,4,format(string)
35,currency,0,3,5,T[].forEach(function): void
35,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
35,currency,0,4,1,unshift(unknown)
35,currency,0,4,2,"substr(unknown, number)"
35,currency,0,4,3,formatMoney(unknown)
35,currency,0,5,0,"replace(regex, string)"
35,currency,0,5,1,setInputValue(unknown)
35,currency,0,6,0,formatMoney(number)
35,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
35,currency,0,7,1,"String.replace(string | RegExp, string): string"
35,currency,0,7,2,toFixed(number)
35,currency,0,7,3,"String.replace(object, string): string"
35,currency,0,7,4,Math.abs(number): number
35,currency,0,7,5,Math.trunc(number): number
35,currency,0,7,6,Number.toFixed(): string
35,currency,0,7,7,Number.toFixed(number): string
35,currency,0,7,8,"number.replace(regex, string)"
35,currency,0,7,9,"replace(regex, string)"
35,currency,0,8,0,"format(string, string, number): string"
35,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
35,currency,0,8,2,"String.replace(string | RegExp, string): string"
35,currency,0,8,3,String.trim(): string
35,serve,0,1,0,static(string)
35,serve,0,1,1,"use(string, unknown)"
35,serve,0,1,2,"join(unknown, string)"
35,serve,0,1,3,static(unknown)
35,serve,0,1,4,use(unknown)
35,serve,0,2,0,static(unknown)
35,serve,0,2,1,"use(string, unknown)"
35,serve,0,2,2,"use(string, function)"
35,serve,0,2,3,express()
35,serve,0,2,4,"join(unknown, string)"
35,serve,0,2,5,"get(string, function)"
35,serve,0,2,6,listen(number)
35,serve,0,4,0,static(string)
35,serve,0,4,1,use(unknown)
35,serve,0,5,0,"T[].reduce(function, U): U"
35,serve,0,5,1,"get(string, function)"
35,serve,0,5,2,use(function)
35,serve,0,5,3,use(unknown)
35,serve,0,5,4,static(unknown)
35,serve,0,5,5,"join(unknown, string)"
35,serve,0,6,0,"join(unknown, string)"
35,serve,0,6,1,static(unknown)
35,serve,0,6,2,"use(string, unknown)"
35,serve,0,6,3,"get(string, unknown)"
35,serve,0,7,0,"use(string, unknown)"
35,serve,0,7,1,"use(string, function)"
35,serve,0,7,2,use(unknown)
35,serve,0,7,3,"join(unknown, string, string, string)"
35,serve,0,7,4,static(unknown)
35,serve,0,8,0,static(string)
35,serve,0,8,1,use(unknown)
35,serve,0,9,0,"join(unknown, string)"
35,serve,0,9,1,static(unknown)
35,serve,0,9,2,use(unknown)
36,find,0,0,0,T[].filter(function): T[]
36,find,0,0,1,"search(string, object[])"
36,find,0,0,2,T[].find(function): T
36,find,0,0,3,find(function)
36,find,0,0,4,indexOf(unknown)
36,find,0,0,5,"fill(string, unknown, number)"
36,find,0,0,6,findIndex(function)
36,find,0,0,7,function.search(string): object
36,find,0,0,8,forEach(function)
36,find,0,0,9,map(function)
36,find,0,1,0,T[].indexOf(T): number
36,find,0,1,1,T[].includes(T): boolean
36,find,0,1,2,"inArray(string, string[])"
36,find,0,1,3,includes(string)
36,find,0,1,4,"inArray(string, unknown)"
36,find,0,1,5,T[].some(function): boolean
36,find,0,1,6,T[].find(function): T
36,find,0,2,0,T[].some(function): boolean
36,find,0,2,1,T[].filter(function): T[]
36,find,0,2,2,T[].findIndex(function): number
36,find,0,2,3,T[].find(function): T
36,find,0,2,4,find(function)
36,find,0,2,5,T[].forEach(function): void
36,find,0,3,0,T[].find(function): T
36,find,0,3,1,T[].filter(function): T[]
36,find,0,3,2,find(function)
36,find,0,3,3,"filterValue(object[], string, number)"
36,find,0,3,4,"filteredArray(object[], string, number): any[]"
36,find,0,3,5,"findWhere(unknown, object)"
36,find,0,3,6,T[].findIndex(function): number
36,find,0,3,7,some(function)
36,find,0,3,8,"select(unknown, function)"
36,find,0,3,9,"reduce(function, null)"
36,find,0,4,0,"T[].reduce(function, U): U"
36,find,0,4,1,filter(function)
36,find,0,4,2,"grep(unknown, function)"
36,find,0,4,3,T[].find(function): T
36,find,0,4,4,function.(): function
36,find,0,4,5,T[].map(function): U[]
36,find,0,4,6,ArrayConstructor.Array(number): any[]
36,find,0,4,7,map(function[])
36,find,0,4,8,"each(unknown, function)"
36,find,0,4,9,map(function)
36,find,0,5,0,T[].filter(function): T[]
36,find,0,5,1,filter(function)
36,find,0,6,0,T[].includes(T): boolean
36,find,0,6,1,T[].indexOf(T): number
36,find,0,6,2,T[].find(function): T
36,find,0,6,3,T[].some(function): boolean
36,find,0,6,4,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
36,find,0,6,5,T[].findIndex(function): number
36,find,0,6,6,number[].contains(number)
36,find,0,6,7,number[].contains(string)
36,find,0,6,8,indexOf(string)
36,find,0,6,9,indexOf(number)
36,find,0,7,0,T[].findIndex(function): number
36,find,0,7,1,T[].filter(function): T[]
36,find,0,7,2,T[].map(function): U[]
36,find,0,7,3,T[].forEach(function): void
36,find,0,7,4,map(function)
36,find,0,7,5,"T[].splice(number, number, T[]): T[]"
36,find,0,7,6,T[].find(function): T
36,find,0,7,7,findIndex(function)
36,find,0,7,8,forEach(function)
36,find,0,7,9,T[].pop(): T
36,find,0,8,0,T[].filter(function): T[]
36,find,0,8,1,filter(function)
36,find,0,9,0,includes(unknown)
36,find,0,9,1,"inArray(number, string[])"
36,find,0,9,2,"has(unknown, boolean)"
36,find,0,9,3,has(object)
36,find,0,9,4,"has(object, number)"
36,find,0,9,5,has(string)
36,find,0,9,6,has(number)
36,find,0,9,7,"ObjectConstructor.defineProperty(T, PropertyKey, PropertyDescriptor & ThisType<any>): T"
36,find,0,9,8,indexOf(unknown)
36,find,0,9,9,"customSlowerSearch(unknown, unknown)"
36,recent,0,0,0,subtract(object)
36,recent,0,0,1,moment(string)
36,recent,0,0,2,String.split(string | RegExp): string[]
36,recent,0,0,3,subtract(unknown)
36,recent,0,0,4,moment(number)
36,recent,0,0,5,format(string)
36,recent,0,0,6,toString()
36,recent,0,0,7,subtract(ObjectConstructor)
36,recent,0,0,8,"subtract(StringConstructor, StringConstructor)"
36,recent,0,0,9,"subtract(NumberConstructor, StringConstructor)"
36,recent,0,1,0,"subtract(unknown, string)"
36,recent,0,1,1,input(string)
36,recent,0,1,2,moment()
36,recent,0,1,3,subtract(unknown)
36,recent,0,1,4,format(string)
36,recent,0,2,0,utc(number)
36,recent,0,2,1,format(string)
36,recent,0,2,2,"subtract(number, string)"
36,recent,0,2,3,diff(unknown)
36,recent,0,2,4,duration(unknown)
36,recent,0,2,5,"add(number, string)"
36,recent,0,2,6,isBefore(unknown)
36,recent,0,2,7,"utc(unknown, string)"
36,recent,0,3,0,moment(unknown)
36,recent,0,3,1,"add(number, string)"
36,recent,0,3,2,"subtract(StringConstructor, NumberConstructor)"
36,recent,0,3,3,moment()
36,recent,0,3,4,"subtract(NumberConstructor, StringConstructor)"
36,recent,0,3,5,"subtract(StringConstructor, StringConstructor)"
36,recent,0,3,6,subtract(unknown)
36,recent,0,3,7,subtract(ObjectConstructor)
36,recent,0,3,8,String.split(string | RegExp): string[]
36,recent,0,3,9,subtract(object)
36,recent,0,4,0,subtract(unknown)
36,recent,0,4,1,format()
36,recent,0,4,2,duration(object)
36,recent,0,4,3,"moment(string, string)"
36,recent,0,4,4,"subtract(number, string)"
36,recent,0,6,0,format(string)
36,recent,0,6,1,"moment(string, string)"
36,recent,0,6,2,moment(unknown)
36,recent,0,6,3,subtract(unknown)
36,recent,0,6,4,"diff(unknown, string)"
36,recent,0,6,5,"add(unknown, string)"
36,recent,0,6,6,"moment(any[], string)"
36,recent,0,6,7,diff(unknown)
36,recent,0,7,0,diff(unknown)
36,recent,0,7,1,valueOf()
36,recent,0,7,2,"moment(string, string)"
36,recent,0,7,3,"moment(unknown, string)"
36,recent,0,8,0,Date.getTime(): number
36,recent,0,9,0,"subtract(number, string, unknown)"
36,recent,0,9,1,"subtract(unknown, string)"
36,recent,0,9,2,moment()
36,recent,0,9,3,"subtract(number, string)"
36,recent,0,9,4,function.date2timestamp(string): number | boolean
36,recent,0,9,5,"Document.write(string[], string, number | boolean): void"
36,recent,0,9,6,"moment(unknown, string)"
36,recent,0,9,7,diff(unknown)
36,recent,0,9,8,subtract(unknown)
36,recent,0,9,9,moment(unknown)
37,sort,0,0,0,T[].sort(function): this
37,sort,0,0,1,sort(function)
37,sort,0,0,2,"sortBy(unknown, string)"
37,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
37,sort,0,0,4,"function.sort_by(string, boolean, function): function"
37,sort,0,0,5,sort(typeof mycomparator)
37,sort,0,0,6,function[].(): function[]
37,sort,0,0,7,"sortBy(any[], object): any[]"
37,sort,0,0,8,reverse()
37,sort,0,0,9,T[].sort(): this
37,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
37,sort,0,1,1,"function[].sortBy(object[], string): any[]"
37,sort,0,2,0,sort(function)
37,sort,0,2,1,T[].sort(function): this
37,sort,0,2,2,T[].push(T[]): number
37,sort,0,3,0,ObjectConstructor.keys(object): string[]
37,sort,0,3,1,T[].sort(function): this
37,sort,0,3,2,sort(typeof compare)
37,sort,0,4,0,T[].reverse(): T[]
37,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
37,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
37,sort,0,4,3,ObjectConstructor.keys(object): string[]
37,sort,0,4,4,T[].sort(): this
37,sort,0,4,5,T[].forEach(function): void
37,sort,0,5,0,sort(function)
37,sort,0,5,1,T[].sort(function): this
37,sort,0,5,2,"object[].sortBy(string, string)"
37,sort,0,5,3,sortBy(string)
37,sort,0,5,4,reverse(unknown)
37,sort,0,5,5,sort(typeof compare)
37,sort,0,5,6,dynamicSort(string): function
37,sort,0,5,7,"dynamicSortMultiple(string, string): function"
37,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
37,sort,0,5,9,"sortBy(object[], string)"
37,sort,0,6,0,T[].sort(function): this
37,sort,0,7,0,T[].sort(function): this
37,sort,0,8,0,T[].sort(function): this
37,sort,0,8,1,sort(function)
37,sort,0,9,0,sort(function)
37,sort,0,9,1,T[].sort(function): this
37,sort,0,9,2,dynamicSort(string): function
37,currency,0,0,0,Number.toFixed(number): string
37,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
37,currency,0,0,2,"String.replace(object, string): string"
37,currency,0,0,3,Number.toLocaleString(): string
37,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
37,currency,0,0,5,"number.formatMoney(number, string, string)"
37,currency,0,0,6,number.format(number)
37,currency,0,0,7,NumberConstructor.Number(unknown): number
37,currency,0,0,8,toFixed(number)
37,currency,0,0,9,StringConstructor.String(unknown): string
37,currency,0,1,0,formatMoney(number)
37,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
37,currency,0,3,0,formatTime(string)
37,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
37,currency,0,3,2,Document.getElementById(string): HTMLElement
37,currency,0,3,3,"moment(string, string)"
37,currency,0,3,4,format(string)
37,currency,0,3,5,T[].forEach(function): void
37,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
37,currency,0,4,1,unshift(unknown)
37,currency,0,4,2,"substr(unknown, number)"
37,currency,0,4,3,formatMoney(unknown)
37,currency,0,5,0,"replace(regex, string)"
37,currency,0,5,1,setInputValue(unknown)
37,currency,0,6,0,formatMoney(number)
37,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
37,currency,0,7,1,"String.replace(string | RegExp, string): string"
37,currency,0,7,2,toFixed(number)
37,currency,0,7,3,"String.replace(object, string): string"
37,currency,0,7,4,Math.abs(number): number
37,currency,0,7,5,Math.trunc(number): number
37,currency,0,7,6,Number.toFixed(): string
37,currency,0,7,7,Number.toFixed(number): string
37,currency,0,7,8,"number.replace(regex, string)"
37,currency,0,7,9,"replace(regex, string)"
37,currency,0,8,0,"format(string, string, number): string"
37,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
37,currency,0,8,2,"String.replace(string | RegExp, string): string"
37,currency,0,8,3,String.trim(): string
37,serve,0,0,0,"get(string, function)"
37,serve,0,1,0,express()
37,serve,0,1,1,Router()
37,serve,0,1,2,"post(string, unknown)"
37,serve,0,1,3,"get(string, unknown)"
37,serve,0,1,4,js()
37,serve,0,1,5,(unknown)
37,serve,0,1,6,"use(string, unknown)"
37,serve,0,1,7,"get(string, function)"
37,serve,0,1,8,"post(unknown, unknown)"
37,serve,0,1,9,route(string)
37,serve,0,2,0,"use(string, function)"
37,serve,0,2,1,"use(string, unknown)"
37,serve,0,3,0,"get(string, function)"
37,serve,0,3,1,T[].forEach(function): void
37,serve,0,3,2,use(unknown)
37,serve,0,3,3,()
37,serve,0,3,4,"join(unknown, string)"
37,serve,0,3,5,function.()
37,serve,0,3,6,express()
37,serve,0,3,7,"use(string, unknown)"
37,serve,0,3,8,"get(number, regex)"
37,serve,0,3,9,"parseInt(string, number): number"
37,serve,0,4,0,use(function)
37,serve,0,5,0,"use(string, unknown)"
37,serve,0,5,1,"post(string, function)"
37,serve,0,5,2,"get(string, function)"
37,serve,0,5,3,use(function)
37,serve,0,5,4,Router()
37,serve,0,5,5,"(unknown, object)"
37,serve,0,6,0,"get(string, function)"
37,serve,0,6,1,"use(string, unknown)"
37,serve,0,6,2,Router()
37,serve,0,6,3,express()
37,serve,0,6,4,"listen(number, function)"
37,serve,0,7,0,"get(string[], function)"
37,serve,0,7,1,"get(string, unknown)"
37,serve,0,7,2,"get(string[], unknown)"
37,serve,0,7,3,"use(function, function)"
37,serve,0,7,4,T[].forEach(function): void
37,serve,0,8,0,listen(number)
37,serve,0,8,1,"get(string, typeof fooRoute)"
37,serve,0,8,2,createServer()
37,serve,0,8,3,()
37,serve,0,8,4,"get(string, function)"
37,serve,0,8,5,"listen(number, function)"
37,serve,0,8,6,get(string[])
37,serve,0,9,0,"get(string, function)"
37,serve,0,9,1,filter(function)
37,serve,0,9,2,"typeof app.use(string, unknown)"
37,serve,0,9,3,typeof app.use(unknown)
37,serve,1,0,0,"use(string, function)"
37,serve,1,0,1,Router()
37,serve,1,0,2,"get(string, function)"
37,serve,1,0,3,()
37,serve,1,0,4,"use(string, unknown)"
37,serve,1,0,5,createServer(unknown)
37,serve,1,0,6,"listen(number, function)"
37,serve,1,0,7,"use(string, typeof sendGreeting)"
37,serve,1,1,0,"post(string, function)"
37,serve,1,1,1,"join(unknown, string)"
37,serve,1,1,2,static(unknown)
37,serve,1,1,3,use(unknown)
37,serve,1,2,0,route(string)
37,serve,1,2,1,post(unknown)
37,serve,1,3,0,"get(string, function)"
37,serve,1,4,0,"listen(number, function)"
37,serve,1,4,1,"get(string, function)"
37,serve,1,4,2,use(function)
37,serve,1,4,3,express()
37,serve,1,5,0,"get(string, function)"
37,serve,1,6,0,"use(string, function)"
37,serve,1,6,1,"use(string, unknown)"
37,serve,1,8,0,listen(number)
37,serve,1,8,1,"use(string, unknown)"
37,serve,1,8,2,"use(string, function)"
37,serve,1,8,3,express()
37,serve,2,0,0,DateConstructor.now(): number
37,serve,2,0,1,Schema(object)
37,serve,2,0,2,"model(string, unknown)"
37,serve,2,0,3,"post(string, function)"
37,serve,2,0,4,Router()
37,serve,2,1,0,"get(string, typeof validate, function)"
37,serve,2,1,1,"get(string, unknown, function)"
37,serve,2,1,2,"get(string, typeof validateUser, function)"
37,serve,2,2,0,create(object)
37,serve,2,3,0,"use(string, function)"
37,serve,2,3,1,urlencoded(object)
37,serve,2,3,2,json()
37,serve,2,3,3,use(unknown)
37,serve,2,3,4,express()
37,serve,2,4,0,addAliases(object)
37,serve,2,6,0,"get(string, function)"
37,serve,2,7,0,"get(string, function)"
37,serve,2,7,1,T[].forEach(function): void
37,serve,2,7,2,use(unknown)
37,serve,2,7,3,()
37,serve,2,7,4,"join(unknown, string)"
37,serve,2,7,5,function.()
37,serve,2,7,6,express()
37,serve,2,7,7,"use(string, unknown)"
37,serve,2,7,8,"get(number, regex)"
37,serve,2,7,9,"parseInt(string, number): number"
37,serve,2,8,0,"get(string, function)"
37,serve,2,9,0,route(string)
37,serve,2,9,1,post(unknown)
37,serve,3,0,0,"get(string, function)"
37,serve,3,1,0,express()
37,serve,3,1,1,Router()
37,serve,3,1,2,"post(string, unknown)"
37,serve,3,1,3,"get(string, unknown)"
37,serve,3,1,4,js()
37,serve,3,1,5,(unknown)
37,serve,3,1,6,"use(string, unknown)"
37,serve,3,1,7,"get(string, function)"
37,serve,3,1,8,"post(unknown, unknown)"
37,serve,3,1,9,route(string)
37,serve,3,2,0,"use(string, function)"
37,serve,3,2,1,"use(string, unknown)"
37,serve,3,3,0,"get(string, function)"
37,serve,3,3,1,T[].forEach(function): void
37,serve,3,3,2,use(unknown)
37,serve,3,3,3,()
37,serve,3,3,4,"join(unknown, string)"
37,serve,3,3,5,function.()
37,serve,3,3,6,express()
37,serve,3,3,7,"use(string, unknown)"
37,serve,3,3,8,"get(number, regex)"
37,serve,3,3,9,"parseInt(string, number): number"
37,serve,3,4,0,use(function)
37,serve,3,5,0,"use(string, unknown)"
37,serve,3,5,1,"post(string, function)"
37,serve,3,5,2,"get(string, function)"
37,serve,3,5,3,use(function)
37,serve,3,5,4,Router()
37,serve,3,5,5,"(unknown, object)"
37,serve,3,6,0,"get(string, function)"
37,serve,3,6,1,"use(string, unknown)"
37,serve,3,6,2,Router()
37,serve,3,6,3,express()
37,serve,3,6,4,"listen(number, function)"
37,serve,3,7,0,"get(string[], function)"
37,serve,3,7,1,"get(string, unknown)"
37,serve,3,7,2,"get(string[], unknown)"
37,serve,3,7,3,"use(function, function)"
37,serve,3,7,4,T[].forEach(function): void
37,serve,3,8,0,listen(number)
37,serve,3,8,1,"get(string, typeof fooRoute)"
37,serve,3,8,2,createServer()
37,serve,3,8,3,()
37,serve,3,8,4,"get(string, function)"
37,serve,3,8,5,"listen(number, function)"
37,serve,3,8,6,get(string[])
37,serve,3,9,0,"get(string, function)"
37,serve,3,9,1,filter(function)
37,serve,3,9,2,"typeof app.use(string, unknown)"
37,serve,3,9,3,typeof app.use(unknown)
37,serve,4,1,0,express()
37,serve,4,1,1,Router()
37,serve,4,1,2,"post(string, unknown)"
37,serve,4,1,3,"get(string, unknown)"
37,serve,4,1,4,js()
37,serve,4,1,5,(unknown)
37,serve,4,1,6,"use(string, unknown)"
37,serve,4,1,7,"get(string, function)"
37,serve,4,1,8,"post(unknown, unknown)"
37,serve,4,1,9,route(string)
37,serve,4,2,0,get(string)
37,serve,4,2,1,"use(string, unknown)"
37,serve,4,3,0,route(string)
37,serve,4,3,1,post(unknown)
37,serve,4,4,0,"use(string, function)"
37,serve,4,4,1,"use(string, unknown)"
37,serve,4,5,0,"post(string, function, unknown, unknown, unknown, unknown, unknown)"
37,serve,4,5,1,"post(string, function)"
37,serve,4,6,0,"get(string, typeof validate, function)"
37,serve,4,6,1,"get(string, unknown, function)"
37,serve,4,6,2,"get(string, typeof validateUser, function)"
37,serve,4,7,0,"get(string, unknown)"
37,serve,4,8,0,"join(unknown, string)"
37,serve,4,8,1,static(unknown)
37,serve,4,8,2,use(unknown)
37,serve,4,9,0,"get(string, function)"
37,serve,5,0,0,"get(string, function)"
37,serve,5,0,1,use(function)
37,serve,5,0,2,"static(string, object)"
37,serve,5,0,3,use(unknown)
37,serve,5,0,4,"listen(number, function)"
37,serve,5,0,5,static(string)
37,serve,5,0,6,"use(string, unknown, function)"
37,serve,5,0,7,express()
37,serve,5,0,8,existsSync(unknown)
37,serve,5,0,9,"header(string, string)"
37,serve,5,1,0,addAliases(object)
37,serve,5,2,0,"get(string, function)"
37,serve,5,2,1,static(string)
37,serve,5,2,2,use(unknown)
37,serve,5,3,0,resolve(string)
37,serve,5,3,1,forEach(function)
37,serve,5,3,2,readdirSync(string)
37,serve,5,3,3,dirname(unknown)
37,serve,5,3,4,"join(unknown, unknown)"
37,serve,5,3,5,getValidFileToUpload()
37,serve,5,3,6,"resolve(unknown, unknown)"
37,serve,5,4,0,"get(string, function)"
37,serve,5,4,1,sendFile(string)
37,serve,5,4,2,use(unknown)
37,serve,5,4,3,static(string)
37,serve,5,4,4,"sendFile(string, object)"
37,serve,5,4,5,express()
37,serve,5,4,6,listen(unknown)
37,serve,5,4,7,cwd()
37,serve,5,4,8,"readFile(string, function)"
37,serve,5,4,9,use(function)
37,serve,5,5,0,"get(string, function)"
37,serve,5,5,1,json(object)
37,serve,5,5,2,JSON.parse(string)
37,serve,5,6,0,static(string)
37,serve,5,6,1,use(unknown)
37,serve,5,6,2,express()
37,serve,5,6,3,listen(number)
37,serve,5,6,4,static(unknown)
37,serve,5,6,5,"join(unknown, string)"
37,serve,5,6,6,"use(string, unknown)"
37,serve,5,6,7,"get(string, function)"
37,serve,5,6,8,configure(function)
37,serve,5,6,9,"listen(number, function)"
37,serve,5,7,0,Router()
37,serve,5,7,1,"get(string, function, unknown)"
37,serve,5,7,2,"use(string, unknown)"
37,serve,5,7,3,express()
37,serve,5,7,4,use(unknown)
37,serve,5,7,5,json()
37,serve,5,7,6,urlencoded(object)
37,serve,5,7,7,"get(string, function)"
37,serve,5,7,8,function.feature(string): function
37,serve,5,7,9,"use(string, function)"
37,serve,5,8,0,parse(unknown)
37,serve,5,8,1,createServer(function)
37,serve,5,8,2,"listen(number, string)"
37,serve,5,8,3,Router()
37,serve,5,8,4,use(function)
37,serve,5,8,5,"use(string, unknown)"
37,serve,5,8,6,get(string)
37,serve,5,8,7,slice(number)
37,serve,5,8,8,split(string)
37,serve,5,8,9,match(string)
37,serve,5,9,0,dirname(unknown)
37,serve,5,9,1,"resolve(unknown, string)"
37,serve,5,9,2,"readFile(unknown, string, unknown)"
37,serve,5,9,3,cwd()
37,serve,5,9,4,"readFile(string, function)"
37,serve,5,9,5,fileURLToPath(string)
37,serve,5,9,6,JSON.parse(string)
37,serve,5,9,7,"readFileSync(unknown, string)"
37,serve,5,9,8,basename(unknown)
37,serve,5,9,9,fileURLToPath(URL)
37,serve,6,0,0,"get(string, function)"
37,serve,6,0,1,"param(string, function)"
37,serve,6,1,0,"get(string, function)"
37,serve,6,2,0,"get(string, function)"
37,serve,6,2,1,param(string)
37,serve,6,2,2,"get(string, function, unknown, unknown, unknown, unknown, unknown)"
37,serve,6,2,3,express()
37,serve,6,2,4,"set(string, string)"
37,serve,6,2,5,use(unknown)
37,serve,6,2,6,static(string)
37,serve,6,2,7,urlencoded(object)
37,serve,6,2,8,json()
37,serve,6,2,9,"post(string, function)"
37,serve,6,3,0,"get(string, function)"
37,serve,6,4,0,"get(regex, function)"
37,serve,6,4,1,"get(string, function)"
37,serve,6,5,0,"get(string, function)"
37,serve,6,6,0,route(string)
37,serve,6,6,1,post(unknown)
37,serve,6,7,0,"get(string, function)"
37,serve,6,8,0,"get(string, function)"
37,serve,7,0,0,"use(string, function)"
37,serve,7,0,1,Router()
37,serve,7,0,2,"get(string, function)"
37,serve,7,0,3,()
37,serve,7,0,4,"use(string, unknown)"
37,serve,7,0,5,createServer(unknown)
37,serve,7,0,6,"listen(number, function)"
37,serve,7,0,7,"use(string, typeof sendGreeting)"
37,serve,7,1,0,route(string)
37,serve,7,1,1,post(unknown)
37,serve,7,2,0,"listen(number, function)"
37,serve,7,2,1,"get(string, function)"
37,serve,7,2,2,use(function)
37,serve,7,2,3,express()
37,serve,7,4,0,"get(string, function)"
37,serve,7,4,1,"param(string, function)"
37,serve,7,6,0,parse(unknown)
37,serve,7,6,1,createServer(function)
37,serve,7,6,2,"listen(number, string)"
37,serve,7,6,3,Router()
37,serve,7,6,4,use(function)
37,serve,7,6,5,"use(string, unknown)"
37,serve,7,6,6,get(string)
37,serve,7,6,7,slice(number)
37,serve,7,6,8,split(string)
37,serve,7,6,9,match(string)
37,serve,7,7,0,test(unknown)
37,serve,7,7,1,pathToRegexp(string)
37,serve,7,9,0,get(string)
37,serve,7,9,1,Router()
37,serve,7,9,2,"get(string, unknown)"
37,serve,8,0,0,"get(string, function)"
37,serve,8,0,1,use(function)
37,serve,8,0,2,"static(string, object)"
37,serve,8,0,3,use(unknown)
37,serve,8,0,4,"listen(number, function)"
37,serve,8,0,5,static(string)
37,serve,8,0,6,"use(string, unknown, function)"
37,serve,8,0,7,express()
37,serve,8,0,8,existsSync(unknown)
37,serve,8,0,9,"header(string, string)"
37,serve,8,1,0,addAliases(object)
37,serve,8,2,0,"get(string, function)"
37,serve,8,2,1,static(string)
37,serve,8,2,2,use(unknown)
37,serve,8,3,0,resolve(string)
37,serve,8,3,1,forEach(function)
37,serve,8,3,2,readdirSync(string)
37,serve,8,3,3,dirname(unknown)
37,serve,8,3,4,"join(unknown, unknown)"
37,serve,8,3,5,getValidFileToUpload()
37,serve,8,3,6,"resolve(unknown, unknown)"
37,serve,8,4,0,"get(string, function)"
37,serve,8,4,1,sendFile(string)
37,serve,8,4,2,use(unknown)
37,serve,8,4,3,static(string)
37,serve,8,4,4,"sendFile(string, object)"
37,serve,8,4,5,express()
37,serve,8,4,6,listen(unknown)
37,serve,8,4,7,cwd()
37,serve,8,4,8,"readFile(string, function)"
37,serve,8,4,9,use(function)
37,serve,8,5,0,"get(string, function)"
37,serve,8,5,1,json(object)
37,serve,8,5,2,JSON.parse(string)
37,serve,8,6,0,static(string)
37,serve,8,6,1,use(unknown)
37,serve,8,6,2,express()
37,serve,8,6,3,listen(number)
37,serve,8,6,4,static(unknown)
37,serve,8,6,5,"join(unknown, string)"
37,serve,8,6,6,"use(string, unknown)"
37,serve,8,6,7,"get(string, function)"
37,serve,8,6,8,configure(function)
37,serve,8,6,9,"listen(number, function)"
37,serve,8,7,0,Router()
37,serve,8,7,1,"get(string, function, unknown)"
37,serve,8,7,2,"use(string, unknown)"
37,serve,8,7,3,express()
37,serve,8,7,4,use(unknown)
37,serve,8,7,5,json()
37,serve,8,7,6,urlencoded(object)
37,serve,8,7,7,"get(string, function)"
37,serve,8,7,8,function.feature(string): function
37,serve,8,7,9,"use(string, function)"
37,serve,8,8,0,parse(unknown)
37,serve,8,8,1,createServer(function)
37,serve,8,8,2,"listen(number, string)"
37,serve,8,8,3,Router()
37,serve,8,8,4,use(function)
37,serve,8,8,5,"use(string, unknown)"
37,serve,8,8,6,get(string)
37,serve,8,8,7,slice(number)
37,serve,8,8,8,split(string)
37,serve,8,8,9,match(string)
37,serve,8,9,0,dirname(unknown)
37,serve,8,9,1,"resolve(unknown, string)"
37,serve,8,9,2,"readFile(unknown, string, unknown)"
37,serve,8,9,3,cwd()
37,serve,8,9,4,"readFile(string, function)"
37,serve,8,9,5,fileURLToPath(string)
37,serve,8,9,6,JSON.parse(string)
37,serve,8,9,7,"readFileSync(unknown, string)"
37,serve,8,9,8,basename(unknown)
37,serve,8,9,9,fileURLToPath(URL)
38,recent,0,0,0,subtract(object)
38,recent,0,0,1,moment(string)
38,recent,0,0,2,String.split(string | RegExp): string[]
38,recent,0,0,3,subtract(unknown)
38,recent,0,0,4,moment(number)
38,recent,0,0,5,format(string)
38,recent,0,0,6,toString()
38,recent,0,0,7,subtract(ObjectConstructor)
38,recent,0,0,8,"subtract(StringConstructor, StringConstructor)"
38,recent,0,0,9,"subtract(NumberConstructor, StringConstructor)"
38,recent,0,1,0,"subtract(unknown, string)"
38,recent,0,1,1,input(string)
38,recent,0,1,2,moment()
38,recent,0,1,3,subtract(unknown)
38,recent,0,1,4,format(string)
38,recent,0,2,0,utc(number)
38,recent,0,2,1,format(string)
38,recent,0,2,2,"subtract(number, string)"
38,recent,0,2,3,diff(unknown)
38,recent,0,2,4,duration(unknown)
38,recent,0,2,5,"add(number, string)"
38,recent,0,2,6,isBefore(unknown)
38,recent,0,2,7,"utc(unknown, string)"
38,recent,0,3,0,diff(unknown)
38,recent,0,3,1,valueOf()
38,recent,0,3,2,"moment(string, string)"
38,recent,0,3,3,"moment(unknown, string)"
38,recent,0,4,0,moment(unknown)
38,recent,0,4,1,"add(number, string)"
38,recent,0,4,2,"subtract(StringConstructor, NumberConstructor)"
38,recent,0,4,3,moment()
38,recent,0,4,4,"subtract(NumberConstructor, StringConstructor)"
38,recent,0,4,5,"subtract(StringConstructor, StringConstructor)"
38,recent,0,4,6,subtract(unknown)
38,recent,0,4,7,subtract(ObjectConstructor)
38,recent,0,4,8,String.split(string | RegExp): string[]
38,recent,0,4,9,subtract(object)
38,recent,0,6,0,Number.toString(): string
38,recent,0,6,1,moment(string)
38,recent,0,6,2,unix()
38,recent,0,6,3,toString()
38,recent,0,6,4,year()
38,recent,0,6,5,"subtract(number, string)"
38,recent,0,6,6,moment(unknown)
38,recent,0,6,7,asDays()
38,recent,0,6,8,diff(unknown)
38,recent,0,6,9,duration(unknown)
38,recent,0,7,0,Date.getTime(): number
38,recent,0,8,0,format(string)
38,recent,0,8,1,"moment(string, string)"
38,recent,0,8,2,moment(unknown)
38,recent,0,8,3,subtract(unknown)
38,recent,0,8,4,"diff(unknown, string)"
38,recent,0,8,5,"add(unknown, string)"
38,recent,0,8,6,"moment(any[], string)"
38,recent,0,8,7,diff(unknown)
39,sort,0,0,0,T[].sort(function): this
39,sort,0,0,1,sort(function)
39,sort,0,0,2,"sortBy(unknown, string)"
39,sort,0,0,3,"function.sort_by(string, boolean, typeof parseInt): function"
39,sort,0,0,4,"function.sort_by(string, boolean, function): function"
39,sort,0,0,5,sort(typeof mycomparator)
39,sort,0,0,6,function[].(): function[]
39,sort,0,0,7,"sortBy(any[], object): any[]"
39,sort,0,0,8,reverse()
39,sort,0,0,9,T[].sort(): this
39,sort,0,1,0,"function[].sortBy(object[], string, number): any[]"
39,sort,0,1,1,"function[].sortBy(object[], string): any[]"
39,sort,0,2,0,sort(function)
39,sort,0,2,1,T[].sort(function): this
39,sort,0,2,2,T[].push(T[]): number
39,sort,0,3,0,ObjectConstructor.keys(object): string[]
39,sort,0,3,1,T[].sort(function): this
39,sort,0,3,2,sort(typeof compare)
39,sort,0,4,0,T[].reverse(): T[]
39,sort,0,4,1,"ObjectConstructor.fromEntries(Iterable<readonly [PropertyKey, T]>): object"
39,sort,0,4,2,"ObjectConstructor.entries(object): [string, T][]"
39,sort,0,4,3,ObjectConstructor.keys(object): string[]
39,sort,0,4,4,T[].sort(): this
39,sort,0,4,5,T[].forEach(function): void
39,sort,0,5,0,sort(function)
39,sort,0,5,1,T[].sort(function): this
39,sort,0,5,2,"object[].sortBy(string, string)"
39,sort,0,5,3,sortBy(string)
39,sort,0,5,4,reverse(unknown)
39,sort,0,5,5,sort(typeof compare)
39,sort,0,5,6,dynamicSort(string): function
39,sort,0,5,7,"dynamicSortMultiple(string, string): function"
39,sort,0,5,8,ArrayConstructor.from(Iterable<T> | ArrayLike<T>): T[]
39,sort,0,5,9,"sortBy(object[], string)"
39,sort,0,6,0,T[].sort(function): this
39,sort,0,7,0,T[].sort(function): this
39,sort,0,8,0,T[].sort(function): this
39,sort,0,8,1,sort(function)
39,sort,0,9,0,sort(function)
39,sort,0,9,1,T[].sort(function): this
39,sort,0,9,2,dynamicSort(string): function
39,currency,0,0,0,Number.toFixed(number): string
39,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
39,currency,0,0,2,"String.replace(object, string): string"
39,currency,0,0,3,Number.toLocaleString(): string
39,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
39,currency,0,0,5,"number.formatMoney(number, string, string)"
39,currency,0,0,6,number.format(number)
39,currency,0,0,7,NumberConstructor.Number(unknown): number
39,currency,0,0,8,toFixed(number)
39,currency,0,0,9,StringConstructor.String(unknown): string
39,currency,0,1,0,formatMoney(number)
39,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
39,currency,0,3,0,formatTime(string)
39,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
39,currency,0,3,2,Document.getElementById(string): HTMLElement
39,currency,0,3,3,"moment(string, string)"
39,currency,0,3,4,format(string)
39,currency,0,3,5,T[].forEach(function): void
39,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
39,currency,0,4,1,unshift(unknown)
39,currency,0,4,2,"substr(unknown, number)"
39,currency,0,4,3,formatMoney(unknown)
39,currency,0,5,0,"replace(regex, string)"
39,currency,0,5,1,setInputValue(unknown)
39,currency,0,6,0,formatMoney(number)
39,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
39,currency,0,7,1,"String.replace(string | RegExp, string): string"
39,currency,0,7,2,toFixed(number)
39,currency,0,7,3,"String.replace(object, string): string"
39,currency,0,7,4,Math.abs(number): number
39,currency,0,7,5,Math.trunc(number): number
39,currency,0,7,6,Number.toFixed(): string
39,currency,0,7,7,Number.toFixed(number): string
39,currency,0,7,8,"number.replace(regex, string)"
39,currency,0,7,9,"replace(regex, string)"
39,currency,0,8,0,"format(string, string, number): string"
39,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
39,currency,0,8,2,"String.replace(string | RegExp, string): string"
39,currency,0,8,3,String.trim(): string
39,serve,0,0,0,static(unknown)
39,serve,0,0,1,"use(string, unknown)"
39,serve,0,0,2,"use(string, function)"
39,serve,0,0,3,express()
39,serve,0,0,4,"join(unknown, string)"
39,serve,0,0,5,"get(string, function)"
39,serve,0,0,6,listen(number)
39,serve,0,1,0,static(string)
39,serve,0,1,1,use(unknown)
39,serve,0,2,0,static(string)
39,serve,0,2,1,use(unknown)
39,serve,0,3,0,static(string)
39,serve,0,3,1,use(unknown)
39,serve,0,3,2,express()
39,serve,0,3,3,listen(number)
39,serve,0,3,4,static(unknown)
39,serve,0,3,5,"join(unknown, string)"
39,serve,0,3,6,"use(string, unknown)"
39,serve,0,3,7,"get(string, function)"
39,serve,0,3,8,configure(function)
39,serve,0,3,9,"listen(number, function)"
39,serve,0,4,0,"join(unknown, string)"
39,serve,0,4,1,static(unknown)
39,serve,0,4,2,"use(string, unknown)"
39,serve,0,5,0,static(string)
39,serve,0,5,1,"use(string, unknown)"
39,serve,0,5,2,"join(unknown, string)"
39,serve,0,5,3,static(unknown)
39,serve,0,5,4,use(unknown)
39,serve,0,7,0,"join(unknown, string)"
39,serve,0,7,1,static(unknown)
39,serve,0,7,2,use(unknown)
39,serve,0,8,0,static(string)
39,serve,0,8,1,use(unknown)
39,serve,0,8,2,"set(string, unknown)"
39,serve,0,8,3,express()
39,serve,0,9,0,"join(unknown, string)"
39,serve,0,9,1,static(unknown)
39,serve,0,9,2,use(unknown)
39,serve,0,9,3,"use(string, unknown)"
40,currency,0,0,0,Number.toFixed(number): string
40,currency,0,0,1,Intl.NumberFormat.format(number | bigint): string
40,currency,0,0,2,"String.replace(object, string): string"
40,currency,0,0,3,Number.toLocaleString(): string
40,currency,0,0,4,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
40,currency,0,0,5,"number.formatMoney(number, string, string)"
40,currency,0,0,6,number.format(number)
40,currency,0,0,7,NumberConstructor.Number(unknown): number
40,currency,0,0,8,toFixed(number)
40,currency,0,0,9,StringConstructor.String(unknown): string
40,currency,0,1,0,formatMoney(number)
40,currency,0,2,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
40,currency,0,3,0,formatTime(string)
40,currency,0,3,1,Intl.NumberFormat.format(number | bigint): string
40,currency,0,3,2,Document.getElementById(string): HTMLElement
40,currency,0,3,3,"moment(string, string)"
40,currency,0,3,4,format(string)
40,currency,0,3,5,T[].forEach(function): void
40,currency,0,4,0,"Number.toLocaleString(Intl.LocalesArgument, Intl.NumberFormatOptions): string"
40,currency,0,4,1,unshift(unknown)
40,currency,0,4,2,"substr(unknown, number)"
40,currency,0,4,3,formatMoney(unknown)
40,currency,0,5,0,"replace(regex, string)"
40,currency,0,5,1,setInputValue(unknown)
40,currency,0,6,0,formatMoney(number)
40,currency,0,7,0,Intl.NumberFormat.format(number | bigint): string
40,currency,0,7,1,"String.replace(string | RegExp, string): string"
40,currency,0,7,2,toFixed(number)
40,currency,0,7,3,"String.replace(object, string): string"
40,currency,0,7,4,Math.abs(number): number
40,currency,0,7,5,Math.trunc(number): number
40,currency,0,7,6,Number.toFixed(): string
40,currency,0,7,7,Number.toFixed(number): string
40,currency,0,7,8,"number.replace(regex, string)"
40,currency,0,7,9,"replace(regex, string)"
40,currency,0,8,0,"format(string, string, number): string"
40,currency,0,8,1,Intl.NumberFormat.format(number | bigint): string
40,currency,0,8,2,"String.replace(string | RegExp, string): string"
40,currency,0,8,3,String.trim(): string
40,find,0,0,0,T[].filter(function): T[]
40,find,0,0,1,"search(string, object[])"
40,find,0,0,2,T[].find(function): T
40,find,0,0,3,find(function)
40,find,0,0,4,indexOf(unknown)
40,find,0,0,5,"fill(string, unknown, number)"
40,find,0,0,6,findIndex(function)
40,find,0,0,7,function.search(string): object
40,find,0,0,8,forEach(function)
40,find,0,0,9,map(function)
40,find,0,1,0,T[].indexOf(T): number
40,find,0,1,1,T[].includes(T): boolean
40,find,0,1,2,"inArray(string, string[])"
40,find,0,1,3,includes(string)
40,find,0,1,4,"inArray(string, unknown)"
40,find,0,1,5,T[].some(function): boolean
40,find,0,1,6,T[].find(function): T
40,find,0,2,0,T[].some(function): boolean
40,find,0,2,1,T[].filter(function): T[]
40,find,0,2,2,T[].findIndex(function): number
40,find,0,2,3,T[].find(function): T
40,find,0,2,4,find(function)
40,find,0,2,5,T[].forEach(function): void
40,find,0,3,0,T[].find(function): T
40,find,0,3,1,T[].filter(function): T[]
40,find,0,3,2,find(function)
40,find,0,3,3,"filterValue(object[], string, number)"
40,find,0,3,4,"filteredArray(object[], string, number): any[]"
40,find,0,3,5,"findWhere(unknown, object)"
40,find,0,3,6,T[].findIndex(function): number
40,find,0,3,7,some(function)
40,find,0,3,8,"select(unknown, function)"
40,find,0,3,9,"reduce(function, null)"
40,find,0,4,0,"T[].reduce(function, U): U"
40,find,0,4,1,filter(function)
40,find,0,4,2,"grep(unknown, function)"
40,find,0,4,3,T[].find(function): T
40,find,0,4,4,function.(): function
40,find,0,4,5,T[].map(function): U[]
40,find,0,4,6,ArrayConstructor.Array(number): any[]
40,find,0,4,7,map(function[])
40,find,0,4,8,"each(unknown, function)"
40,find,0,4,9,map(function)
40,find,0,5,0,T[].filter(function): T[]
40,find,0,5,1,filter(function)
40,recent,0,0,0,moment()
40,recent,0,0,1,"moment(string, string)"
40,recent,0,0,2,isBefore(unknown)
40,recent,0,1,0,forEach(function)
40,recent,0,1,1,moment()
40,recent,0,1,2,format()
40,recent,0,1,3,invalid()
40,recent,0,1,4,isValid()
40,recent,0,2,0,format(string)
40,recent,0,2,1,moment()
40,recent,0,2,2,moment(string)
40,recent,0,2,3,moment(unknown)
40,recent,0,2,4,moment(number)
40,recent,0,2,5,format()
40,recent,0,2,6,"format(Date, string)"
40,recent,0,2,7,"moment(string, string)"
40,recent,0,2,8,locale(string)
40,recent,0,2,9,utc()
40,recent,0,3,0,"moment(string, string)"
40,recent,0,3,1,format(string)
40,recent,0,4,0,dateFormatwithSec(string)
40,recent,0,4,1,"utc(unknown, string)"
40,recent,0,6,0,endOf(string)
40,recent,0,6,1,moment(string)
40,recent,0,6,2,utc()
40,recent,0,6,3,toDate()
40,recent,0,6,4,format(string)
40,recent,0,6,5,utc(string)
40,recent,0,7,0,date(number)
40,recent,0,7,1,"subtract(number, string)"
40,recent,0,7,2,moment()
40,recent,0,7,3,"Date.setMonth(number, number): number"
40,recent,0,7,4,Date.getMonth(): number
40,recent,0,7,5,Date.toString(): string
40,recent,0,8,0,moment()
40,recent,0,8,1,format(string)
40,recent,0,9,0,format(string)
40,recent,0,9,1,moment(unknown)
40,recent,0,9,2,T[].map(function): U[]
40,recent,0,9,3,endOf(string)
40,recent,0,9,4,moment()
40,recent,0,9,5,startOf(string)
40,recent,0,9,6,moment(Date)
40,recent,1,0,0,subtract(object)
40,recent,1,0,1,moment(string)
40,recent,1,0,2,String.split(string | RegExp): string[]
40,recent,1,0,3,subtract(unknown)
40,recent,1,0,4,moment(number)
40,recent,1,0,5,format(string)
40,recent,1,0,6,toString()
40,recent,1,0,7,subtract(ObjectConstructor)
40,recent,1,0,8,"subtract(StringConstructor, StringConstructor)"
40,recent,1,0,9,"subtract(NumberConstructor, StringConstructor)"
40,recent,1,1,0,Number.toString(): string
40,recent,1,1,1,moment(string)
40,recent,1,1,2,unix()
40,recent,1,1,3,toString()
40,recent,1,1,4,year()
40,recent,1,1,5,"subtract(number, string)"
40,recent,1,1,6,moment(unknown)
40,recent,1,1,7,asDays()
40,recent,1,1,8,diff(unknown)
40,recent,1,1,9,duration(unknown)
40,recent,1,2,0,"subtract(string, number)"
40,recent,1,2,1,moment()
40,recent,1,2,2,"subtract(number, string)"
40,recent,1,2,3,format(string)
40,recent,1,3,0,diff(unknown)
40,recent,1,3,1,valueOf()
40,recent,1,3,2,"moment(string, string)"
40,recent,1,3,3,"moment(unknown, string)"
40,recent,1,4,0,function.halfBellTimer(): void
40,recent,1,5,0,clone()
40,recent,1,5,1,"subtract(number, string)"
40,recent,1,5,2,format()
40,recent,1,5,3,moment(string)
40,recent,1,7,0,"subtract(number, string)"
40,recent,1,7,1,format(string)
40,recent,1,7,2,moment()
40,recent,1,7,3,toDate()
40,recent,1,7,4,moment(Date)
40,recent,1,7,5,duration(object)
40,recent,1,7,6,subtract(unknown)
40,recent,1,7,7,"subtract(string, number)"
40,recent,1,7,8,format()
40,recent,1,7,9,"moment(string, string)"
40,recent,1,8,0,utc(number)
40,recent,1,8,1,format(string)
40,recent,1,8,2,"subtract(number, string)"
40,recent,1,8,3,diff(unknown)
40,recent,1,8,4,duration(unknown)
40,recent,1,8,5,"add(number, string)"
40,recent,1,8,6,isBefore(unknown)
40,recent,1,8,7,"utc(unknown, string)"
40,recent,1,9,0,"subtract(number, string, unknown)"
40,recent,1,9,1,"subtract(unknown, string)"
40,recent,1,9,2,moment()
40,recent,1,9,3,"subtract(number, string)"
40,recent,1,9,4,function.date2timestamp(string): number | boolean
40,recent,1,9,5,"Document.write(string[], string, number | boolean): void"
40,recent,1,9,6,"moment(unknown, string)"
40,recent,1,9,7,diff(unknown)
40,recent,1,9,8,subtract(unknown)
40,recent,1,9,9,moment(unknown)
